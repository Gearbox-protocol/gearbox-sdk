"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimZapFormatter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "rewardContracts",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "extraRewardContracts",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "tokenRewardContracts",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "tokenRewardTokens",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "depositCrvMaxAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minAmountOut",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "depositCvxMaxAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "spendCvxAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "options",
                type: "uint256",
            },
        ],
        name: "claimRewards",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506102e5806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a7b87f214610030575b600080fd5b6101d9600480360361012081101561004757600080fd5b810190808035906020019064010000000081111561006457600080fd5b82018360208201111561007657600080fd5b8035906020019184602083028401116401000000008311171561009857600080fd5b9091929391929390803590602001906401000000008111156100b957600080fd5b8201836020820111156100cb57600080fd5b803590602001918460208302840111640100000000831117156100ed57600080fd5b90919293919293908035906020019064010000000081111561010e57600080fd5b82018360208201111561012057600080fd5b8035906020019184602083028401116401000000008311171561014257600080fd5b90919293919293908035906020019064010000000081111561016357600080fd5b82018360208201111561017557600080fd5b8035906020019184602083028401116401000000008311171561019757600080fd5b90919293919293908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610254565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102195780820151818401526020810190506101fe565b50505050905090810190601f1680156102465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090509d9c5050505050505050505050505056fea264697066735822122029ab5a73f680b051fecfd765c89943c9e9ad5babe8cdc3215377b871e9ae6ffc64736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ClaimZapFormatter__factory = /** @class */ (function (_super) {
    __extends(ClaimZapFormatter__factory, _super);
    function ClaimZapFormatter__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ClaimZapFormatter__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ClaimZapFormatter__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ClaimZapFormatter__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ClaimZapFormatter__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ClaimZapFormatter__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ClaimZapFormatter__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ClaimZapFormatter__factory.bytecode = _bytecode;
    ClaimZapFormatter__factory.abi = _abi;
    return ClaimZapFormatter__factory;
}(ethers_1.ContractFactory));
exports.ClaimZapFormatter__factory = ClaimZapFormatter__factory;
