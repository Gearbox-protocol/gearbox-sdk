"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CurveLP3PriceFeed__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "addressProvider",
                type: "address",
            },
            {
                internalType: "address",
                name: "_curvePool",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed1",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed2",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed3",
                type: "address",
            },
            {
                internalType: "string",
                name: "_description",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ChainPriceStaleException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectLimitsException",
        type: "error",
    },
    {
        inputs: [],
        name: "NotImplementedException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceFeedRequiresAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceOracleNotExistsException",
        type: "error",
    },
    {
        inputs: [],
        name: "ValueOutOfRangeExpcetion",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroPriceException",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
            },
        ],
        name: "NewLimiterParams",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [],
        name: "curvePool",
        outputs: [
            {
                internalType: "contract ICurvePool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimalsDivider",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "delta",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "dependsOnAddress",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "description",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        name: "getRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "latestRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lowerBound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed1",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed2",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed3",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeedType",
        outputs: [
            {
                internalType: "enum PriceFeedType",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_lowerBound",
                type: "uint256",
            },
        ],
        name: "setLimiter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "skipPriceCheck",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "upperBound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x6101606040523480156200001257600080fd5b506040516200193838038062001938833981016040819052620000359162000402565b6000805460ff1916905560408051808201909152600281526105a360f41b6020820152869086908390839060c890839083906001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000519565b60405180910390fd5b50806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010091906200054e565b6001600160a01b031660805250805162000122906002906020840190620002f6565b505060a052506001600160a01b0382166200015057604051635919af9760e11b815260040160405180910390fd5b6001600160a01b03821660c0819052670de0b6b3a764000060e05260408051630176f71760e71b815290516000929163bb7b8b809160048083019260209291908290030181865afa158015620001aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d0919062000573565b9050620001dd8162000256565b505050506001600160a01b0384161580620001ff57506001600160a01b038316155b806200021257506001600160a01b038216155b156200023157604051635919af9760e11b815260040160405180910390fd5b506001600160a01b039283166101005290821661012052166101405250620006409050565b8062000275576040516309aadd6f60e41b815260040160405180910390fd5b60018190557f82e7ee47180a631312683eeb2a85ad264c9af490d54de5a75bbdb95b968c6de281620002a781620002c2565b6040805192835260208301919091520160405180910390a150565b60a05160009061271090620002d89082620005a3565b620002e49084620005be565b620002f09190620005e0565b92915050565b828054620003049062000603565b90600052602060002090601f01602090048101928262000328576000855562000373565b82601f106200034357805160ff191683800117855562000373565b8280016001018555821562000373579182015b828111156200037357825182559160200191906001019062000356565b506200038192915062000385565b5090565b5b8082111562000381576000815560010162000386565b80516001600160a01b0381168114620003b457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003ec578181015183820152602001620003d2565b83811115620003fc576000848401525b50505050565b60008060008060008060c087890312156200041c57600080fd5b62000427876200039c565b955062000437602088016200039c565b945062000447604088016200039c565b935062000457606088016200039c565b925062000467608088016200039c565b60a08801519092506001600160401b03808211156200048557600080fd5b818901915089601f8301126200049a57600080fd5b815181811115620004af57620004af620003b9565b604051601f8201601f19908116603f01168101908382118183101715620004da57620004da620003b9565b816040528281528c6020848701011115620004f457600080fd5b62000507836020830160208801620003cf565b80955050505050509295509295509295565b60208152600082518060208401526200053a816040850160208701620003cf565b601f01601f19169190910160400192915050565b6000602082840312156200056157600080fd5b6200056c826200039c565b9392505050565b6000602082840312156200058657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620005b957620005b96200058d565b500190565b6000816000190483118215151615620005db57620005db6200058d565b500290565b600082620005fe57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200061857607f821691505b602082108114156200063a57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051611265620006d360003960008181610235015261095d015260008181610364015261089e01526000818161031a01526107f70152600081816102f30152610ab80152600081816101b00152610a1e0152600081816101760152610ca50152600081816103bc0152818161057a01526106eb01526112656000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063975c19ab116100cd578063b09ad8a011610081578063d62ada1111610066578063d62ada1114610357578063e5693f411461035f578063feaf968c1461038657600080fd5b8063b09ad8a01461033c578063bc489a651461034457600080fd5b8063a384d6ff116100b2578063a384d6ff146102e5578063a834559e146102ee578063ab0ca0e11461031557600080fd5b8063975c19ab146102935780639a6fc8f51461029b57600080fd5b8063427cb6fe116101245780635c975abb116101095780635c975abb1461025f5780637284e416146102765780638456cb591461028b57600080fd5b8063427cb6fe1461023057806354fd4d501461025757600080fd5b8063313ce56711610155578063313ce567146101f75780633f4ba83a146102115780633fd0875f1461021b57600080fd5b806312b495a814610171578063218751b2146101ab575b600080fd5b6101987f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101d27f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a2565b6101ff600881565b60405160ff90911681526020016101a2565b61021961038e565b005b610223600381565b6040516101a29190610e54565b6101d27f000000000000000000000000000000000000000000000000000000000000000081565b610198600181565b60005460ff165b60405190151581526020016101a2565b61027e6104be565b6040516101a29190610e95565b61021961054c565b610266600081565b6102ae6102a9366004610f20565b610671565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016101a2565b61019860015481565b6101987f000000000000000000000000000000000000000000000000000000000000000081565b6101d27f000000000000000000000000000000000000000000000000000000000000000081565b6101986106ab565b610219610352366004610f44565b6106bd565b610266600181565b6101d27f000000000000000000000000000000000000000000000000000000000000000081565b6102ae6107e6565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190610f5d565b6040518060400160405280600481526020017f41434c3100000000000000000000000000000000000000000000000000000000815250906104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9190610e95565b60405180910390fd5b506104bc610afa565b565b600280546104cb90610f7f565b80601f01602080910402602001604051908101604052809291908181526020018280546104f790610f7f565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050505081565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610f5d565b6040518060400160405280600481526020017f41434c310000000000000000000000000000000000000000000000000000000081525090610668576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9190610e95565b506104bc610bdb565b60008060008060006040517f24e46f7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106b8600154610c9b565b905090565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610f5d565b6040518060400160405280600481526020017f41434c3200000000000000000000000000000000000000000000000000000000815250906107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9190610e95565b506107e381610ce4565b50565b6000806000806000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610fd3565b939d50919b5099509750955061089c8a8a8989610d66565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190610fd3565b93985091965094509250905061094385858484610d66565b8884121561095b578499508398508297508196508095505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190610fd3565b939850919650945092509050610a0285858484610d66565b88841215610a1a578499508398508297508196508095505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab919061102b565b9050610ab681610e01565b7f0000000000000000000000000000000000000000000000000000000000000000610ae1828c611073565b610aeb919061115e565b99505050505050509091929394565b60005460ff16610b66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104aa565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005460ff1615610c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104aa565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bb13390565b6000612710610cca7f0000000000000000000000000000000000000000000000000000000000000000826111c6565b610cd490846111de565b610cde919061121b565b92915050565b80610d1b576040517f9aadd6f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018190557f82e7ee47180a631312683eeb2a85ad264c9af490d54de5a75bbdb95b968c6de281610d4b81610c9b565b6040805192835260208301919091520160405180910390a150565b60008313610da0576040517f56e05d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff161080610dc4575081155b15610dfb576040517fb1cf675500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60015480821080610e195750610e1681610c9b565b82115b15610e50576040517fb416da7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6020810160068310610e8f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600060208083528351808285015260005b81811015610ec257858101830151858201604001528201610ea6565b81811115610ed4576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b69ffffffffffffffffffff811681146107e357600080fd5b600060208284031215610f3257600080fd5b8135610f3d81610f08565b9392505050565b600060208284031215610f5657600080fd5b5035919050565b600060208284031215610f6f57600080fd5b81518015158114610f3d57600080fd5b600181811c90821680610f9357607f821691505b60208210811415610fcd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080600080600060a08688031215610feb57600080fd5b8551610ff681610f08565b80955050602086015193506040860151925060608601519150608086015161101d81610f08565b809150509295509295909350565b60006020828403121561103d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156110b4576110b4611044565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156110ef576110ef611044565b6000871292508782058712848416161561110b5761110b611044565b8785058712818416161561112157611121611044565b505050929093029392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261116d5761116d61112f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156111c1576111c1611044565b500590565b600082198211156111d9576111d9611044565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561121657611216611044565b500290565b60008261122a5761122a61112f565b50049056fea2646970667358221220d80d99a715fa2ad04f60c54916366365e02dd26e79f64beba5bb0f20f52c2c2964736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CurveLP3PriceFeed__factory = /** @class */ (function (_super) {
    __extends(CurveLP3PriceFeed__factory, _super);
    function CurveLP3PriceFeed__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CurveLP3PriceFeed__factory.prototype.deploy = function (addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _description, overrides) {
        return _super.prototype.deploy.call(this, addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _description, overrides || {});
    };
    CurveLP3PriceFeed__factory.prototype.getDeployTransaction = function (addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _description, overrides) {
        return _super.prototype.getDeployTransaction.call(this, addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _description, overrides || {});
    };
    CurveLP3PriceFeed__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CurveLP3PriceFeed__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CurveLP3PriceFeed__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CurveLP3PriceFeed__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CurveLP3PriceFeed__factory.bytecode = _bytecode;
    CurveLP3PriceFeed__factory.abi = _abi;
    return CurveLP3PriceFeed__factory;
}(ethers_1.ContractFactory));
exports.CurveLP3PriceFeed__factory = CurveLP3PriceFeed__factory;
