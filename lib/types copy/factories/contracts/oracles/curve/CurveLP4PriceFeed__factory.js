"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CurveLP4PriceFeed__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "addressProvider",
                type: "address",
            },
            {
                internalType: "address",
                name: "_curvePool",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed1",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed2",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed3",
                type: "address",
            },
            {
                internalType: "address",
                name: "_priceFeed4",
                type: "address",
            },
            {
                internalType: "string",
                name: "_description",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ChainPriceStaleException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectLimitsException",
        type: "error",
    },
    {
        inputs: [],
        name: "NotImplementedException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceFeedRequiresAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceOracleNotExistsException",
        type: "error",
    },
    {
        inputs: [],
        name: "ValueOutOfRangeExpcetion",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroPriceException",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
            },
        ],
        name: "NewLimiterParams",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [],
        name: "curvePool",
        outputs: [
            {
                internalType: "contract ICurvePool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimalsDivider",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "delta",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "dependsOnAddress",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "description",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        name: "getRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "latestRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lowerBound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed1",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed2",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed3",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeed4",
        outputs: [
            {
                internalType: "contract AggregatorV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceFeedType",
        outputs: [
            {
                internalType: "enum PriceFeedType",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_lowerBound",
                type: "uint256",
            },
        ],
        name: "setLimiter",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "skipPriceCheck",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "upperBound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x6101806040523480156200001257600080fd5b5060405162001a6838038062001a6883398101604081905262000035916200041b565b6000805460ff1916905560408051808201909152600281526105a360f41b6020820152879087908390839060c890839083906001600160a01b0382166200009a5760405162461bcd60e51b815260040162000091919062000546565b60405180910390fd5b50806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010091906200057b565b6001600160a01b0316608052508051620001229060029060208401906200030f565b505060a052506001600160a01b0382166200015057604051635919af9760e11b815260040160405180910390fd5b6001600160a01b03821660c0819052670de0b6b3a764000060e05260408051630176f71760e71b815290516000929163bb7b8b809160048083019260209291908290030181865afa158015620001aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d09190620005a0565b9050620001dd816200026f565b505050506001600160a01b0385161580620001ff57506001600160a01b038416155b806200021257506001600160a01b038316155b806200022557506001600160a01b038216155b156200024457604051635919af9760e11b815260040160405180910390fd5b506001600160a01b0393841661010052918316610120528216610140521661016052506200066d9050565b806200028e576040516309aadd6f60e41b815260040160405180910390fd5b60018190557f82e7ee47180a631312683eeb2a85ad264c9af490d54de5a75bbdb95b968c6de281620002c081620002db565b6040805192835260208301919091520160405180910390a150565b60a05160009061271090620002f19082620005d0565b620002fd9084620005eb565b6200030991906200060d565b92915050565b8280546200031d9062000630565b90600052602060002090601f0160209004810192826200034157600085556200038c565b82601f106200035c57805160ff19168380011785556200038c565b828001600101855582156200038c579182015b828111156200038c5782518255916020019190600101906200036f565b506200039a9291506200039e565b5090565b5b808211156200039a57600081556001016200039f565b80516001600160a01b0381168114620003cd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000405578181015183820152602001620003eb565b8381111562000415576000848401525b50505050565b600080600080600080600060e0888a0312156200043757600080fd5b6200044288620003b5565b96506200045260208901620003b5565b95506200046260408901620003b5565b94506200047260608901620003b5565b93506200048260808901620003b5565b92506200049260a08901620003b5565b60c08901519092506001600160401b0380821115620004b057600080fd5b818a0191508a601f830112620004c557600080fd5b815181811115620004da57620004da620003d2565b604051601f8201601f19908116603f01168101908382118183101715620005055762000505620003d2565b816040528281528d60208487010111156200051f57600080fd5b62000532836020830160208801620003e8565b809550505050505092959891949750929550565b602081526000825180602084015262000567816040850160208701620003e8565b601f01601f19169190910160400192915050565b6000602082840312156200058e57600080fd5b6200059982620003b5565b9392505050565b600060208284031215620005b357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620005e657620005e6620005ba565b500190565b6000816000190483118215151615620006085762000608620005ba565b500290565b6000826200062b57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200064557607f821691505b602082108114156200066757634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051611356620007126000396000818161029b0152610a4e015260008181610240015261098f01526000818161039601526108d001526000818161034c01526108290152600081816103250152610ba90152600081816101bb0152610b0f0152600081816101810152610d960152600081816103ee015281816105ac015261071d01526113566000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638456cb59116100d8578063ab0ca0e11161008c578063d62ada1111610066578063d62ada1114610389578063e5693f4114610391578063feaf968c146103b857600080fd5b8063ab0ca0e114610347578063b09ad8a01461036e578063bc489a651461037657600080fd5b80639a6fc8f5116100bd5780639a6fc8f5146102cd578063a384d6ff14610317578063a834559e1461032057600080fd5b80638456cb59146102bd578063975c19ab146102c557600080fd5b8063427cb6fe1161012f5780635c975abb116101145780635c975abb1461026a5780637284e416146102815780637aac1c481461029657600080fd5b8063427cb6fe1461023b57806354fd4d501461026257600080fd5b8063313ce56711610160578063313ce567146102025780633f4ba83a1461021c5780633fd0875f1461022657600080fd5b806312b495a81461017c578063218751b2146101b6575b600080fd5b6101a37f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ad565b61020a600881565b60405160ff90911681526020016101ad565b6102246103c0565b005b61022e600481565b6040516101ad9190610f45565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b6101a3600181565b60005460ff165b60405190151581526020016101ad565b6102896104f0565b6040516101ad9190610f86565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b61022461057e565b610271600081565b6102e06102db366004611011565b6106a3565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016101ad565b6101a360015481565b6101a37f000000000000000000000000000000000000000000000000000000000000000081565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b6101a36106dd565b610224610384366004611035565b6106ef565b610271600181565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b6102e0610818565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa15801561044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046e919061104e565b6040518060400160405280600481526020017f41434c3100000000000000000000000000000000000000000000000000000000815250906104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc9190610f86565b60405180910390fd5b506104ee610beb565b565b600280546104fd90611070565b80601f016020809104026020016040519081016040528092919081815260200182805461052990611070565b80156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b505050505081565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c919061104e565b6040518060400160405280600481526020017f41434c31000000000000000000000000000000000000000000000000000000008152509061069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc9190610f86565b506104ee610ccc565b60008060008060006040517f24e46f7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106ea600154610d8c565b905090565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d919061104e565b6040518060400160405280600481526020017f41434c32000000000000000000000000000000000000000000000000000000008152509061080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc9190610f86565b5061081581610dd5565b50565b6000806000806000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b691906110c4565b939d50919b509950975095506108ce8a8a8989610e57565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d91906110c4565b93985091965094509250905061097585858484610e57565b8884121561098d578499508398508297508196508095505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c91906110c4565b939850919650945092509050610a3485858484610e57565b88841215610a4c578499508398508297508196508095505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb91906110c4565b939850919650945092509050610af385858484610e57565b88841215610b0b578499508398508297508196508095505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c919061111c565b9050610ba781610ef2565b7f0000000000000000000000000000000000000000000000000000000000000000610bd2828c611164565b610bdc919061124f565b99505050505050509091929394565b60005460ff16610c57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104dc565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005460ff1615610d39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104dc565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ca23390565b6000612710610dbb7f0000000000000000000000000000000000000000000000000000000000000000826112b7565b610dc590846112cf565b610dcf919061130c565b92915050565b80610e0c576040517f9aadd6f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018190557f82e7ee47180a631312683eeb2a85ad264c9af490d54de5a75bbdb95b968c6de281610e3c81610d8c565b6040805192835260208301919091520160405180910390a150565b60008313610e91576040517f56e05d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff161080610eb5575081155b15610eec576040517fb1cf675500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60015480821080610f0a5750610f0781610d8c565b82115b15610f41576040517fb416da7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6020810160068310610f80577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600060208083528351808285015260005b81811015610fb357858101830151858201604001528201610f97565b81811115610fc5576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b69ffffffffffffffffffff8116811461081557600080fd5b60006020828403121561102357600080fd5b813561102e81610ff9565b9392505050565b60006020828403121561104757600080fd5b5035919050565b60006020828403121561106057600080fd5b8151801515811461102e57600080fd5b600181811c9082168061108457607f821691505b602082108114156110be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080600080600060a086880312156110dc57600080fd5b85516110e781610ff9565b80955050602086015193506040860151925060608601519150608086015161110e81610ff9565b809150509295509295909350565b60006020828403121561112e57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156111a5576111a5611135565b7f800000000000000000000000000000000000000000000000000000000000000060008712868205881281841616156111e0576111e0611135565b600087129250878205871284841616156111fc576111fc611135565b8785058712818416161561121257611212611135565b505050929093029392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261125e5761125e611220565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156112b2576112b2611135565b500590565b600082198211156112ca576112ca611135565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561130757611307611135565b500290565b60008261131b5761131b611220565b50049056fea264697066735822122050ed124082a71985329f3c4585306d6168eb38057d42a9e406f21fe0f82696a264736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CurveLP4PriceFeed__factory = /** @class */ (function (_super) {
    __extends(CurveLP4PriceFeed__factory, _super);
    function CurveLP4PriceFeed__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CurveLP4PriceFeed__factory.prototype.deploy = function (addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _priceFeed4, _description, overrides) {
        return _super.prototype.deploy.call(this, addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _priceFeed4, _description, overrides || {});
    };
    CurveLP4PriceFeed__factory.prototype.getDeployTransaction = function (addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _priceFeed4, _description, overrides) {
        return _super.prototype.getDeployTransaction.call(this, addressProvider, _curvePool, _priceFeed1, _priceFeed2, _priceFeed3, _priceFeed4, _description, overrides || {});
    };
    CurveLP4PriceFeed__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CurveLP4PriceFeed__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CurveLP4PriceFeed__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CurveLP4PriceFeed__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CurveLP4PriceFeed__factory.bytecode = _bytecode;
    CurveLP4PriceFeed__factory.abi = _abi;
    return CurveLP4PriceFeed__factory;
}(ethers_1.ContractFactory));
exports.CurveLP4PriceFeed__factory = CurveLP4PriceFeed__factory;
