"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IUniversalAdapter__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "TokenIsNotInAllowedList",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "expected",
                type: "address",
            },
            {
                internalType: "address",
                name: "actual",
                type: "address",
            },
        ],
        name: "UnexpectedCreditAccountException",
        type: "error",
    },
    {
        inputs: [],
        name: "_gearboxAdapterType",
        outputs: [
            {
                internalType: "enum AdapterType",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "_gearboxAdapterVersion",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "creditFacade",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "creditManager",
        outputs: [
            {
                internalType: "contract ICreditManagerV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "spender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                ],
                internalType: "struct RevocationPair[]",
                name: "revocations",
                type: "tuple[]",
            },
        ],
        name: "revokeAdapterAllowances",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "spender",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                ],
                internalType: "struct RevocationPair[]",
                name: "revocations",
                type: "tuple[]",
            },
            {
                internalType: "address",
                name: "expectedCreditAccount",
                type: "address",
            },
        ],
        name: "revokeAdapterAllowances",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "targetContract",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var IUniversalAdapter__factory = /** @class */ (function () {
    function IUniversalAdapter__factory() {
    }
    IUniversalAdapter__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IUniversalAdapter__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IUniversalAdapter__factory.abi = _abi;
    return IUniversalAdapter__factory;
}());
exports.IUniversalAdapter__factory = IUniversalAdapter__factory;
