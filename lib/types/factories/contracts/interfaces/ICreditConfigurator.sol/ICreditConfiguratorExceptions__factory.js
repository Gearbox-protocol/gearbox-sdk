"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ICreditConfiguratorExceptions__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "AdapterUsedTwiceException",
        type: "error",
    },
    {
        inputs: [],
        name: "ChiThresholdMoreOneException",
        type: "error",
    },
    {
        inputs: [],
        name: "ContractNotInAllowedList",
        type: "error",
    },
    {
        inputs: [],
        name: "CreditManagerOrFacadeUsedAsAllowContractsException",
        type: "error",
    },
    {
        inputs: [],
        name: "DegenNFTnotSetException",
        type: "error",
    },
    {
        inputs: [],
        name: "FastCheckNotCoverCollateralDropException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncompatibleContractException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectFeesException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectLimitsException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectLiquidationThresholdException",
        type: "error",
    },
    {
        inputs: [],
        name: "SetLTForUnderlyingException",
        type: "error",
    },
];
var ICreditConfiguratorExceptions__factory = /** @class */ (function () {
    function ICreditConfiguratorExceptions__factory() {
    }
    ICreditConfiguratorExceptions__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ICreditConfiguratorExceptions__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ICreditConfiguratorExceptions__factory.abi = _abi;
    return ICreditConfiguratorExceptions__factory;
}());
exports.ICreditConfiguratorExceptions__factory = ICreditConfiguratorExceptions__factory;
