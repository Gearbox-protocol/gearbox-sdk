"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TotalValueCalculator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_creditFacade",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "creditAccount",
                type: "address",
            },
        ],
        name: "saveTotalValue",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b5060405161021c38038061021c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161019261008a6000396000608a01526101926000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806355eb724114610030575b600080fd5b61004361003e3660046100fb565b610045565b005b6040517fc7de38a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c7de38a6906024016040805180830381865afa1580156100d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f49190610138565b6000555050565b60006020828403121561010d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461013157600080fd5b9392505050565b6000806040838503121561014b57600080fd5b50508051602090910151909290915056fea26469706673582212202b76890b2e78ad5dad5924d6cd8099f674fa7a2fb7697b9d62f687f8a23bdc2464736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var TotalValueCalculator__factory = /** @class */ (function (_super) {
    __extends(TotalValueCalculator__factory, _super);
    function TotalValueCalculator__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    TotalValueCalculator__factory.prototype.deploy = function (_creditFacade, overrides) {
        return _super.prototype.deploy.call(this, _creditFacade, overrides || {});
    };
    TotalValueCalculator__factory.prototype.getDeployTransaction = function (_creditFacade, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _creditFacade, overrides || {});
    };
    TotalValueCalculator__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    TotalValueCalculator__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    TotalValueCalculator__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    TotalValueCalculator__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    TotalValueCalculator__factory.bytecode = _bytecode;
    TotalValueCalculator__factory.abi = _abi;
    return TotalValueCalculator__factory;
}(ethers_1.ContractFactory));
exports.TotalValueCalculator__factory = TotalValueCalculator__factory;
