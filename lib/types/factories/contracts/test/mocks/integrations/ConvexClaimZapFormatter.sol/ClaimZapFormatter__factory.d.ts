import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ClaimZapFormatter, ClaimZapFormatterInterface } from "../../../../../../contracts/test/mocks/integrations/ConvexClaimZapFormatter.sol/ClaimZapFormatter";
declare type ClaimZapFormatterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ClaimZapFormatter__factory extends ContractFactory {
    constructor(...args: ClaimZapFormatterConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ClaimZapFormatter>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ClaimZapFormatter;
    connect(signer: Signer): ClaimZapFormatter__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506102a7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a7b87f214610030575b600080fd5b6101af600480360361012081101561004757600080fd5b81019060208101813564010000000081111561006257600080fd5b82018360208201111561007457600080fd5b8035906020019184602083028401116401000000008311171561009657600080fd5b9193909290916020810190356401000000008111156100b457600080fd5b8201836020820111156100c657600080fd5b803590602001918460208302840111640100000000831117156100e857600080fd5b91939092909160208101903564010000000081111561010657600080fd5b82018360208201111561011857600080fd5b8035906020019184602083028401116401000000008311171561013a57600080fd5b91939092909160208101903564010000000081111561015857600080fd5b82018360208201111561016a57600080fd5b8035906020019184602083028401116401000000008311171561018c57600080fd5b919350915080359060208101359060408101359060608101359060800135610224565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e95781810151838201526020016101d1565b50505050905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050509d9c5050505050505050505050505056fea2646970667358221220f4364b0d912b5e7ebd94c0587a3af74b2eef1de89d4d5a0df4eaf74317830fe264736f6c634300080a0033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): ClaimZapFormatterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ClaimZapFormatter;
}
export {};
