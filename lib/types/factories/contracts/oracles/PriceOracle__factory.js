"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceOracle__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "addressProvider",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "priceFeed",
                        type: "address",
                    },
                ],
                internalType: "struct PriceFeedConfig[]",
                name: "defaults",
                type: "tuple[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "AddressIsNotContractException",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotConfiguratorException",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotPausableAdminException",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotUnPausableAdminException",
        type: "error",
    },
    {
        inputs: [],
        name: "ChainPriceStaleException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectPriceFeedException",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectTokenContractException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceFeedRequiresAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "PriceOracleNotExistsException",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroPriceException",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "priceFeed",
                type: "address",
            },
        ],
        name: "NewPriceFeed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [],
        name: "_acl",
        outputs: [
            {
                internalType: "contract ACL",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "priceFeed",
                type: "address",
            },
        ],
        name: "addPriceFeed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "creditAccount",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "tokenFrom",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenTo",
                type: "address",
            },
        ],
        name: "convert",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "creditAccount",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "convertFromUSD",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "creditAccount",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "convertToUSD",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "decimals",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amountFrom",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "tokenFrom",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amountTo",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "tokenTo",
                type: "address",
            },
        ],
        name: "fastCheck",
        outputs: [
            {
                internalType: "uint256",
                name: "collateralFrom",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "collateralTo",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "creditAccount",
                type: "address",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "priceFeeds",
        outputs: [
            {
                internalType: "address",
                name: "priceFeed",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "priceFeedsWithFlags",
        outputs: [
            {
                internalType: "address",
                name: "priceFeed",
                type: "address",
            },
            {
                internalType: "bool",
                name: "dependsOnAddress",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "skipCheck",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60a06040523480156200001157600080fd5b506040516200207638038062002076833981016040819052620000349162000736565b6000805460ff19169055816001600160a01b0381166200006757604051635919af9760e11b815260040160405180910390fd5b806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cc919062000838565b6001600160a01b031660805250805160005b818110156200014257620001398382815181106200010057620001006200085d565b6020026020010151600001518483815181106200012157620001216200085d565b6020026020010151602001516200014c60201b60201c565b600101620000de565b5050505062000a4f565b6001600160a01b03821615806200016a57506001600160a01b038116155b156200018957604051635919af9760e11b815260040160405180910390fd5b620001a8826001600160a01b0316620005f160201b620008741760201c565b620001d65760405163df4c572d60e01b81526001600160a01b03831660048201526024015b60405180910390fd5b620001f5816001600160a01b0316620005f160201b620008741760201c565b6200021f5760405163df4c572d60e01b81526001600160a01b0382166004820152602401620001cd565b816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156200027c575060408051601f3d908101601f19168201909252620002799181019062000873565b60015b6200029a5760405163528ca31d60e01b815260040160405180910390fd5b60128160ff161115620002c05760405163528ca31d60e01b815260040160405180910390fd5b620002cd81600a620009ad565b6001600160a01b03841660009081526002602052604090205550806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000344575060408051601f3d908101601f19168201909252620003419181019062000873565b60015b62000362576040516367a7cd4360e01b815260040160405180910390fd5b8060ff1660081462000387576040516367a7cd4360e01b815260040160405180910390fd5b50600080826001600160a01b031663975c19ab6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620003e8575060408051601f3d908101601f19168201909252620003e591810190620009be565b60015b620003f357620003f6565b91505b826001600160a01b031663d62ada116040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000453575060408051601f3d908101601f191682019092526200045091810190620009be565b60015b6200045e5762000461565b90505b8115620005085760405163509e63b560e11b81523060048201526001600160a01b0384169063a13cc76a9060240160a060405180830381865afa925050508015620004cb575060408051601f3d908101601f19168201909252620004c891810190620009fa565b60015b620004e9576040516367a7cd4360e01b815260040160405180910390fd5b85620004fd57620004fd85858484620005f7565b50505050506200059d565b826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa92505050801562000565575060408051601f3d908101601f191682019092526200056291810190620009fa565b60015b62000583576040516367a7cd4360e01b815260040160405180910390fd5b8562000597576200059785858484620005f7565b50505050505b620005ab848484846200065d565b826001600160a01b0316846001600160a01b03167fe263805b03657ab13064915d0723c5ce14981547e7cba5283f66b9e5d81f6e6e60405160405180910390a350505050565b3b151590565b6000831362000619576040516356e05d2b60e01b815260040160405180910390fd5b836001600160501b0316816001600160501b0316108062000638575081155b15620006575760405163b1cf675560e01b815260040160405180910390fd5b50505050565b6001600160a01b03831682156200067557600160a01b175b81156200068357600160a11b175b6001600160a01b03909416600090815260016020526040902093909355505050565b80516001600160a01b0381168114620006bd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620006fd57620006fd620006c2565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200072e576200072e620006c2565b604052919050565b60008060408084860312156200074b57600080fd5b6200075684620006a5565b602085810151919450906001600160401b03808211156200077657600080fd5b818701915087601f8301126200078b57600080fd5b815181811115620007a057620007a0620006c2565b620007b0848260051b0162000703565b818152848101925060069190911b830184019089821115620007d157600080fd5b928401925b81841015620008285785848b031215620007f05760008081fd5b620007fa620006d8565b6200080585620006a5565b815262000814868601620006a5565b8187015283529285019291840191620007d6565b8096505050505050509250929050565b6000602082840312156200084b57600080fd5b6200085682620006a5565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200088657600080fd5b815160ff811681146200085657600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620008ef578160001904821115620008d357620008d362000898565b80851615620008e157918102915b93841c9390800290620008b3565b509250929050565b6000826200090857506001620009a7565b816200091757506000620009a7565b81600181146200093057600281146200093b576200095b565b6001915050620009a7565b60ff8411156200094f576200094f62000898565b50506001821b620009a7565b5060208310610133831016604e8410600b841016171562000980575081810a620009a7565b6200098c8383620008ae565b8060001904821115620009a357620009a362000898565b0290505b92915050565b60006200085660ff841683620008f7565b600060208284031215620009d157600080fd5b815180151581146200085657600080fd5b80516001600160501b0381168114620006bd57600080fd5b600080600080600060a0868803121562000a1357600080fd5b62000a1e86620009e2565b945060208601519350604086015192506060860151915062000a4360808701620009e2565b90509295509295909350565b6080516115f662000a80600039600081816101bd015281816102ad0152818161040f015261071101526115f66000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639dcb511a1161008c578063d449a83211610066578063d449a832146101f2578063d6d19b2714610212578063e8a97a3e14610225578063f190e5fa1461023857600080fd5b80639dcb511a14610180578063a50cf2c8146101b8578063ac41865a146101df57600080fd5b80635c975abb116100c85780635c975abb146101275780635cecbd0e1461013d5780638456cb5914610165578063902003df1461016d57600080fd5b80633f4ba83a146100ef57806354fd4d50146100f95780635b46100514610114575b600080fd5b6100f761027f565b005b610101600281565b6040519081526020015b60405180910390f35b610101610122366004611222565b61036d565b60005460ff16604051901515815260200161010b565b61015061014b36600461125e565b6103b9565b6040805192835260208301919091520161010b565b6100f76103e1565b61010161017b366004611222565b6104cd565b61019361018e3660046112a4565b610509565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010b565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6101016101ed3660046112c6565b61051d565b6101016102003660046112a4565b60026020526000908152604090205481565b6101016102203660046112f9565b6106c3565b6100f76102333660046112c6565b6106e3565b61024b6102463660046112a4565b6107d5565b6040805173ffffffffffffffffffffffffffffffffffffffff9094168452911515602084015215159082015260600161010b565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d919061133b565b610363576040517f10332dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036b61087a565b565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205461039d858461051d565b6103a7908561138c565b6103b191906113c9565b949350505050565b6000806103c86000878761036d565b91506103d66000858561036d565b905094509492505050565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f919061133b565b6104c5576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036b610960565b60006104d9848361051d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600260205260409020546103a7908561138c565b6000610514826107d5565b50909392505050565b60008060008061052c856107d5565b925092509250818015610553575073ffffffffffffffffffffffffffffffffffffffff8616155b1561058a576040517f918d65ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008085610609578673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610604919061141e565b610699565b6040517fa13cc76a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b8116600483015288169063a13cc76a9060240160a060405180830381865afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610699919061141e565b945094505093509350846106b3576106b384848484610a20565b5090955050505050505b92915050565b60006106da856106d487878761036d565b846104cd565b95945050505050565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610791919061133b565b6107c7576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107d18282610abb565b5050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260408120548190819080610836576040517f4bb8ad8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b947401000000000000000000000000000000000000000086161515945074020000000000000000000000000000000000000000861615159350915050565b3b151590565b60005460ff166108eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005460ff16156109cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016108e2565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109363390565b60008313610a5a576040517f56e05d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff161080610a7e575081155b15610ab5576040517fb1cf675500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff82161580610af2575073ffffffffffffffffffffffffffffffffffffffff8116155b15610b29576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82163b610b8f576040517fdf4c572d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016108e2565b73ffffffffffffffffffffffffffffffffffffffff81163b610bf5576040517fdf4c572d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016108e2565b8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c7a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c779181019061146e565b60015b610cb0576040517f528ca31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60128160ff161115610cee576040517f528ca31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cf981600a6115b1565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260026020526040902055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610da5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610da29181019061146e565b60015b610ddb576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060ff16600814610e18576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000808273ffffffffffffffffffffffffffffffffffffffff1663975c19ab6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ea1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610e9e9181019061133b565b60015b610eaa57610ead565b91505b8273ffffffffffffffffffffffffffffffffffffffff1663d62ada116040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f32575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f2f9181019061133b565b60015b610f3b57610f3e565b90505b8115611039576040517fa13cc76a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff84169063a13cc76a9060240160a060405180830381865afa925050508015610fe8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610fe59181019061141e565b60015b61101e576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8561102f5761102f85858484610a20565b505050505061110b565b8273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa9250505080156110be575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110bb9181019061141e565b60015b6110f4576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856111055761110585858484610a20565b50505050505b61111784848484611177565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fe263805b03657ab13064915d0723c5ce14981547e7cba5283f66b9e5d81f6e6e60405160405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff831682156111ac5774010000000000000000000000000000000000000000175b81156111ca5774020000000000000000000000000000000000000000175b73ffffffffffffffffffffffffffffffffffffffff909416600090815260016020526040902093909355505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461121d57600080fd5b919050565b60008060006060848603121561123757600080fd5b611240846111f9565b925060208401359150611255604085016111f9565b90509250925092565b6000806000806080858703121561127457600080fd5b84359350611284602086016111f9565b925060408501359150611299606086016111f9565b905092959194509250565b6000602082840312156112b657600080fd5b6112bf826111f9565b9392505050565b600080604083850312156112d957600080fd5b6112e2836111f9565b91506112f0602084016111f9565b90509250929050565b6000806000806080858703121561130f57600080fd5b611318856111f9565b93506020850135925061132d604086016111f9565b9150611299606086016111f9565b60006020828403121561134d57600080fd5b815180151581146112bf57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c4576113c461135d565b500290565b6000826113ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461121d57600080fd5b600080600080600060a0868803121561143657600080fd5b61143f86611404565b945060208601519350604086015192506060860151915061146260808701611404565b90509295509295909350565b60006020828403121561148057600080fd5b815160ff811681146112bf57600080fd5b600181815b808511156114ea57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156114d0576114d061135d565b808516156114dd57918102915b93841c9390800290611496565b509250929050565b600082611501575060016106bd565b8161150e575060006106bd565b8160018114611524576002811461152e5761154a565b60019150506106bd565b60ff84111561153f5761153f61135d565b50506001821b6106bd565b5060208310610133831016604e8410600b841016171561156d575081810a6106bd565b6115778383611491565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156115a9576115a961135d565b029392505050565b60006112bf60ff8416836114f256fea26469706673582212203e8734e5e592c933b7dfb548ce783a504670f66f88d824df52493e7bbe8f644a64736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var PriceOracle__factory = /** @class */ (function (_super) {
    __extends(PriceOracle__factory, _super);
    function PriceOracle__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    PriceOracle__factory.prototype.deploy = function (addressProvider, defaults, overrides) {
        return _super.prototype.deploy.call(this, addressProvider, defaults, overrides || {});
    };
    PriceOracle__factory.prototype.getDeployTransaction = function (addressProvider, defaults, overrides) {
        return _super.prototype.getDeployTransaction.call(this, addressProvider, defaults, overrides || {});
    };
    PriceOracle__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    PriceOracle__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    PriceOracle__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    PriceOracle__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    PriceOracle__factory.bytecode = _bytecode;
    PriceOracle__factory.abi = _abi;
    return PriceOracle__factory;
}(ethers_1.ContractFactory));
exports.PriceOracle__factory = PriceOracle__factory;
