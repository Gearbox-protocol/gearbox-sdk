"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataCompressor__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NotCreditManagerException",
        type: "error",
    },
    {
        inputs: [],
        name: "NotPoolException",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroAddressException",
        type: "error",
    },
    {
        inputs: [],
        name: "WETHToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "addressProvider",
        outputs: [
            {
                internalType: "contract AddressProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "contractsRegister",
        outputs: [
            {
                internalType: "contract ContractsRegister",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_creditManager",
                type: "address",
            },
            {
                internalType: "address",
                name: "_allowedContract",
                type: "address",
            },
        ],
        name: "getAdapter",
        outputs: [
            {
                internalType: "address",
                name: "adapter",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_creditManager",
                type: "address",
            },
            {
                internalType: "address",
                name: "borrower",
                type: "address",
            },
        ],
        name: "getCreditAccountData",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "borrower",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "inUse",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "creditManager",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowedAmountPlusInterest",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalValue",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "healthFactor",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowRate",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "token",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "balance",
                                type: "uint256",
                            },
                            {
                                internalType: "bool",
                                name: "isAllowed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isEnabled",
                                type: "bool",
                            },
                        ],
                        internalType: "struct TokenBalance[]",
                        name: "balances",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256",
                        name: "repayAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "liquidationAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "canBeClosed",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowedAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cumulativeIndexAtOpen",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "since",
                        type: "uint256",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "enabledTokenMask",
                        type: "uint256",
                    },
                ],
                internalType: "struct CreditAccountData",
                name: "result",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "borrower",
                type: "address",
            },
        ],
        name: "getCreditAccountList",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "borrower",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "inUse",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "creditManager",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowedAmountPlusInterest",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalValue",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "healthFactor",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowRate",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "token",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "balance",
                                type: "uint256",
                            },
                            {
                                internalType: "bool",
                                name: "isAllowed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "isEnabled",
                                type: "bool",
                            },
                        ],
                        internalType: "struct TokenBalance[]",
                        name: "balances",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256",
                        name: "repayAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "liquidationAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "canBeClosed",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowedAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cumulativeIndexAtOpen",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "since",
                        type: "uint256",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "enabledTokenMask",
                        type: "uint256",
                    },
                ],
                internalType: "struct CreditAccountData[]",
                name: "result",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_creditManager",
                type: "address",
            },
        ],
        name: "getCreditManagerData",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isWETH",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "canBorrow",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowRate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxLeverageFactor",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "address[]",
                        name: "collateralTokens",
                        type: "address[]",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "allowedContract",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "adapter",
                                type: "address",
                            },
                        ],
                        internalType: "struct ContractAdapter[]",
                        name: "adapters",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "liquidationThresholds",
                        type: "uint256[]",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "creditFacade",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isDegenMode",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "degenNFT",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isIncreaseDebtForbidden",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "forbiddenTokenMask",
                        type: "uint256",
                    },
                ],
                internalType: "struct CreditManagerData",
                name: "result",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCreditManagersList",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isWETH",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "canBorrow",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowRate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxLeverageFactor",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "address[]",
                        name: "collateralTokens",
                        type: "address[]",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "allowedContract",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "adapter",
                                type: "address",
                            },
                        ],
                        internalType: "struct ContractAdapter[]",
                        name: "adapters",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "liquidationThresholds",
                        type: "uint256[]",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "creditFacade",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isDegenMode",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "degenNFT",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isIncreaseDebtForbidden",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "forbiddenTokenMask",
                        type: "uint256",
                    },
                ],
                internalType: "struct CreditManagerData[]",
                name: "result",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_pool",
                type: "address",
            },
        ],
        name: "getPoolData",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isWETH",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "dieselToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "linearCumulativeIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expectedLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expectedLiquidityLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalBorrowed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "depositAPY_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowAPY_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "dieselRate_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "withdrawFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cumulativeIndex_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "timestampLU",
                        type: "uint256",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                ],
                internalType: "struct PoolData",
                name: "result",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPoolsList",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "isWETH",
                        type: "bool",
                    },
                    {
                        internalType: "address",
                        name: "underlying",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "dieselToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "linearCumulativeIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expectedLiquidity",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expectedLiquidityLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalBorrowed",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "depositAPY_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "borrowAPY_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "dieselRate_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "withdrawFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "cumulativeIndex_RAY",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "timestampLU",
                        type: "uint256",
                    },
                    {
                        internalType: "uint8",
                        name: "version",
                        type: "uint8",
                    },
                ],
                internalType: "struct PoolData[]",
                name: "result",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_creditManager",
                type: "address",
            },
            {
                internalType: "address",
                name: "borrower",
                type: "address",
            },
        ],
        name: "hasOpenedCreditAccount",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60e06040523480156200001157600080fd5b50604051620049e1380380620049e1833981016040819052620000349162000160565b6001600160a01b0381166200005c57604051635919af9760e11b815260040160405180910390fd5b6001600160a01b03811660808190526040805163c513c9bb60e01b8152905163c513c9bb916004808201926020929091908290030181865afa158015620000a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cd919062000160565b6001600160a01b031660a0816001600160a01b0316815250506080516001600160a01b0316634c252f916040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d919062000160565b6001600160a01b031660c0525062000192565b6000602082840312156200017357600080fd5b81516001600160a01b03811681146200018b57600080fd5b9392505050565b60805160a05160c0516147c46200021d6000396000818161018801528181611b4d0152612b480152600081816101ed015281816114e001528181611e5d0152818161203d0152818161213d01528181612336015281816124fa015281816125b20152818161267e0152818161289b0152818161390f01526139ce0152600061013c01526147c46000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806354fd4d5011610081578063a80deda31161005b578063a80deda31461020f578063ae093f3f1461022f578063fc9914cb1461024f57600080fd5b806354fd4d50146101bd578063663b8fdb146101d35780637a0c7b21146101e857600080fd5b80632954018c116100b25780632954018c146101375780634b2f336d146101835780634c472fc9146101aa57600080fd5b80630dbd616d146100d957806313d21cdf146101025780631bcd8fc014610122575b600080fd5b6100ec6100e7366004613dca565b610272565b6040516100f99190613fde565b60405180910390f35b610115610110366004613ff1565b6113d2565b6040516100f99190614117565b61012a611e57565b6040516100f99190614126565b61015e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f9565b61015e7f000000000000000000000000000000000000000000000000000000000000000081565b61015e6101b8366004613dca565b6120f3565b6101c5600281565b6040519081526020016100f9565b6101db612330565b6040516100f991906143a2565b61015e7f000000000000000000000000000000000000000000000000000000000000000081565b61022261021d366004613ff1565b6125ab565b6040516100f99190614422565b61024261023d366004613ff1565b61296b565b6040516100f99190614495565b61026261025d366004613dca565b6138c5565b60405190151581526020016100f9565b61035f604051806102400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600060ff168152602001600081525090565b6000806000806000610370886139c2565b506040517fe958b70400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8d81166004830152959a509398509196509450925060009186169063e958b70490602401602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906144a8565b60ff8716610200890181905273ffffffffffffffffffffffffffffffffffffffff808b1660208b01528b811660608b0152821689529091506001146104c4578273ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf91906144a8565b610533565b8473ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906144a8565b73ffffffffffffffffffffffffffffffffffffffff166080880152600160ff871614156109de576040517fc7de38a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015285169063c7de38a690602401602060405180830381865afa1580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea91906144c5565b60c08801526040517fdfd5946500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015285169063dfd5946590602401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f91906144c5565b60e08801526040517f3ce0735500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260006024830152861690633ce0735590604401602060405180830381865afa925050508015610731575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261072e918101906144c5565b60015b61073a57610741565b6101408801525b6040517f3ce0735500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260016024830152861690633ce0735590604401602060405180830381865afa9250505080156107ee575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526107eb918101906144c5565b60015b6107f7576107fe565b6101608801525b60c08701516040517f996329f800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820192909252600060448201529086169063996329f89060640160a060405180830381865afa9250505080156108b9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526108b6918101906144de565b60015b6108c2576108cf565b505015156101808a015250505b8073ffffffffffffffffffffffffffffffffffffffff16631afbb7a46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e91906144c5565b6101a08801526040517f3192195c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152851690633192195c90602401602060405180830381865afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d491906144c5565b60a0880152610ba3565b6040517fc7de38a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063c7de38a6906024016040805180830381865afa158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d919061451e565b5060c08801526040517fdfd5946500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015283169063dfd5946590602401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0391906144c5565b60e08801526040517f3192195c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152841690633192195c906024016040805180830381865afa158015610b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b97919061451e565b60a08901526101a08801525b60008573ffffffffffffffffffffffffffffffffffffffff1663570a7af26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1491906144a8565b90508073ffffffffffffffffffffffffffffffffffffffff166345d31f9d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8591906144c5565b6101008901526000600160ff891614610d0c578473ffffffffffffffffffffffffffffffffffffffff1663458936f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0791906144c5565b610d7b565b8573ffffffffffffffffffffffffffffffffffffffff166320a05ff76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b91906144c5565b90508760ff16600114610e1d576040517f8991b2f100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152861690638991b2f190602401602060405180830381865afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1891906144c5565b610ead565b6040517fb451cecc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015287169063b451cecc90602401602060405180830381865afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead91906144c5565b6102208a01528067ffffffffffffffff811115610ecc57610ecc614542565b604051908082528060200260200182016040528015610f3c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610eea5790505b506101208a015260005b818110156112d457604080516080810182526000808252602082018190529181018290526060810191909152600180831b9060ff8c1614156110c3576040517faf0a650200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152602482018590528a169063af0a650290604401608060405180830381865afa158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190614571565b5050602084015273ffffffffffffffffffffffffffffffffffffffff9081168084526040517ff9eaee0d0000000000000000000000000000000000000000000000000000000081526004810191909152908a169063f9eaee0d90602401602060405180830381865afa158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b791906145c5565b15156040830152611286565b6040517f172c48c70000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff89169063172c48c7906024016040805180830381865afa15801561112d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115191906145e0565b5073ffffffffffffffffffffffffffffffffffffffff9081168084526040517f70a082310000000000000000000000000000000000000000000000000000000081529188166004830152906370a0823190602401602060405180830381865afa1580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e691906144c5565b602083015281516040517ff9eaee0d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529088169063f9eaee0d90602401602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e91906145c5565b151560408301525b6102208c015181161561129a57600161129d565b60005b151560608301526101208c01518051839190859081106112bf576112bf614616565b60209081029190910101525050600101610f46565b508273ffffffffffffffffffffffffffffffffffffffff166317d11a156040518163ffffffff1660e01b8152600401602060405180830381865afa158015611320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134491906144c5565b896101c00181815250508273ffffffffffffffffffffffffffffffffffffffff16633dc54b406040518163ffffffff1660e01b8152600401602060405180830381865afa158015611399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bd91906144c5565b6101e08a015250969998505050505050505050565b611499604051806102000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060ff1681525090565b6040517f5b16ebb700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015283917f000000000000000000000000000000000000000000000000000000000000000090911690635b16ebb790602401602060405180830381865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d91906145c5565b611583576040517fd384b23800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316808352604080517ffe14112d000000000000000000000000000000000000000000000000000000008152905185929163fe14112d9160048083019260209291908290030181865afa1580156115f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161791906144c5565b8360c00181815250508073ffffffffffffffffffffffffffffffffffffffff1663ef8d96036040518163ffffffff1660e01b8152600401602060405180830381865afa15801561166b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168f91906144c5565b8360e00181815250508073ffffffffffffffffffffffffffffffffffffffff1663743753596040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170791906144c5565b8360a00181815250508073ffffffffffffffffffffffffffffffffffffffff16634c19386c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f91906144c5565b836101000181815250508073ffffffffffffffffffffffffffffffffffffffff1663788c6bfe6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f891906144c5565b836101600181815250508073ffffffffffffffffffffffffffffffffffffffff16630fce70fb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561184d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187191906144c5565b8360800181815250508073ffffffffffffffffffffffffffffffffffffffff166345d31f9d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906144c5565b836101400181815250508073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196291906144a8565b836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166336dda7d56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0891906144a8565b836060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663788c6bfe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aae91906144c5565b836101600181815250508073ffffffffffffffffffffffffffffffffffffffff1663e941fa786040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2791906144c5565b61018084015260408084015173ffffffffffffffffffffffffffffffffffffffff9081167f000000000000000000000000000000000000000000000000000000000000000082161460208087019190915282517f609ae31700000000000000000000000000000000000000000000000000000000815292519184169263609ae31792600480830193928290030181865afa158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed91906144c5565b836101c00181815250508073ffffffffffffffffffffffffffffffffffffffff1663dbcb313b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6691906144c5565b836101a00181815250506000836060015173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce591906144c5565b6040517f5427c9380000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff841690635427c93890602401602060405180830381865afa158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a91906144c5565b90508015611dc5576101808501518190611db690611d9a90612710614674565b876101000151886101400151611db0919061468b565b90613c9e565b611dc091906146f7565b611dcc565b8461014001515b856101200181815250508273ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4591906144c5565b60ff166101e086015250505050919050565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b4ac68606040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea91906144c5565b90508067ffffffffffffffff811115611f0557611f05614542565b604051908082528060200260200182016040528015611ffd57816020015b611fea604051806102000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060ff1681525090565b815260200190600190039081611f235790505b50915060005b818110156120ee576040517fac4afa38000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063ac4afa3890602401602060405180830381865afa158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd91906144a8565b90506120c8816113d2565b8483815181106120da576120da614616565b602090810291909101015250600101612003565b505090565b6040517f6fbc6f6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015260009184917f00000000000000000000000000000000000000000000000000000000000000001690636fbc6f6b90602401602060405180830381865afa158015612184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a891906145c5565b6121de576040517f2cf3d0de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060006121ec876139c2565b5050935093505092508260ff16600114612295576040517ffdd5764500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015282169063fdd5764590602401602060405180830381865afa15801561226c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229091906144a8565b612325565b6040517ffdd5764500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015283169063fdd5764590602401602060405180830381865afa158015612301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232591906144a8565b979650505050505050565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c29277cd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561239f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c391906144c5565b90508067ffffffffffffffff8111156123de576123de614542565b6040519080825280602002602001820160405280156124ba57816020015b60408051610240810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e0830182905261010083018290526101208301819052610140830181905261016083015261018082018190526101a082018190526101c082018190526101e08201819052610200820181905261022082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816123fc5790505b50915060005b818110156120ee576040517f1e16e4fc000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631e16e4fc90602401602060405180830381865afa158015612556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257a91906144a8565b90506125858161296b565b84838151811061259757612597614616565b6020908102919091010152506001016124c0565b60606000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c29277cd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561261b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061263f91906144c5565b905060005b8181101561271f576040517f1e16e4fc000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631e16e4fc90602401602060405180830381865afa1580156126da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fe91906144a8565b905061270a81876138c5565b15612716578360010193505b50600101612644565b508167ffffffffffffffff81111561273957612739614542565b60405190808252806020026020018201604052801561285757816020015b612844604051806102400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600060ff168152602001600081525090565b8152602001906001900390816127575790505b5092506000915060005b81811015612963576040517f1e16e4fc000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631e16e4fc90602401602060405180830381865afa1580156128f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291b91906144a8565b905061292781876138c5565b1561295a576129368187610272565b85858151811061294857612948614616565b60209081029190910101526001909301925b50600101612861565b505050919050565b604080516102408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201819052610140820181905261016082015261018081018290526101a081018290526101c081018290526101e0810182905261020081018290526102208101829052908080808080612a09886139c2565b73ffffffffffffffffffffffffffffffffffffffff8e168d5260ff86166101808e01819052959b50939950919750955093509150600114612ab8578273ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab391906144a8565b612b27565b8473ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2791906144a8565b73ffffffffffffffffffffffffffffffffffffffff908116602089018190527f00000000000000000000000000000000000000000000000000000000000000009091161460408801526000600160ff881614612bf1578373ffffffffffffffffffffffffffffffffffffffff1663570a7af26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bec91906144a8565b612c60565b8573ffffffffffffffffffffffffffffffffffffffff1663570a7af26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6091906144a8565b6040517f2e97ca2100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b8116600483015291925090821690632e97ca2190602401602060405180830381865afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf491906145c5565b15156060890152604080517f45d31f9d000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff8316916345d31f9d9160048083019260209291908290030181865afa158015612d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8a91906144c5565b8860800181815250508073ffffffffffffffffffffffffffffffffffffffff1663743753596040518163ffffffff1660e01b8152600401602060405180830381865afa158015612dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e0291906144c5565b6101008901526000600160ff891614612e89578473ffffffffffffffffffffffffffffffffffffffff1663458936f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8491906144c5565b612ef8565b8573ffffffffffffffffffffffffffffffffffffffff166320a05ff76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef891906144c5565b90508067ffffffffffffffff811115612f1357612f13614542565b604051908082528060200260200182016040528015612f3c578160200160208202803683370190505b506101208a01528067ffffffffffffffff811115612f5c57612f5c614542565b604051908082528060200260200182016040528015612f85578160200160208202803683370190505b506101608a015260005b81811015613227578860ff1660011415613117576040517f5e5f2e260000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff891690635e5f2e2690602401602060405180830381865afa158015613011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303591906144a8565b9050808b6101200151838151811061304f5761304f614616565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517f78327438000000000000000000000000000000000000000000000000000000008152828216600482015290891690637832743890602401602060405180830381865afa1580156130ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ee91906144c5565b8b6101600151838151811061310557613105614616565b6020026020010181815250505061321f565b6040517f172c48c70000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff87169063172c48c7906024016040805180830381865afa158015613181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131a591906145e0565b8061ffff1690508b610120015183815181106131c3576131c3614616565b602002602001018c610160015184815181106131e1576131e1614616565b60200260200101828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050505b600101612f8f565b5060008860ff166001146132a9578373ffffffffffffffffffffffffffffffffffffffff166350e036ff6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132a491906144c5565b613318565b8673ffffffffffffffffffffffffffffffffffffffff166350e036ff6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156132f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061331891906144c5565b90508067ffffffffffffffff81111561333357613333614542565b60405190808252806020026020018201604052801561337857816020015b60408051808201909152600080825260208201528152602001906001900390816133515790505b506101408b015260005b818110156136645760408051808201909152600080825260208201528a60ff1660011461343d576040517f5094cb4f0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff871690635094cb4f90602401602060405180830381865afa158015613414573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061343891906144a8565b6134cc565b6040517f5094cb4f0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff8a1690635094cb4f90602401602060405180830381865afa1580156134a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134cc91906144a8565b73ffffffffffffffffffffffffffffffffffffffff168152600160ff8c16146135875780516040517ffdd5764500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529089169063fdd5764590602401602060405180830381865afa15801561355e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061358291906144a8565b61361a565b80516040517ffdd5764500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152908a169063fdd5764590602401602060405180830381865afa1580156135f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361a91906144a8565b73ffffffffffffffffffffffffffffffffffffffff1660208201526101408c015180518291908490811061365057613650614616565b602090810291909101015250600101613382565b508860ff16600114156136ea578773ffffffffffffffffffffffffffffffffffffffff1663b2c53a6c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136e091906144c5565b60e08b01526138b7565b73ffffffffffffffffffffffffffffffffffffffff85166101a08b01819052604080517f9408b63f0000000000000000000000000000000000000000000000000000000081529051639408b63f916004808201926020929091908290030181865afa15801561375d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061378191906144a8565b73ffffffffffffffffffffffffffffffffffffffff9081166101e08c0152604080517fcff0ab9600000000000000000000000000000000000000000000000000000000815281519288169263cff0ab96926004808401939192918290030181865afa1580156137f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613818919061470b565b15156102008c015250604080517f9fd12b77000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff881691639fd12b779160048083019260209291908290030181865afa15801561388c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138b091906144c5565b6102208b01525b505050505050505050919050565b6040517f6fbc6f6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015260009184917f00000000000000000000000000000000000000000000000000000000000000001690636fbc6f6b90602401602060405180830381865afa158015613956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397a91906145c5565b6139b0576040517f2cf3d0de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6139ba8484613cf1565b949350505050565b600080600080600080867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fbc6f6b826040518263ffffffff1660e01b8152600401613a41919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b602060405180830381865afa158015613a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a8291906145c5565b613ab8576040517f2cf3d0de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b2791906144c5565b96508660ff1660011415613bae578795508573ffffffffffffffffffffffffffffffffffffffff1663f93f515b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ba791906144a8565b9450613c94565b8793508373ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c2091906144a8565b92508373ffffffffffffffffffffffffffffffffffffffff1663f9aa028a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c9191906144a8565b91505b5091939550919395565b6000821580613cab575081155b15613cb857506000613ceb565b612710613cc6600282614755565b61ffff16613cd4848661468b565b613cde9190614776565b613ce891906146f7565b90505b92915050565b6040517f055ee9b500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091829185169063055ee9b590602401602060405180830381865afa158015613d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d8691906144a8565b73ffffffffffffffffffffffffffffffffffffffff1614159392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114613dc757600080fd5b50565b60008060408385031215613ddd57600080fd5b8235613de881613da5565b91506020830135613df881613da5565b809150509250929050565b600081518084526020808501945080840160005b83811015613e6d578151805173ffffffffffffffffffffffffffffffffffffffff168852838101518489015260408082015115159089015260609081015115159088015260809096019590820190600101613e17565b509495945050505050565b805173ffffffffffffffffffffffffffffffffffffffff16825260006102406020830151613ebe602086018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151613ed2604086018215159052565b506060830151613efa606086018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151613f22608086018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518282870152613f6583870182613e03565b9250505061014080840151818601525061016080840151818601525061018080840151613f958287018215159052565b50506101a083810151908501526101c080840151908501526101e080840151908501526102008084015160ff8116828701525b5050610220928301519390920192909252919050565b602081526000613ce86020830184613e78565b60006020828403121561400357600080fd5b813561400e81613da5565b9392505050565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151614042602084018215159052565b50604081015161406a604084018273ffffffffffffffffffffffffffffffffffffffff169052565b506060810151614092606084018273ffffffffffffffffffffffffffffffffffffffff169052565b506080818101519083015260a0808201519083015260c0808201519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a080820151908301526101c080820151908301526101e09081015160ff16910152565b6102008101613ceb8284614015565b6020808252825182820181905260009190848201906040850190845b8181101561416957614155838551614015565b928401926102009290920191600101614142565b50909695505050505050565b600081518084526020808501945080840160005b83811015613e6d57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101614189565b600081518084526020808501945080840160005b83811015613e6d578151805173ffffffffffffffffffffffffffffffffffffffff9081168952908401511683880152604090960195908201906001016141cf565b600081518084526020808501945080840160005b83811015613e6d57815187529582019590820190600101614224565b805173ffffffffffffffffffffffffffffffffffffffff16825260006102406020830151614286602086018273ffffffffffffffffffffffffffffffffffffffff169052565b50604083015161429a604086018215159052565b5060608301516142ae606086018215159052565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152506101208084015182828701526142fb83870182614175565b92505050610140808401518583038287015261431783826141bb565b9250505061016080840151858303828701526143338382614210565b925050506101808084015161434c8287018260ff169052565b50506101a08381015173ffffffffffffffffffffffffffffffffffffffff908116918601919091526101c0808501511515908601526101e080850151909116908501526102008084015180151582870152613fc8565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614415577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452614403858351614240565b945092850192908501906001016143c9565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614415577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452614483858351613e78565b94509285019290850190600101614449565b602081526000613ce86020830184614240565b6000602082840312156144ba57600080fd5b815161400e81613da5565b6000602082840312156144d757600080fd5b5051919050565b600080600080600060a086880312156144f657600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000806040838503121561453157600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561458757600080fd5b845161459281613da5565b60208601516040870151606090970151919890975090945092505050565b805180151581146145c057600080fd5b919050565b6000602082840312156145d757600080fd5b613ce8826145b0565b600080604083850312156145f357600080fd5b82516145fe81613da5565b602084015190925061ffff81168114613df857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561468657614686614645565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156146c3576146c3614645565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082614706576147066146c8565b500490565b6000806040838503121561471e57600080fd5b82516fffffffffffffffffffffffffffffffff8116811461473e57600080fd5b915061474c602084016145b0565b90509250929050565b600061ffff8084168061476a5761476a6146c8565b92169190910492915050565b6000821982111561478957614789614645565b50019056fea26469706673582212201f31348126adf7030aabe0403a29e8ae7ff879f6aa6119b380889fef540668f264736f6c634300080a0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var DataCompressor__factory = /** @class */ (function (_super) {
    __extends(DataCompressor__factory, _super);
    function DataCompressor__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    DataCompressor__factory.prototype.deploy = function (_addressProvider, overrides) {
        return _super.prototype.deploy.call(this, _addressProvider, overrides || {});
    };
    DataCompressor__factory.prototype.getDeployTransaction = function (_addressProvider, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _addressProvider, overrides || {});
    };
    DataCompressor__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    DataCompressor__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    DataCompressor__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    DataCompressor__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    DataCompressor__factory.bytecode = _bytecode;
    DataCompressor__factory.abi = _abi;
    return DataCompressor__factory;
}(ethers_1.ContractFactory));
exports.DataCompressor__factory = DataCompressor__factory;
