/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../common";

export interface IDegenNFTV2EventsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "NewCreditFacadeAdded"
      | "NewCreditFacadeRemoved"
      | "NewMinterSet"
  ): EventFragment;
}

export namespace NewCreditFacadeAddedEvent {
  export type InputTuple = [arg0: AddressLike];
  export type OutputTuple = [arg0: string];
  export interface OutputObject {
    arg0: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewCreditFacadeRemovedEvent {
  export type InputTuple = [arg0: AddressLike];
  export type OutputTuple = [arg0: string];
  export interface OutputObject {
    arg0: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NewMinterSetEvent {
  export type InputTuple = [arg0: AddressLike];
  export type OutputTuple = [arg0: string];
  export interface OutputObject {
    arg0: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IDegenNFTV2Events extends BaseContract {
  connect(runner?: ContractRunner | null): IDegenNFTV2Events;
  waitForDeployment(): Promise<this>;

  interface: IDegenNFTV2EventsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "NewCreditFacadeAdded"
  ): TypedContractEvent<
    NewCreditFacadeAddedEvent.InputTuple,
    NewCreditFacadeAddedEvent.OutputTuple,
    NewCreditFacadeAddedEvent.OutputObject
  >;
  getEvent(
    key: "NewCreditFacadeRemoved"
  ): TypedContractEvent<
    NewCreditFacadeRemovedEvent.InputTuple,
    NewCreditFacadeRemovedEvent.OutputTuple,
    NewCreditFacadeRemovedEvent.OutputObject
  >;
  getEvent(
    key: "NewMinterSet"
  ): TypedContractEvent<
    NewMinterSetEvent.InputTuple,
    NewMinterSetEvent.OutputTuple,
    NewMinterSetEvent.OutputObject
  >;

  filters: {
    "NewCreditFacadeAdded(address)": TypedContractEvent<
      NewCreditFacadeAddedEvent.InputTuple,
      NewCreditFacadeAddedEvent.OutputTuple,
      NewCreditFacadeAddedEvent.OutputObject
    >;
    NewCreditFacadeAdded: TypedContractEvent<
      NewCreditFacadeAddedEvent.InputTuple,
      NewCreditFacadeAddedEvent.OutputTuple,
      NewCreditFacadeAddedEvent.OutputObject
    >;

    "NewCreditFacadeRemoved(address)": TypedContractEvent<
      NewCreditFacadeRemovedEvent.InputTuple,
      NewCreditFacadeRemovedEvent.OutputTuple,
      NewCreditFacadeRemovedEvent.OutputObject
    >;
    NewCreditFacadeRemoved: TypedContractEvent<
      NewCreditFacadeRemovedEvent.InputTuple,
      NewCreditFacadeRemovedEvent.OutputTuple,
      NewCreditFacadeRemovedEvent.OutputObject
    >;

    "NewMinterSet(address)": TypedContractEvent<
      NewMinterSetEvent.InputTuple,
      NewMinterSetEvent.OutputTuple,
      NewMinterSetEvent.OutputObject
    >;
    NewMinterSet: TypedContractEvent<
      NewMinterSetEvent.InputTuple,
      NewMinterSetEvent.OutputTuple,
      NewMinterSetEvent.OutputObject
    >;
  };
}
