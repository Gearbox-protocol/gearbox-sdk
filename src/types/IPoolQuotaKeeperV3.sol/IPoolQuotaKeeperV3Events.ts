/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../common";

export interface IPoolQuotaKeeperV3EventsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "AddCreditManager"
      | "AddQuotaToken"
      | "SetGauge"
      | "SetQuotaIncreaseFee"
      | "SetTokenLimit"
      | "UpdateQuota"
      | "UpdateTokenQuotaRate"
  ): EventFragment;
}

export namespace AddCreditManagerEvent {
  export type InputTuple = [creditManager: AddressLike];
  export type OutputTuple = [creditManager: string];
  export interface OutputObject {
    creditManager: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AddQuotaTokenEvent {
  export type InputTuple = [token: AddressLike];
  export type OutputTuple = [token: string];
  export interface OutputObject {
    token: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetGaugeEvent {
  export type InputTuple = [newGauge: AddressLike];
  export type OutputTuple = [newGauge: string];
  export interface OutputObject {
    newGauge: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetQuotaIncreaseFeeEvent {
  export type InputTuple = [token: AddressLike, fee: BigNumberish];
  export type OutputTuple = [token: string, fee: bigint];
  export interface OutputObject {
    token: string;
    fee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetTokenLimitEvent {
  export type InputTuple = [token: AddressLike, limit: BigNumberish];
  export type OutputTuple = [token: string, limit: bigint];
  export interface OutputObject {
    token: string;
    limit: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateQuotaEvent {
  export type InputTuple = [
    creditAccount: AddressLike,
    token: AddressLike,
    quotaChange: BigNumberish
  ];
  export type OutputTuple = [
    creditAccount: string,
    token: string,
    quotaChange: bigint
  ];
  export interface OutputObject {
    creditAccount: string;
    token: string;
    quotaChange: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateTokenQuotaRateEvent {
  export type InputTuple = [token: AddressLike, rate: BigNumberish];
  export type OutputTuple = [token: string, rate: bigint];
  export interface OutputObject {
    token: string;
    rate: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IPoolQuotaKeeperV3Events extends BaseContract {
  connect(runner?: ContractRunner | null): IPoolQuotaKeeperV3Events;
  waitForDeployment(): Promise<this>;

  interface: IPoolQuotaKeeperV3EventsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "AddCreditManager"
  ): TypedContractEvent<
    AddCreditManagerEvent.InputTuple,
    AddCreditManagerEvent.OutputTuple,
    AddCreditManagerEvent.OutputObject
  >;
  getEvent(
    key: "AddQuotaToken"
  ): TypedContractEvent<
    AddQuotaTokenEvent.InputTuple,
    AddQuotaTokenEvent.OutputTuple,
    AddQuotaTokenEvent.OutputObject
  >;
  getEvent(
    key: "SetGauge"
  ): TypedContractEvent<
    SetGaugeEvent.InputTuple,
    SetGaugeEvent.OutputTuple,
    SetGaugeEvent.OutputObject
  >;
  getEvent(
    key: "SetQuotaIncreaseFee"
  ): TypedContractEvent<
    SetQuotaIncreaseFeeEvent.InputTuple,
    SetQuotaIncreaseFeeEvent.OutputTuple,
    SetQuotaIncreaseFeeEvent.OutputObject
  >;
  getEvent(
    key: "SetTokenLimit"
  ): TypedContractEvent<
    SetTokenLimitEvent.InputTuple,
    SetTokenLimitEvent.OutputTuple,
    SetTokenLimitEvent.OutputObject
  >;
  getEvent(
    key: "UpdateQuota"
  ): TypedContractEvent<
    UpdateQuotaEvent.InputTuple,
    UpdateQuotaEvent.OutputTuple,
    UpdateQuotaEvent.OutputObject
  >;
  getEvent(
    key: "UpdateTokenQuotaRate"
  ): TypedContractEvent<
    UpdateTokenQuotaRateEvent.InputTuple,
    UpdateTokenQuotaRateEvent.OutputTuple,
    UpdateTokenQuotaRateEvent.OutputObject
  >;

  filters: {
    "AddCreditManager(address)": TypedContractEvent<
      AddCreditManagerEvent.InputTuple,
      AddCreditManagerEvent.OutputTuple,
      AddCreditManagerEvent.OutputObject
    >;
    AddCreditManager: TypedContractEvent<
      AddCreditManagerEvent.InputTuple,
      AddCreditManagerEvent.OutputTuple,
      AddCreditManagerEvent.OutputObject
    >;

    "AddQuotaToken(address)": TypedContractEvent<
      AddQuotaTokenEvent.InputTuple,
      AddQuotaTokenEvent.OutputTuple,
      AddQuotaTokenEvent.OutputObject
    >;
    AddQuotaToken: TypedContractEvent<
      AddQuotaTokenEvent.InputTuple,
      AddQuotaTokenEvent.OutputTuple,
      AddQuotaTokenEvent.OutputObject
    >;

    "SetGauge(address)": TypedContractEvent<
      SetGaugeEvent.InputTuple,
      SetGaugeEvent.OutputTuple,
      SetGaugeEvent.OutputObject
    >;
    SetGauge: TypedContractEvent<
      SetGaugeEvent.InputTuple,
      SetGaugeEvent.OutputTuple,
      SetGaugeEvent.OutputObject
    >;

    "SetQuotaIncreaseFee(address,uint16)": TypedContractEvent<
      SetQuotaIncreaseFeeEvent.InputTuple,
      SetQuotaIncreaseFeeEvent.OutputTuple,
      SetQuotaIncreaseFeeEvent.OutputObject
    >;
    SetQuotaIncreaseFee: TypedContractEvent<
      SetQuotaIncreaseFeeEvent.InputTuple,
      SetQuotaIncreaseFeeEvent.OutputTuple,
      SetQuotaIncreaseFeeEvent.OutputObject
    >;

    "SetTokenLimit(address,uint96)": TypedContractEvent<
      SetTokenLimitEvent.InputTuple,
      SetTokenLimitEvent.OutputTuple,
      SetTokenLimitEvent.OutputObject
    >;
    SetTokenLimit: TypedContractEvent<
      SetTokenLimitEvent.InputTuple,
      SetTokenLimitEvent.OutputTuple,
      SetTokenLimitEvent.OutputObject
    >;

    "UpdateQuota(address,address,int96)": TypedContractEvent<
      UpdateQuotaEvent.InputTuple,
      UpdateQuotaEvent.OutputTuple,
      UpdateQuotaEvent.OutputObject
    >;
    UpdateQuota: TypedContractEvent<
      UpdateQuotaEvent.InputTuple,
      UpdateQuotaEvent.OutputTuple,
      UpdateQuotaEvent.OutputObject
    >;

    "UpdateTokenQuotaRate(address,uint16)": TypedContractEvent<
      UpdateTokenQuotaRateEvent.InputTuple,
      UpdateTokenQuotaRateEvent.OutputTuple,
      UpdateTokenQuotaRateEvent.OutputObject
    >;
    UpdateTokenQuotaRate: TypedContractEvent<
      UpdateTokenQuotaRateEvent.InputTuple,
      UpdateTokenQuotaRateEvent.OutputTuple,
      UpdateTokenQuotaRateEvent.OutputObject
    >;
  };
}
