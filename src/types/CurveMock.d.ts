/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CurveMockInterface extends ethers.utils.Interface {
  functions: {
    "addCoin(address)": FunctionFragment;
    "coins(uint256)": FunctionFragment;
    "exchange(int128,int128,uint256,uint256)": FunctionFragment;
    "exchange_underlying(int128,int128,uint256,uint256)": FunctionFragment;
    "get_dx(int128,int128,uint256)": FunctionFragment;
    "get_dx_underlying(int128,int128,uint256)": FunctionFragment;
    "get_dy(int128,int128,uint256)": FunctionFragment;
    "get_dy_underlying(int128,int128,uint256)": FunctionFragment;
    "get_virtual_price()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addCoin", values: [string]): string;
  encodeFunctionData(functionFragment: "coins", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "exchange",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "exchange_underlying",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_dx",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_dx_underlying",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_dy",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_dy_underlying",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_virtual_price",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "addCoin", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "coins", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "exchange", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "exchange_underlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_dx", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_dx_underlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_dy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_dy_underlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_virtual_price",
    data: BytesLike
  ): Result;

  events: {};
}

export class CurveMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CurveMockInterface;

  functions: {
    addCoin(token: string, overrides?: Overrides): Promise<ContractTransaction>;

    "addCoin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    coins(index: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "coins(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    exchange(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "exchange(int128,int128,uint256,uint256)"(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    exchange_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "exchange_underlying(int128,int128,uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[void]>;

    get_dx(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "get_dx(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_dx_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "get_dx_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_dy(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "get_dy(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_dy_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "get_dy_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_virtual_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    "get_virtual_price()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  addCoin(token: string, overrides?: Overrides): Promise<ContractTransaction>;

  "addCoin(address)"(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  coins(index: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "coins(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  exchange(
    i: BigNumberish,
    j: BigNumberish,
    dx: BigNumberish,
    min_dy: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "exchange(int128,int128,uint256,uint256)"(
    i: BigNumberish,
    j: BigNumberish,
    dx: BigNumberish,
    min_dy: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  exchange_underlying(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    arg3: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  "exchange_underlying(int128,int128,uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    arg3: BigNumberish,
    overrides?: CallOverrides
  ): Promise<void>;

  get_dx(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "get_dx(int128,int128,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_dx_underlying(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dy: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "get_dx_underlying(int128,int128,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dy: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_dy(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "get_dy(int128,int128,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_dy_underlying(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "get_dy_underlying(int128,int128,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    dx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_virtual_price(overrides?: CallOverrides): Promise<BigNumber>;

  "get_virtual_price()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    addCoin(token: string, overrides?: CallOverrides): Promise<void>;

    "addCoin(address)"(token: string, overrides?: CallOverrides): Promise<void>;

    coins(index: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "coins(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    exchange(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "exchange(int128,int128,uint256,uint256)"(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    exchange_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "exchange_underlying(int128,int128,uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    get_dx(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dx(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dx_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dx_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dy(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dy(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dy_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dy_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_virtual_price(overrides?: CallOverrides): Promise<BigNumber>;

    "get_virtual_price()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    addCoin(token: string, overrides?: Overrides): Promise<BigNumber>;

    "addCoin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    coins(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "coins(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    exchange(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "exchange(int128,int128,uint256,uint256)"(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    exchange_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "exchange_underlying(int128,int128,uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dx(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dx(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dx_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dx_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dy(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dy(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_dy_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_dy_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_virtual_price(overrides?: CallOverrides): Promise<BigNumber>;

    "get_virtual_price()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addCoin(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addCoin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    coins(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "coins(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    exchange(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "exchange(int128,int128,uint256,uint256)"(
      i: BigNumberish,
      j: BigNumberish,
      dx: BigNumberish,
      min_dy: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    exchange_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "exchange_underlying(int128,int128,uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_dx(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_dx(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_dx_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_dx_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_dy(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_dy(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_dy_underlying(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_dy_underlying(int128,int128,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      dx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_virtual_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "get_virtual_price()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
