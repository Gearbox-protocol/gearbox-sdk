/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumberish, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface IUniswapV3AdapterEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "SetPoolStatus(address,address,uint24,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetPoolStatus"): EventFragment;
}

export interface SetPoolStatusEventObject {
  token0: string;
  token1: string;
  fee: number;
  allowed: boolean;
}
export type SetPoolStatusEvent = TypedEvent<
  [string, string, number, boolean],
  SetPoolStatusEventObject
>;

export type SetPoolStatusEventFilter = TypedEventFilter<SetPoolStatusEvent>;

export interface IUniswapV3AdapterEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IUniswapV3AdapterEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "SetPoolStatus(address,address,uint24,bool)"(
      token0?: PromiseOrValue<string> | null,
      token1?: PromiseOrValue<string> | null,
      fee?: PromiseOrValue<BigNumberish> | null,
      allowed?: null
    ): SetPoolStatusEventFilter;
    SetPoolStatus(
      token0?: PromiseOrValue<string> | null,
      token1?: PromiseOrValue<string> | null,
      fee?: PromiseOrValue<BigNumberish> | null,
      allowed?: null
    ): SetPoolStatusEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
