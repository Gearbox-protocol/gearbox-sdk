/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface ILPPriceFeedEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "SetBounds(uint256,uint256)": EventFragment;
    "SetUpdateBoundsAllowed(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetBounds"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetUpdateBoundsAllowed"): EventFragment;
}

export interface SetBoundsEventObject {
  lowerBound: BigNumber;
  upperBound: BigNumber;
}
export type SetBoundsEvent = TypedEvent<
  [BigNumber, BigNumber],
  SetBoundsEventObject
>;

export type SetBoundsEventFilter = TypedEventFilter<SetBoundsEvent>;

export interface SetUpdateBoundsAllowedEventObject {
  allowed: boolean;
}
export type SetUpdateBoundsAllowedEvent = TypedEvent<
  [boolean],
  SetUpdateBoundsAllowedEventObject
>;

export type SetUpdateBoundsAllowedEventFilter =
  TypedEventFilter<SetUpdateBoundsAllowedEvent>;

export interface ILPPriceFeedEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILPPriceFeedEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "SetBounds(uint256,uint256)"(
      lowerBound?: null,
      upperBound?: null
    ): SetBoundsEventFilter;
    SetBounds(lowerBound?: null, upperBound?: null): SetBoundsEventFilter;

    "SetUpdateBoundsAllowed(bool)"(
      allowed?: null
    ): SetUpdateBoundsAllowedEventFilter;
    SetUpdateBoundsAllowed(allowed?: null): SetUpdateBoundsAllowedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
