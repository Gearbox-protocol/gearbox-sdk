/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FarmingPool, FarmingPoolInterface } from "../FarmingPool";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "stakingToken_",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
      {
        name: "rewardsToken_",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claim",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decreaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "subtractedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "distributor",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "exit",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "farmInfo",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct FarmAccounting.Info",
        components: [
          {
            name: "finished",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "reward",
            type: "uint184",
            internalType: "uint184",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "farmed",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "increaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "addedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rescueFunds",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setDistributor",
    inputs: [
      {
        name: "distributor_",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakingToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "startFarming",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "period",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stopFarming",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributorChanged",
    inputs: [
      {
        name: "oldDistributor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newDistributor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardUpdated",
    inputs: [
      {
        name: "reward",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "duration",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AccessDenied",
    inputs: [],
  },
  {
    type: "error",
    name: "AmountTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "DurationTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientFunds",
    inputs: [],
  },
  {
    type: "error",
    name: "MaxBalanceExceeded",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeTransferFromFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "SameDistributor",
    inputs: [],
  },
  {
    type: "error",
    name: "SameStakingAndRewardsTokens",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroDistributorAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroDuration",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroRewardsTokenAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroStakingTokenAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060409080825234620004eb57818162002c4d8038038091620000248285620004f0565b833981010312620004eb5780516001600160a01b039182821691829003620004eb576020809101519280841690818503620004eb5785516306fdde0360e01b815260049390600090818187818a5afa908115620004e1578291620004c3575b50620000c6602b8a5180936a02330b936b4b7339037b3160ad1b87830152620000b5815180928986860191016200052a565b810103600b810184520182620004f0565b88516395d89b4160e01b815293828588818b5afa948515620004b957839562000490575b50895190636661726d60e01b858301526200012886519683886200011860249a8b948b86860191016200052a565b8101038a810185520183620004f0565b8354336001600160a01b031982168117865591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a381516001600160401b03939091908483116200039e578854926001948585811c9516801562000485575b8886101462000473578190601f9586811162000420575b508890868311600114620003bc578492620003b0575b5050600019600383901b1c191690851b1789555b81519485116200039e576005968754908582811c9216801562000393575b888310146200038257508381116200033c575b5085928511600114620002d5579394508492919083620002c9575b50501b916000199060031b1c19161790555b808314620002ba578215620002ab57156200029d575060805260a052516126899081620005c482396080518181816104ca01528181610b3b01528181610e7d015281816113cc0152611c3b015260a05181818161039701528181610c320152818161111c015281816117ab0152611e560152f35b83516330c1035b60e21b8152fd5b508351633bbbfc7960e01b8152fd5b508351630d21e9d760e41b8152fd5b01519250388062000217565b86815285812093958591601f198316915b8883831062000321575050501062000307575b505050811b01905562000229565b015160001960f88460031b161c19169055388080620002f9565b858701518855909601959485019487935090810190620002e6565b878252868220848088018a1c82019289891062000378575b01891c019085905b8281106200036c575050620001fc565b8381550185906200035c565b9250819262000354565b634e487b7160e01b835260228b5282fd5b91607f1691620001e9565b634e487b7160e01b8152604189528690fd5b015190503880620001b7565b8c85528985208894509190601f198416865b8c828210620004095750508411620003ef575b505050811b018955620001cb565b015160001960f88460031b161c19169055388080620003e1565b8385015186558b97909501949384019301620003ce565b9091508b84528884208680850160051c8201928b861062000469575b918991869594930160051c01915b8281106200045a575050620001a1565b8681558594508991016200044a565b925081926200043c565b634e487b7160e01b835260228b528883fd5b94607f16946200018a565b620004b19195503d8085833e620004a88183620004f0565b8101906200054f565b9338620000ea565b8a513d85823e3d90fd5b620004da91503d8084833e620004a88183620004f0565b3862000083565b89513d84823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200051457604052565b634e487b7160e01b600052604160045260246000fd5b60005b8381106200053e5750506000910152565b81810151838201526020016200052d565b602081830312620004eb5780516001600160401b0391828211620004eb57019082601f83011215620004eb5781519081116200051457604051926200059f601f8301601f191660200185620004f0565b81845260208284010111620004eb57620005c091602080850191016200052a565b9056fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461187b57508063095ea7b31461183357806318160ddd146117f65780631bfa4c04146116815780631d49d66c146115bf57806323b872dd146114915780632e1a7d4d14611456578063313ce5671461135b57806339509351146112e15780634216f9721461125b5780634e71d92d146112245780637026122214610f9f57806370a0823114610f3d578063715018a614610ea157806372f702f314610e3257806375619ab514610d1b57806378e3214f146109405780638da5cb5b146108ef57806395d89b4114610798578063a457c2d714610693578063a9059cbb14610644578063b6b55f251461040e578063bfe10928146103bb578063d1af0c7d1461034c578063dd62ed3e146102d8578063e9fad8ee146102855763f2fde38b1461014c57600080fd5b346102815760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028157610183611a2a565b9061018c61217f565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101fe5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576102c9903383526001602052822054611bc0565b6102d1611e06565b80f35b5080fd5b5050346102d457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45780602092610314611a2a565b61031c611a52565b73ffffffffffffffffffffffffffffffffffffffff91821683526002865283832091168252845220549051908152f35b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45760209073ffffffffffffffffffffffffffffffffffffffff600654169051908152f35b503461028157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106405781359233156105e55783151580806105dd575b610514575b5060019061046885600354611ead565b6003553386528181528286208581540190558251858152867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833393a3338652526d04ee2d6d415b85acef810000000081852054116104ee57836102d18430337f0000000000000000000000000000000000000000000000000000000000000000612044565b517f24691f6b000000000000000000000000000000000000000000000000000000008152fd5b61051c611ee9565b9061052a8383015192611b01565b90806105d5575b61053c575b50610458565b4264ffffffffff16602882901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001617600283015560039061057e9087611fd1565b9133885201825282862080548783820193841291129080158216911516176105a95755600138610536565b6024876011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b506001610531565b506001610453565b6064929151917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b8380fd5b5050346102d457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45760209061068c610682611a2a565b60243590336121fe565b5160018152f35b50823461079557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610795576106cb611a2a565b918360243592338152600260205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106107125760208561068c85850387336124de565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b50903461028157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028157805191836005549060019082821c9282811680156108e5575b60209586861082146108b957508488529081156108795750600114610820575b61081c8686610812828b0383611ac0565b51918291826119c4565b0390f35b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610866575050508261081c94610812928201019438610801565b8054868501880152928601928101610849565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b83010192506108128261081c38610801565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f16936107e1565b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b50903461028157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102815773ffffffffffffffffffffffffffffffffffffffff82358181169291838203610c1857602493843592826006541691823303610cf35780610b2f5750505060065416814710610ad3578580809381935af13d15610ace573d67ffffffffffffffff8111610aa357825190610a0c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183611ac0565b81528560203d92013e5b15610a215750505080f35b608492916020603a9251937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b83866041877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b610a16565b606485601d8660208751937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152fd5b909395919492809897987f00000000000000000000000000000000000000000000000000000000000000001690818314600014610c2e5750602091508351928380927f70a08231000000000000000000000000000000000000000000000000000000008252308c8301525afa908115610c24578691610bef575b50610bb685600354611ead565b11610bc757506102d19394506120e5565b8590517f356680b7000000000000000000000000000000000000000000000000000000008152fd5b90506020813d8211610c1c575b81610c0960209383611ac0565b81010312610c18575138610ba9565b8580fd5b3d9150610bfc565b82513d88823e3d90fd5b90507f000000000000000000000000000000000000000000000000000000000000000016809114610c68575b5050506102d19394506120e5565b6020908351928380927f70a08231000000000000000000000000000000000000000000000000000000008252308c8301525afa908115610c24578691610cc2575b50610cb685600854611ead565b11610bc7578080610c5a565b90506020813d8211610ceb575b81610cdc60209383611ac0565b81010312610c18575138610ca9565b3d9150610ccf565b8786517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b5090346102815760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261028157610d54611a2a565b90610d5d61217f565b73ffffffffffffffffffffffffffffffffffffffff809216928315610e0b5760065492831690818514610de45750817fa9f739537fc57540bed0a44e33e27baa63290d865cc15f0f16cf17d38c998a4d917fffffffffffffffffffffffff0000000000000000000000000000000000000000949351908152856020820152a1161760065580f35b82517f8750ee90000000000000000000000000000000000000000000000000000000008152fd5b90517f71702079000000000000000000000000000000000000000000000000000000008152fd5b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b833461079557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261079557610ed861217f565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4578060209273ffffffffffffffffffffffffffffffffffffffff610f8f611a2a565b1681526001845220549051908152f35b50903461028157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102815781359160243573ffffffffffffffffffffffffffffffffffffffff6006541633036111fc57610ffc611ee9565b61104561100d602083015192611b01565b4264ffffffffff1660289190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000016176002830155565b849282156111d55763ffffffff908184116111ae5782549064ffffffffff90818316926001860193845495814210611167575b5050506d04ee2d6d415b85acef810000000087116111405750918593916110d27f3efe2b1ade87153c913a322f09a35c930d7fd699770b8d7cdd294e1debf6e9e49787956110cb6102d19c9b9942611ead565b1693611ead565b90557fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008460481b1668ffffffff00000000008460281b161717905582519182526020820152a130337f0000000000000000000000000000000000000000000000000000000000000000612044565b87517f06250401000000000000000000000000000000000000000000000000000000008152fd5b6111a59399506111958561118e8594670de0b6b3a76400009461119f9760281c1690611fad565b1689611f41565b049060481c611fc4565b89611ead565b95388080611078565b85517f426a1073000000000000000000000000000000000000000000000000000000008152fd5b84517f68d5686e000000000000000000000000000000000000000000000000000000008152fd5b5090517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b833461079557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610795576102d1611e06565b5050346102d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576112da60209261129a611a2a565b836112a3611ee9565b9273ffffffffffffffffffffffffffffffffffffffff83168152600187522054906112d46002878501510193611b01565b92611ffd565b9051908152f35b5050346102d457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45761068c602092611354611322611a2a565b913381526002865284812073ffffffffffffffffffffffffffffffffffffffff84168252865284602435912054611ead565b90336124de565b50913461079557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610795576020825180947f313ce5670000000000000000000000000000000000000000000000000000000082528173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa92831561144a578193611409575b60208460ff855191168152f35b9092506020813d8211611442575b8161142460209383611ac0565b8101031261028157519160ff83168303610795575060ff60206113fc565b3d9150611417565b509051903d90823e3d90fd5b8382346102d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576102d19035611bc0565b508290346102d45760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576114cb611a2a565b6114d3611a52565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260026020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611539575b60208661068c8787876121fe565b84821061156257509183916115576020969561068c950333836124de565b91939481935061152b565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d457608091606082516115ff81611a75565b82815282602082015282848201520152805161161a81611a75565b6007549176ffffffffffffffffffffffffffffffffffffffffffffff64ffffffffff8416938484526020840163ffffffff90818360281c1681528486019260481c835260606008549601958652845196875251166020860152511690830152516060820152f35b503461028157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102815773ffffffffffffffffffffffffffffffffffffffff6006541633036117cf57507f3efe2b1ade87153c913a322f09a35c930d7fd699770b8d7cdd294e1debf6e9e46116f9611ee9565b9161174361170b602085015194611b01565b4264ffffffffff1660289190911b7fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000016176002850155565b82549261177964ffffffffff94670de0b6b3a76400006111958761177263ffffffff8560281c16828616611fad565b1685611f41565b9360018201611789868254611fc4565b9055421690558051848152846020820152a1806117a4575080f35b6102d190337f00000000000000000000000000000000000000000000000000000000000000006120e5565b90517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b5050346102d457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d4576020906003549051908152f35b5050346102d457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d45760209061068c611871611a2a565b60243590336124de565b905082843461079557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261079557809380549160019083821c928285169485156119ba575b602095868610811461198e5785895290811561194c57506001146118f4575b61081c8787610812828c0383611ac0565b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410611939575050508261081c94610812928201019486806118e3565b805486850188015292860192810161191b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b83010192506108128261081c86806118e3565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f16936118c4565b60208082528251818301819052939260005b858110611a16575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016119d6565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611a4d57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611a4d57565b6080810190811067ffffffffffffffff821117611a9157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611a9157604052565b602081016002815101549064ffffffffff82169160281c92824203611b27575b50505090565b611b2f611b96565b5051600314611b67577f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b600354908115611b2157611b8d92611b8891611b81611b96565b5051611f41565b611f08565b01388080611b21565b604051906040820182811067ffffffffffffffff821117611a915760405260006020838281520152565b3315611d82578015158080611d7a575b611ce5575b5033600052600160205260406000205490808210611c615780611c5f9233600052600160205203604060002055806003540360035560006040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3337f00000000000000000000000000000000000000000000000000000000000000006120e5565b565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b611ced611ee9565b90611cfc602083015192611b01565b9080611d72575b611d0e575b50611bd5565b4264ffffffffff16602882901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000016176002830155600390611d509084611fd1565b913360005201602052611d696040600020918254611fe4565b90553880611d08565b506001611d03565b506001611bd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b611e0e611ee9565b336000526001602052604060002054611e2b602083015192611b01565b611e3a81833360028701611ffd565b928315159283611e7a575b505050611e4f5750565b611c5f90337f00000000000000000000000000000000000000000000000000000000000000006120e5565b600192611e8691611fd1565b336000526003820160205260406000205501611ea3838254611fc4565b9055388080611e45565b91908201809211611eba57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b611ef1611b96565b50611efa611b96565b600381526007602082015290565b8115611f12570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b91906000925464ffffffffff81169063ffffffff8160281c169283611f665750505050565b611f9c94955090670de0b6b3a76400009291824210600014611fa75742925b80821015611f9f5750905b60481c91030202611f08565b90565b905090611f90565b82611f85565b64ffffffffff9182169082160391908211611eba57565b91908203918211611eba57565b81810292918115918404141715611eba57565b81810392916000138015828513169184121617611eba57565b60019073ffffffffffffffffffffffffffffffffffffffff61202b670de0b6b3a76400009661204096611fd1565b93166000520160205260406000205490611fe4565b0490565b9260209291606491600093604051927f23b872dd00000000000000000000000000000000000000000000000000000000845260048401526024830152604482015282855af190816120c2575b501561209857565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d156120dd5750600160005114601f3d11165b38612090565b3b15156120d7565b916044602092600092604051917fa9059cbb0000000000000000000000000000000000000000000000000000000083526004830152602482015282855af1908161215c575b501561213257565b60046040517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d156121775750600160005114601f3d11165b3861212a565b3b1515612171565b73ffffffffffffffffffffffffffffffffffffffff6000541633036121a057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b73ffffffffffffffffffffffffffffffffffffffff80911691821561245a57169182156123d65780151580806123cc575b612317575b506000828152600160205260408120549180831061229357604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b61231f611ee9565b9061232e602083015192611b01565b90806123c2575b612340575b50612234565b61234c60039184611fd1565b91016000908482528060205260408220612367848254611fe4565b905585825260205260408120908154818482019485129112908015821691151617612395575055388061233a565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b5084841415612335565b508383141561222f565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156125d0571691821561254c5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea264697066735822122007149fe9a08ad558a50070b3e4e7000ba390a102609f8de07b311ecc41ba710c64736f6c63430008110033";

type FarmingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FarmingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FarmingPool__factory extends ContractFactory {
  constructor(...args: FarmingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stakingToken_: PromiseOrValue<string>,
    rewardsToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FarmingPool> {
    return super.deploy(
      stakingToken_,
      rewardsToken_,
      overrides || {}
    ) as Promise<FarmingPool>;
  }
  override getDeployTransaction(
    stakingToken_: PromiseOrValue<string>,
    rewardsToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      stakingToken_,
      rewardsToken_,
      overrides || {}
    );
  }
  override attach(address: string): FarmingPool {
    return super.attach(address) as FarmingPool;
  }
  override connect(signer: Signer): FarmingPool__factory {
    return super.connect(signer) as FarmingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmingPoolInterface {
    return new utils.Interface(_abi) as FarmingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FarmingPool {
    return new Contract(address, _abi, signerOrProvider) as FarmingPool;
  }
}
