/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWrappedATokenEvents,
  IWrappedATokenEventsInterface,
} from "../../AaveV2_WrappedAToken.sol/IWrappedATokenEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
] as const;

export class IWrappedATokenEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IWrappedATokenEventsInterface {
    return new utils.Interface(_abi) as IWrappedATokenEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWrappedATokenEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IWrappedATokenEvents;
  }
}
