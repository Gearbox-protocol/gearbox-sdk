/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICreditConfiguratorV3Events,
  ICreditConfiguratorV3EventsInterface,
} from "../../ICreditConfiguratorV3.sol/ICreditConfiguratorV3Events";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddCollateralToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "AddEmergencyLiquidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
    ],
    name: "AllowAdapter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AllowToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditConfigurator",
        type: "address",
      },
    ],
    name: "CreditConfiguratorUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
    ],
    name: "ForbidAdapter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ForbidToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "QuoteToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "RemoveEmergencyLiquidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ResetCumulativeLoss",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "liquidationThresholdInitial",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "liquidationThresholdFinal",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "timestampRampStart",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "timestampRampEnd",
        type: "uint40",
      },
    ],
    name: "ScheduleTokenLiquidationThresholdRamp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minDebt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxDebt",
        type: "uint256",
      },
    ],
    name: "SetBorrowingLimits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "botList",
        type: "address",
      },
    ],
    name: "SetBotList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditFacade",
        type: "address",
      },
    ],
    name: "SetCreditFacade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "expirationDate",
        type: "uint40",
      },
    ],
    name: "SetExpirationDate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "maxCumulativeLoss",
        type: "uint128",
      },
    ],
    name: "SetMaxCumulativeLoss",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "maxDebtPerBlockMultiplier",
        type: "uint8",
      },
    ],
    name: "SetMaxDebtPerBlockMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "maxEnabledTokens",
        type: "uint8",
      },
    ],
    name: "SetMaxEnabledTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "priceOracle",
        type: "address",
      },
    ],
    name: "SetPriceOracle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "liquidationThreshold",
        type: "uint16",
      },
    ],
    name: "SetTokenLiquidationThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "feeInterest",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeLiquidation",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "liquidationPremium",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeLiquidationExpired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "liquidationPremiumExpired",
        type: "uint16",
      },
    ],
    name: "UpdateFees",
    type: "event",
  },
] as const;

export class ICreditConfiguratorV3Events__factory {
  static readonly abi = _abi;
  static createInterface(): ICreditConfiguratorV3EventsInterface {
    return new utils.Interface(_abi) as ICreditConfiguratorV3EventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICreditConfiguratorV3Events {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICreditConfiguratorV3Events;
  }
}
