/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressProvider,
  AddressProviderInterface,
} from "../AddressProvider";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addresses",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getACL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccountFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractsRegister",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDataCompressor",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getGearToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLeveragedActions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriceOracle",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTreasuryContract",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWETHGateway",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWethToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setACL",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAccountFactory",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractsRegister",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDataCompressor",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setGearToken",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLeveragedActions",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPriceOracle",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTreasuryContract",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setWETHGateway",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setWethToken",
    inputs: [
      {
        name: "_address",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AddressSet",
    inputs: [
      {
        name: "service",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608080604052346100935760008054336001600160a01b0319821681178355906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a330906f20a2222922a9a9afa82927ab24a222a960811b907fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6919080a3611c0a90816100998239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c908163060678c2146119fe5750806308737695146118a65780631ed65110146117d257806321da5837146116fe57806326c74fc3146115a657806344b885631461144e5780634c252f91146112f65780634e71e0c8146111c4578063530e784f146110f057806354fd4d50146110b7578063699f200f1461105b578063715018a614610fbc57806376aad60514610ee857806377532ed914610d905780637b6757ff14610cbc57806386e09c0814610be85780638da5cb5b14610b985780639068a86814610a40578063addc1a761461096c578063affd924314610814578063bcaead9814610740578063c5120b391461066c578063c513c9bb14610514578063ce3c4ae414610440578063e30c3978146103ee578063f2fde38b146102d55763fca513a81461014e57600080fd5b346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f50524943455f4f5241434c45000000000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f41503100000000000000000000000000000000000000000000000000000000008683015284156102145750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b85811061028e57505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b81810183015187820160440152869450820161024e565b6024826041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5080fd5b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea5780359173ffffffffffffffffffffffffffffffffffffffff83168093036103e65761032f611b55565b82156103635750507fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602860248201527f436c61696d61626c653a206e6577206f776e657220697320746865207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b8380fd5b8280fd5b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57610499611b55565b7f434f4e5452414354535f524547495354455200000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f434f4e5452414354535f5245474953544552000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f41503100000000000000000000000000000000000000000000000000000000008683015284156105db5750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b85811061065557505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b818101830151878201604401528694508201610615565b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea576106c5611b55565b7f444154415f434f4d50524553534f5200000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57610799611b55565b7f474541525f544f4b454e000000000000000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f474541525f544f4b454e0000000000000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f41503100000000000000000000000000000000000000000000000000000000008683015284156108db5750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b85811061095557505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b818101830151878201604401528694508201610915565b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea576109c5611b55565b7f4143434f554e545f464143544f525900000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f4143434f554e545f464143544f5259000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f4150310000000000000000000000000000000000000000000000000000000000868301528415610b075750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b858110610b8157505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b818101830151878201604401528694508201610b41565b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57610c41611b55565b7f574554485f544f4b454e000000000000000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57610d15611b55565b7f4c45564552414745445f414354494f4e530000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f574554485f47415445574159000000000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f4150310000000000000000000000000000000000000000000000000000000000868301528415610e575750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b858110610ed157505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b818101830151878201604401528694508201610e91565b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57610f41611b55565b7f41434c00000000000000000000000000000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b823461105857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261105857610ff3611b55565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea578160209373ffffffffffffffffffffffffffffffffffffffff92358152600285522054169051908152f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576020905160028152f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57611149611b55565b7f50524943455f4f5241434c4500000000000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b508290346103ea57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea576001549073ffffffffffffffffffffffffffffffffffffffff928383169182330361127357505083547fffffffffffffffffffffffff00000000000000000000000000000000000000008082168317865593167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a31660015580f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f436c61696d61626c653a2053656e646572206973206e6f742070656e64696e6760448201527f206f776e657200000000000000000000000000000000000000000000000000006064820152fd5b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f574554485f544f4b454e0000000000000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f41503100000000000000000000000000000000000000000000000000000000008683015284156113bd5750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b85811061143757505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b8181018301518782016044015286945082016113f7565b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f4c45564552414745445f414354494f4e5300000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f41503100000000000000000000000000000000000000000000000000000000008683015284156115155750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b85811061158f57505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b81810183015187820160440152869450820161154f565b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f54524541535552595f434f4e545241435400000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f415031000000000000000000000000000000000000000000000000000000000086830152841561166d5750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b8581106116e757505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b8181018301518782016044015286945082016116a7565b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea57611757611b55565b7f574554485f4741544557415900000000000000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b5082346103ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea57359073ffffffffffffffffffffffffffffffffffffffff82168092036103ea5761182b611b55565b7f54524541535552595f434f4e54524143540000000000000000000000000000009081845260026020528320827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6918380a380f35b50346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1577f41434c000000000000000000000000000000000000000000000000000000000082526020926002845273ffffffffffffffffffffffffffffffffffffffff82842054169282519083820182811067ffffffffffffffff8211176102a5578452600382527f415031000000000000000000000000000000000000000000000000000000000086830152841561196d5750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b8581106119e757505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b8181018301518782016044015286945082016119a7565b939050346103ea57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103ea577f444154415f434f4d50524553534f52000000000000000000000000000000000083526020936002855273ffffffffffffffffffffffffffffffffffffffff83852054169383820182811067ffffffffffffffff8211176102a5578452600382527f4150310000000000000000000000000000000000000000000000000000000000868301528415611ac45750505051908152f35b9185928385519485937f08c379a0000000000000000000000000000000000000000000000000000000008552840152835193846024850152825b858110611b3e57505050601f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604480968601015201168101030190fd5b818101830151878201604401528694508201611afe565b73ffffffffffffffffffffffffffffffffffffffff600054163303611b7657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122008e2056c9093ee0b834532ba0fcb3429d3eaf9948babf4fd4618a26f615c7d2164736f6c63430008110033";

type AddressProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressProvider__factory extends ContractFactory {
  constructor(...args: AddressProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressProvider> {
    return super.deploy(overrides || {}) as Promise<AddressProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressProvider {
    return super.attach(address) as AddressProvider;
  }
  override connect(signer: Signer): AddressProvider__factory {
    return super.connect(signer) as AddressProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressProviderInterface {
    return new utils.Interface(_abi) as AddressProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressProvider {
    return new Contract(address, _abi, signerOrProvider) as AddressProvider;
  }
}
