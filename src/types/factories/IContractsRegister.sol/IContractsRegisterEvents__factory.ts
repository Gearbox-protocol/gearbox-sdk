/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IContractsRegisterEvents,
  IContractsRegisterEventsInterface,
} from "../../IContractsRegister.sol/IContractsRegisterEvents";

const _abi = [
  {
    type: "event",
    name: "NewCreditManagerAdded",
    inputs: [
      {
        name: "creditManager",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewPoolAdded",
    inputs: [
      {
        name: "pool",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

export class IContractsRegisterEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IContractsRegisterEventsInterface {
    return new Interface(_abi) as IContractsRegisterEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IContractsRegisterEvents {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IContractsRegisterEvents;
  }
}
