/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICreditConfiguratorV2,
  ICreditConfiguratorV2Interface,
} from "../../ICreditConfiguratorV2.sol/ICreditConfiguratorV2";

const _abi = [
  {
    type: "function",
    name: "addCollateralToken",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "liquidationThreshold",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addEmergencyLiquidator",
    inputs: [
      {
        name: "liquidator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addressProvider",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowContract",
    inputs: [
      {
        name: "targetContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "adapter",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowToken",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowedContracts",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "creditFacade",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "creditManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "forbidAdapter",
    inputs: [
      {
        name: "adapter",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "forbidContract",
    inputs: [
      {
        name: "targetContract",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "forbidToken",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeEmergencyLiquidator",
    inputs: [
      {
        name: "liquidator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setExpirationDate",
    inputs: [
      {
        name: "newExpirationDate",
        type: "uint40",
        internalType: "uint40",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFees",
    inputs: [
      {
        name: "_feeInterest",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_feeLiquidation",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_liquidationPremium",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_feeLiquidationExpired",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "_liquidationPremiumExpired",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setIncreaseDebtForbidden",
    inputs: [
      {
        name: "_mode",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLimitPerBlock",
    inputs: [
      {
        name: "newLimit",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLimits",
    inputs: [
      {
        name: "_minBorrowedAmount",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "_maxBorrowedAmount",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLiquidationThreshold",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "liquidationThreshold",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxEnabledTokens",
    inputs: [
      {
        name: "maxEnabledTokens",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "underlying",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "upgradeCreditConfigurator",
    inputs: [
      {
        name: "_creditConfigurator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeCreditFacade",
    inputs: [
      {
        name: "_creditFacade",
        type: "address",
        internalType: "address",
      },
      {
        name: "migrateParams",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradePriceOracle",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdapterForbidden",
    inputs: [
      {
        name: "adapter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AddedToUpgradeable",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractAllowed",
    inputs: [
      {
        name: "protocol",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "adapter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractForbidden",
    inputs: [
      {
        name: "protocol",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreditConfiguratorUpgraded",
    inputs: [
      {
        name: "newCreditConfigurator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreditFacadeUpgraded",
    inputs: [
      {
        name: "newCreditFacade",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CumulativeLossReset",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyLiquidatorAdded",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyLiquidatorRemoved",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExpirationDateUpdated",
    inputs: [
      {
        name: "",
        type: "uint40",
        indexed: false,
        internalType: "uint40",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FeesUpdated",
    inputs: [
      {
        name: "feeInterest",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "feeLiquidation",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "liquidationPremium",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "feeLiquidationExpired",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "liquidationPremiumExpired",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IncreaseDebtForbiddenModeChanged",
    inputs: [
      {
        name: "",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LimitPerBlockUpdated",
    inputs: [
      {
        name: "",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LimitsUpdated",
    inputs: [
      {
        name: "minBorrowedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "maxBorrowedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MaxEnabledTokensUpdated",
    inputs: [
      {
        name: "",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewEmergencyLiquidationDiscount",
    inputs: [
      {
        name: "",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewMaxCumulativeLoss",
    inputs: [
      {
        name: "",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewTotalDebtLimit",
    inputs: [
      {
        name: "",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PriceOracleUpgraded",
    inputs: [
      {
        name: "newPriceOracle",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemovedFromUpgradeable",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenAllowed",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenForbidden",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenLiquidationThresholdUpdated",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "liquidityThreshold",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AdapterUsedTwiceException",
    inputs: [],
  },
  {
    type: "error",
    name: "ContractIsNotAnAllowedAdapterException",
    inputs: [],
  },
  {
    type: "error",
    name: "CreditManagerOrFacadeUsedAsTargetContractsException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncompatibleContractException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectExpirationDateException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectFeesException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectLimitsException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectLiquidationThresholdException",
    inputs: [],
  },
  {
    type: "error",
    name: "SetLTForUnderlyingException",
    inputs: [],
  },
] as const;

export class ICreditConfiguratorV2__factory {
  static readonly abi = _abi;
  static createInterface(): ICreditConfiguratorV2Interface {
    return new utils.Interface(_abi) as ICreditConfiguratorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICreditConfiguratorV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICreditConfiguratorV2;
  }
}
