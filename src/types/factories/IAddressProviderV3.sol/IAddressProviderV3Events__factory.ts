/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAddressProviderV3Events,
  IAddressProviderV3EventsInterface,
} from "../../IAddressProviderV3.sol/IAddressProviderV3Events";

const _abi = [
  {
    type: "event",
    name: "SetAddress",
    inputs: [
      {
        name: "key",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "value",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "version",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class IAddressProviderV3Events__factory {
  static readonly abi = _abi;
  static createInterface(): IAddressProviderV3EventsInterface {
    return new Interface(_abi) as IAddressProviderV3EventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAddressProviderV3Events {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IAddressProviderV3Events;
  }
}
