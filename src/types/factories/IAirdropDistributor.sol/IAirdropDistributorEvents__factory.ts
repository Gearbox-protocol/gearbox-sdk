/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAirdropDistributorEvents,
  IAirdropDistributorEventsInterface,
} from "../../IAirdropDistributor.sol/IAirdropDistributorEvents";

const _abi = [
  {
    type: "event",
    name: "Claimed",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "historic",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RootUpdated",
    inputs: [
      {
        name: "oldRoot",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "newRoot",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenAllocated",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "campaignId",
        type: "uint8",
        indexed: true,
        internalType: "uint8",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class IAirdropDistributorEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IAirdropDistributorEventsInterface {
    return new Interface(_abi) as IAirdropDistributorEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAirdropDistributorEvents {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IAirdropDistributorEvents;
  }
}
