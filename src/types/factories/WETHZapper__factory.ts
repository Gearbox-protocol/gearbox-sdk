/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { WETHZapper, WETHZapperInterface } from "../WETHZapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReceiveIsNotAllowedException",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "depositWithReferral",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "previewDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b62380380610b6283398101604081905261002f916100bf565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100bf565b6001600160a01b031660a05250506100ef565b6000602082840312156100d157600080fd5b81516001600160a01b03811681146100e857600080fd5b9392505050565b60805160a051610a1761014b600039600081816091015281816101a00152818161063d01526106f4015260008181610127015281816102720152818161033001528181610427015281816104f601526105ca0152610a176000f3fe6080604052600436106100745760003560e01c8063996c6cc31161004e578063996c6cc31461018e578063ba087652146101c2578063ef8b30f7146101e2578063f340fa011461020257600080fd5b806315ac6f18146100ef57806316f0115b146101155780634cdad5061461016e57600080fd5b366100ea573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146100e8576040517fefd5a10e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b6101026100fd36600461091a565b610215565b6040519081526020015b60405180910390f35b34801561012157600080fd5b506101497f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010c565b34801561017a57600080fd5b50610102610189366004610958565b610229565b34801561019a57600080fd5b506101497f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ce57600080fd5b506101026101dd366004610971565b6102e5565b3480156101ee57600080fd5b506101026101fd366004610958565b6102fa565b6101026102103660046109ad565b6103b0565b60006102223484846103c2565b9392505050565b6040517f4cdad50600000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690634cdad50690602401602060405180830381865afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd91906109c8565b905080610222565b60006102f284848461049f565b949350505050565b600080826040517fef8b30f7000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063ef8b30f790602401602060405180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906109c8565b60006103bc348361056f565b92915050565b6000806103ce85610639565b6040517f6e37c0b30000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff868116602483015261ffff861660448301529192507f000000000000000000000000000000000000000000000000000000000000000090911690636e37c0b3906064016020604051808303816000875af1158015610472573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049691906109c8565b95945050505050565b6040517fba0876520000000000000000000000000000000000000000000000000000000081526004810184905230602482015273ffffffffffffffffffffffffffffffffffffffff828116604483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063ba087652906064016020604051808303816000875af115801561053f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056391906109c8565b905061049681856106c2565b60008061057b84610639565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff85811660248301529192507f000000000000000000000000000000000000000000000000000000000000000090911690636e553f65906044016020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f291906109c8565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b509495945050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561074d57600080fd5b505af1158015610761573d6000803e3d6000fd5b506107869250505073ffffffffffffffffffffffffffffffffffffffff83168461078d565b5090919050565b804710156107fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610856576040519150601f19603f3d011682016040523d82523d6000602084013e61085b565b606091505b50509050806108ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107f3565b505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091557600080fd5b919050565b6000806040838503121561092d57600080fd5b610936836108f1565b9150602083013561ffff8116811461094d57600080fd5b809150509250929050565b60006020828403121561096a57600080fd5b5035919050565b60008060006060848603121561098657600080fd5b83359250610996602085016108f1565b91506109a4604085016108f1565b90509250925092565b6000602082840312156109bf57600080fd5b610222826108f1565b6000602082840312156109da57600080fd5b505191905056fea2646970667358221220906f5f4f0a5291d65243504763a6240c7302855ddbeee699b8c7a4ba6f1f301564736f6c63430008110033";

type WETHZapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHZapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETHZapper__factory extends ContractFactory {
  constructor(...args: WETHZapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WETHZapper> {
    return super.deploy(pool_, overrides || {}) as Promise<WETHZapper>;
  }
  override getDeployTransaction(
    pool_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(pool_, overrides || {});
  }
  override attach(address: string): WETHZapper {
    return super.attach(address) as WETHZapper;
  }
  override connect(signer: Signer): WETHZapper__factory {
    return super.connect(signer) as WETHZapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHZapperInterface {
    return new utils.Interface(_abi) as WETHZapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WETHZapper {
    return new Contract(address, _abi, signerOrProvider) as WETHZapper;
  }
}
