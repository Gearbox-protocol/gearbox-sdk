/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPriceOracleV2Ext,
  IPriceOracleV2ExtInterface,
} from "../../IPriceOracle.sol/IPriceOracleV2Ext";

const _abi = [
  {
    type: "function",
    name: "addPriceFeed",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "priceFeed",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "convert",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenFrom",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenTo",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertFromUSD",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "convertToUSD",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fastCheck",
    inputs: [
      {
        name: "amountFrom",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenFrom",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountTo",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenTo",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "collateralFrom",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralTo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPrice",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeeds",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "priceFeed",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeedsWithFlags",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "priceFeed",
        type: "address",
        internalType: "address",
      },
      {
        name: "skipCheck",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "decimals",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "NewPriceFeed",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "priceFeed",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ChainPriceStaleException",
    inputs: [],
  },
  {
    type: "error",
    name: "PriceOracleNotExistsException",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroPriceException",
    inputs: [],
  },
] as const;

export class IPriceOracleV2Ext__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceOracleV2ExtInterface {
    return new utils.Interface(_abi) as IPriceOracleV2ExtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPriceOracleV2Ext {
    return new Contract(address, _abi, signerOrProvider) as IPriceOracleV2Ext;
  }
}
