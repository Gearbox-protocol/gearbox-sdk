/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IControllerTimelockV3Events,
  IControllerTimelockV3EventsInterface,
} from "../../IControllerTimelockV3.sol/IControllerTimelockV3Events";

const _abi = [
  {
    type: "event",
    name: "CancelTransaction",
    inputs: [
      {
        name: "txHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExecuteTransaction",
    inputs: [
      {
        name: "txHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QueueTransaction",
    inputs: [
      {
        name: "txHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "executor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "signature",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "data",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "eta",
        type: "uint40",
        indexed: false,
        internalType: "uint40",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetVetoAdmin",
    inputs: [
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

export class IControllerTimelockV3Events__factory {
  static readonly abi = _abi;
  static createInterface(): IControllerTimelockV3EventsInterface {
    return new utils.Interface(_abi) as IControllerTimelockV3EventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IControllerTimelockV3Events {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IControllerTimelockV3Events;
  }
}
