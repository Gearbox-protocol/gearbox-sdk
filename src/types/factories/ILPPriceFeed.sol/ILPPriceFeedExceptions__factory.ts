/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILPPriceFeedExceptions,
  ILPPriceFeedExceptionsInterface,
} from "../../ILPPriceFeed.sol/ILPPriceFeedExceptions";

const _abi = [
  {
    type: "error",
    name: "ExchangeRateOutOfBoundsException",
    inputs: [],
  },
  {
    type: "error",
    name: "LowerBoundCantBeZeroException",
    inputs: [],
  },
  {
    type: "error",
    name: "ReserveFeedMustNotBeSelfException",
    inputs: [],
  },
  {
    type: "error",
    name: "UpdateBoundsBeforeCooldownException",
    inputs: [],
  },
  {
    type: "error",
    name: "UpdateBoundsNotAllowedException",
    inputs: [],
  },
] as const;

export class ILPPriceFeedExceptions__factory {
  static readonly abi = _abi;
  static createInterface(): ILPPriceFeedExceptionsInterface {
    return new Interface(_abi) as ILPPriceFeedExceptionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILPPriceFeedExceptions {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ILPPriceFeedExceptions;
  }
}
