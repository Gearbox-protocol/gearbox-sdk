/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IWETHGateway, IWETHGatewayInterface } from "../IWETHGateway";

const _abi = [
  {
    type: "function",
    name: "addLiquidityETH",
    inputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
      {
        name: "referralCode",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "removeLiquidityETH",
    inputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unwrapWETH",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IWETHGateway__factory {
  static readonly abi = _abi;
  static createInterface(): IWETHGatewayInterface {
    return new Interface(_abi) as IWETHGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWETHGateway {
    return new Contract(address, _abi, runner) as unknown as IWETHGateway;
  }
}
