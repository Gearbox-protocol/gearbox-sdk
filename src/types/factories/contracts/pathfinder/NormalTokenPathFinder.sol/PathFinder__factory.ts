/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PathFinder,
  PathFinderInterface,
} from "../../../../contracts/pathfinder/NormalTokenPathFinder.sol/PathFinder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "adapters",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "bestPath",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PathFinder.TradePath",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum AdapterType",
        name: "swapInterface",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "bestUniPath",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PathFinder.TradePath",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapType",
        type: "uint256",
      },
    ],
    name: "convertPathToPathV3",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806333a576a11461005157806354fd4d501461007a578063c0c0b71a14610090578063e2430f93146100a3575b600080fd5b61006461005f366004611063565b6100c3565b60405161007191906110f8565b60405180910390f35b610082600281565b604051908152602001610071565b61006461009e366004611174565b6104f4565b6100b66100b136600461120b565b6108bf565b60405161007191906112bb565b6100e760405180606001604052806060815260200160008152602001600081525090565b8261012c576040805160036060820181815260e083019093529091829181602001602082028036833701905050815260200160008152602001600081525090506104e9565b6040805160028082526060820183526000926020830190803683370190505090508581600081518110610161576101616112d5565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816001815181106101af576101af6112d5565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000806102298b8b8b868a60018f14610222577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ab7565b6000610ab7565b9150915060606000821561023b578491505b60005b875181101561043b576040805160038082526080820190925290602082016060803683370190505095508a8660008151811061027c5761027c6112d5565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505089866002815181106102ca576102ca6112d5565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a73ffffffffffffffffffffffffffffffffffffffff1688828151811061032d5761032d6112d5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415801561039e57508973ffffffffffffffffffffffffffffffffffffffff1688828151811061037d5761037d6112d5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614155b15610429578781815181106103b5576103b56112d5565b6020026020010151866001815181106103d0576103d06112d5565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104188e8e8e898d8a610ab7565b945091508315610429578194508592505b8061043381611333565b91505061023e565b5060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85141561046b57600094505b841580159061047957508815155b156104c85760018c146104a8578861049986670de0b6b3a764000061136c565b6104a391906113a9565b6104c5565b846104bb8a670de0b6b3a764000061136c565b6104c591906113a9565b90505b60408051606081018252938452602084019190915282019390935293505050505b979650505050505050565b61051860405180606001604052806060815260200160008152602001600081525090565b865160008167ffffffffffffffff81111561053557610535610f4f565b60405190808252806020026020018201604052801561058a57816020015b61057760405180606001604052806060815260200160008152602001600081525090565b8152602001906001900390816105535790505b5090506000805b838110156108b15760008b82815181106105ad576105ad6112d5565b602002602001015190506003600e8111156105ca576105ca6113e4565b8173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611413565b600e81111561064a5761064a6113e4565b101580156106d8575060078173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190611413565b600e8111156106d5576106d56113e4565b10155b156106e2576108a8565b60018173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611413565b600e811115610764576107646113e4565b14806107ef575060028173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dc9190611413565b600e8111156107ed576107ed6113e4565b145b156108a85761088a8173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611413565b8d8481518110610878576108786112d5565b60200260200101518d8d8d8d8d6100c3565b84848151811061089c5761089c6112d5565b60200260200101819052505b50600101610591565b505050509695505050505050565b6060610bb86001831415610a545760005b600185516108de9190611430565b8110156109b25761099e8582815181106108fa576108fa6112d5565b60200260200101518360405160200161096992919060609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016825260e81b7fffffff000000000000000000000000000000000000000000000000000000000016601482015260170190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528490610b01565b9250806109aa81611333565b9150506108d0565b50610a4d84600186516109c59190611430565b815181106109d5576109d56112d5565b6020026020010151604051602001610a18919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528390610b01565b9150610ab0565b600060018551610a649190611430565b90505b8015610a9657610a828582815181106108fa576108fa6112d5565b925080610a8e81611447565b915050610a67565b50610aad846000815181106109d5576109d56112d5565b91505b5092915050565b600080600188600e811115610ace57610ace6113e4565b14610ae557610ae08787878787610b9c565b610af2565b610af28787878787610d3b565b91509150965096945050505050565b6060806040519050835180825260208201818101602087015b81831015610b32578051835260209283019201610b1a565b50855184518101855292509050808201602086015b81831015610b5f578051835260209283019201610b47565b508651929092011591909101601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660405250905092915050565b60008060006001871415610c5f578773ffffffffffffffffffffffffffffffffffffffff1663cdca1753610bd0888a6108bf565b876040518363ffffffff1660e01b8152600401610bee92919061147c565b6020604051808303816000875af1925050508015610c47575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c449181019061149e565b60015b610c58578360009250925050610d31565b9050610cf4565b6002871415610c8e578773ffffffffffffffffffffffffffffffffffffffff16632f80bb1d610bd0888a6108bf565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f556e6b6e6f776e20737761702074797065000000000000000000000000000000604482015260640160405180910390fd5b600187148015610d0357508381115b80610d185750600287148015610d1857508381105b15610d2857915060019050610d31565b83600092509250505b9550959350505050565b60008060006001871415610e39576040517fd06ca61f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169063d06ca61f90610d9d9088908a906004016114b7565b600060405180830381865afa925050508015610df957506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610df6919081019061151b565b60015b610e0a578360009250925050610d31565b8060018851610e199190611430565b81518110610e2957610e296112d5565b6020026020010151915050610cf4565b6002871415610c8e576040517f1f00ca7400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff891690631f00ca7490610e969088908a906004016114b7565b600060405180830381865afa925050508015610ef257506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610eef919081019061151b565b60015b610f03578360009250925050610d31565b80600081518110610e2957610e296112d5565b600f8110610f2357600080fd5b50565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f4a57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fc557610fc5610f4f565b604052919050565b600067ffffffffffffffff821115610fe757610fe7610f4f565b5060051b60200190565b600082601f83011261100257600080fd5b8135602061101761101283610fcd565b610f7e565b82815260059290921b8401810191818101908684111561103657600080fd5b8286015b848110156110585761104b81610f26565b835291830191830161103a565b509695505050505050565b600080600080600080600060e0888a03121561107e57600080fd5b873561108981610f16565b965061109760208901610f26565b9550604088013594506110ac60608901610f26565b93506110ba60808901610f26565b925060a0880135915060c088013567ffffffffffffffff8111156110dd57600080fd5b6110e98a828b01610ff1565b91505092959891949750929550565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101561115357835173ffffffffffffffffffffffffffffffffffffffff16825292840192600192909201919084019061111d565b50838701516040870152604087015160608701528094505050505092915050565b60008060008060008060c0878903121561118d57600080fd5b863567ffffffffffffffff808211156111a557600080fd5b6111b18a838b01610ff1565b9750602089013596506111c660408a01610f26565b95506111d460608a01610f26565b94506080890135935060a08901359150808211156111f157600080fd5b506111fe89828a01610ff1565b9150509295509295509295565b6000806040838503121561121e57600080fd5b823567ffffffffffffffff81111561123557600080fd5b61124185828601610ff1565b95602094909401359450505050565b6000815180845260005b818110156112765760208185018101518683018201520161125a565b81811115611288576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112ce6020830184611250565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561136557611365611304565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113a4576113a4611304565b500290565b6000826113df577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561142557600080fd5b81516112ce81610f16565b60008282101561144257611442611304565b500390565b60008161145657611456611304565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60408152600061148f6040830185611250565b90508260208301529392505050565b6000602082840312156114b057600080fd5b5051919050565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561150e57845173ffffffffffffffffffffffffffffffffffffffff16835293830193918301916001016114dc565b5090979650505050505050565b6000602080838503121561152e57600080fd5b825167ffffffffffffffff81111561154557600080fd5b8301601f8101851361155657600080fd5b805161156461101282610fcd565b81815260059190911b8201830190838101908783111561158357600080fd5b928401925b828410156104e95783518252928401929084019061158856fea2646970667358221220ec29db4862d44edbe41ca280b6d13315fca16506800823c6aa83bb1e55bc821964736f6c634300080a0033";

type PathFinderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathFinderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathFinder__factory extends ContractFactory {
  constructor(...args: PathFinderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PathFinder> {
    return super.deploy(overrides || {}) as Promise<PathFinder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PathFinder {
    return super.attach(address) as PathFinder;
  }
  override connect(signer: Signer): PathFinder__factory {
    return super.connect(signer) as PathFinder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathFinderInterface {
    return new utils.Interface(_abi) as PathFinderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PathFinder {
    return new Contract(address, _abi, signerOrProvider) as PathFinder;
  }
}
