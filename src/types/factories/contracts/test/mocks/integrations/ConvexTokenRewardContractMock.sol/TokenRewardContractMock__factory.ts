/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenRewardContractMock,
  TokenRewardContractMockInterface,
} from "../../../../../../contracts/test/mocks/integrations/ConvexTokenRewardContractMock.sol/TokenRewardContractMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "deposit_",
        type: "address",
      },
      {
        internalType: "address",
        name: "op_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Mock_ExtraRewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mock_ExtraStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mock_ExtraWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposits",
    outputs: [
      {
        internalType: "contract IDeposit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905534801561003657600080fd5b50604051610bf4380380610bf4833981016040819052610055916100a2565b600080546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100d5565b80516001600160a01b038116811461009d57600080fd5b919050565b600080604083850312156100b557600080fd5b6100be83610086565b91506100cc60208401610086565b90509250929050565b610b10806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80636b42e66a11610076578063adc9772e1161005b578063adc9772e14610198578063c00007b0146101ae578063f3fef3a31461019857600080fd5b80636b42e66a1461017057806370a082311461018557600080fd5b8063323a5e0b116100a7578063323a5e0b146100e8578063570ca7351461012d5780636b0916951461014d57600080fd5b80630fb5a6b4146100c357806318160ddd146100e0575b600080fd5b6100cd62093a8081565b6040519081526020015b60405180910390f35b6100cd6101c1565b6000546101089073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d7565b6002546101089073ffffffffffffffffffffffffffffffffffffffff1681565b61016061015b366004610924565b610258565b60405190151581526020016100d7565b61018361017e36600461095d565b6102bf565b005b6100cd610193366004610989565b6104c0565b6101606101a636600461095d565b600192915050565b6101606101bc366004610989565b61055b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025391906109a6565b905090565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081205480156102b55773ffffffffffffffffffffffffffffffffffffffff83166000818152600360205260408120556102b5908583610570565b5060019392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca669fa78373ffffffffffffffffffffffffffffffffffffffff1663075461726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c91906109bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b50506040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526024810184905273ffffffffffffffffffffffffffffffffffffffff851692506340c10f1991506044016020604051808303816000875af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048191906109dc565b5073ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906104b79084906109fe565b90915550505050565b600080546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152909116906370a0823190602401602060405180830381865afa158015610531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055591906109a6565b92915050565b60006105673383610258565b50600192915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105fd908490610602565b505050565b6000610664826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107139092919063ffffffff16565b8051909150156105fd578080602001905181019061068291906109dc565b6105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6060610722848460008561072c565b90505b9392505050565b6060824710156107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161070a565b843b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161070a565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161084f9190610a6d565b60006040518083038185875af1925050503d806000811461088c576040519150601f19603f3d011682016040523d82523d6000602084013e610891565b606091505b50915091506108a18282866108ac565b979650505050505050565b606083156108bb575081610725565b8251156108cb5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a9190610a89565b73ffffffffffffffffffffffffffffffffffffffff8116811461092157600080fd5b50565b6000806040838503121561093757600080fd5b8235610942816108ff565b91506020830135610952816108ff565b809150509250929050565b6000806040838503121561097057600080fd5b823561097b816108ff565b946020939093013593505050565b60006020828403121561099b57600080fd5b8135610725816108ff565b6000602082840312156109b857600080fd5b5051919050565b6000602082840312156109d157600080fd5b8151610725816108ff565b6000602082840312156109ee57600080fd5b8151801515811461072557600080fd5b60008219821115610a38577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60005b83811015610a58578181015183820152602001610a40565b83811115610a67576000848401525b50505050565b60008251610a7f818460208701610a3d565b9190910192915050565b6020815260008251806020840152610aa8816040850160208701610a3d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212204596b0ce7c8237b2db420876fc95b273d09200ff4edcfead35e0b6e715065a7f64736f6c634300080a0033";

type TokenRewardContractMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenRewardContractMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenRewardContractMock__factory extends ContractFactory {
  constructor(...args: TokenRewardContractMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    deposit_: string,
    op_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<TokenRewardContractMock> {
    return super.deploy(
      deposit_,
      op_,
      overrides || {},
    ) as Promise<TokenRewardContractMock>;
  }
  override getDeployTransaction(
    deposit_: string,
    op_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(deposit_, op_, overrides || {});
  }
  override attach(address: string): TokenRewardContractMock {
    return super.attach(address) as TokenRewardContractMock;
  }
  override connect(signer: Signer): TokenRewardContractMock__factory {
    return super.connect(signer) as TokenRewardContractMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenRewardContractMockInterface {
    return new utils.Interface(_abi) as TokenRewardContractMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TokenRewardContractMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as TokenRewardContractMock;
  }
}
