/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YearnV2Mock,
  YearnV2MockInterface,
} from "../../../../../contracts/test/mocks/integrations/YearnV2Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "addUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPricePerShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "updaters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxLoss",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620021d0380380620021d08339810160408190526200003491620002f9565b806001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000073573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009d919081019062000374565b604051602001620000af91906200042c565b604051602081830303815290604052816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000127919081019062000374565b6040516020016200013991906200045c565b60408051601f1981840301815291905281516200015e90600390602085019062000253565b5080516200017490600490602084019062000253565b505050620001916200018b620001f860201b60201c565b620001fc565b600680546001600160a01b0319166001600160a01b038316179055620001c26200024e602090811b62000b9817901c565b620001cf90600a6200059d565b608081905260075550336000908152600860205260409020805460ff19166001179055620005eb565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601290565b8280546200026190620005ae565b90600052602060002090601f016020900481019282620002855760008555620002d0565b82601f10620002a057805160ff1916838001178555620002d0565b82800160010185558215620002d0579182015b82811115620002d0578251825591602001919060010190620002b3565b50620002de929150620002e2565b5090565b5b80821115620002de5760008155600101620002e3565b6000602082840312156200030c57600080fd5b81516001600160a01b03811681146200032457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200035e57818101518382015260200162000344565b838111156200036e576000848401525b50505050565b6000602082840312156200038757600080fd5b81516001600160401b03808211156200039f57600080fd5b818401915084601f830112620003b457600080fd5b815181811115620003c957620003c96200032b565b604051601f8201601f19908116603f01168101908382118183101715620003f457620003f46200032b565b816040528281528760208487010111156200040e57600080fd5b6200042183602083016020880162000341565b979650505050505050565b6503cb2b0b937160d51b8152600082516200044f81600685016020870162000341565b9190910160060192915050565b613cbb60f11b8152600082516200047b81600285016020870162000341565b9190910160020192915050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004df578160001904821115620004c357620004c362000488565b80851615620004d157918102915b93841c9390800290620004a3565b509250929050565b600082620004f85750600162000597565b81620005075750600062000597565b81600181146200052057600281146200052b576200054b565b600191505062000597565b60ff8411156200053f576200053f62000488565b50506001821b62000597565b5060208310610133831016604e8410600b841016171562000570575081810a62000597565b6200057c83836200049e565b806000190482111562000593576200059362000488565b0290505b92915050565b60006200032460ff841683620004e7565b600181811c90821680620005c357607f821691505b60208210811415620005e557634e487b7160e01b600052602260045260246000fd5b50919050565b608051611bc26200060e6000396000818161073601526109a00152611bc26000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c806370a08231116100ee578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e14610395578063e63697c8146103db578063f2fde38b146103ee578063fc0c546a1461040157600080fd5b8063a9059cbb14610367578063b6b55f251461037a578063d0e30db01461038d57600080fd5b806395d89b41116100c857806395d89b411461034357806399530b061461034b578063a457c2d71461035457600080fd5b806370a08231146102c6578063715018a6146102fc5780638da5cb5b1461030457600080fd5b80632e1a7d4d1161015b5780633ccfd60b116101355780633ccfd60b1461027557806343d24a5e1461027d57806354a055c1146102905780636e553f65146102b357600080fd5b80632e1a7d4d14610240578063313ce56714610253578063395093511461026257600080fd5b8063118c9a071161018c578063118c9a071461021057806318160ddd1461022557806323b872dd1461022d57600080fd5b8062f714ce146101b257806306fdde03146101d8578063095ea7b3146101ed575b600080fd5b6101c56101c0366004611879565b610421565b6040519081526020015b60405180910390f35b6101e0610438565b6040516101cf91906118d1565b6102006101fb366004611922565b610447565b60405190151581526020016101cf565b61022361021e36600461194c565b61045d565b005b6002546101c5565b61020061023b366004611965565b6104e0565b6101c561024e36600461194c565b6105c8565b604051601281526020016101cf565b610200610270366004611922565b6105d4565b6101c561061d565b61022361028b3660046119a1565b610636565b61020061029e3660046119a1565b60086020526000908152604090205460ff1681565b6101c56102c1366004611879565b610706565b6101c56102d43660046119a1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610223610771565b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101cf565b6101e06107fe565b6101c560075481565b610200610362366004611922565b610808565b610200610375366004611922565b6108e0565b6101c561038836600461194c565b6108ed565b6101c56108f9565b6101c56103a33660046119bc565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101c56103e93660046119e6565b610992565b6102236103fc3660046119a1565b610a68565b60065461031e9073ffffffffffffffffffffffffffffffffffffffff1681565b600061042f83836001610992565b90505b92915050565b6060610442610b9d565b905090565b6000610454338484610c2f565b50600192915050565b3360009081526008602052604090205460ff166104db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f666f72207570646174657273206f6e6c7900000000000000000000000000000060448201526064015b60405180910390fd5b600755565b60006104ed848484610de3565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338452909152902054828110156105ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016104d2565b6105bb8533858403610c2f565b60019150505b9392505050565b60006104328233610421565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610454918590610618908690611a3a565b610c2f565b33600090815260208190526040812054610442906105c8565b60055473ffffffffffffffffffffffffffffffffffffffff1633146106b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d2565b73ffffffffffffffffffffffffffffffffffffffff16600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60065460009061072e9073ffffffffffffffffffffffffffffffffffffffff16333086611098565b60075461075b7f000000000000000000000000000000000000000000000000000000000000000085611a52565b6107659190611a8f565b90506104328282611174565b60055473ffffffffffffffffffffffffffffffffffffffff1633146107f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d2565b6107fc6000611294565b565b606061044261130b565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156108c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104d2565b6108d63385858403610c2f565b5060019392505050565b6000610454338484610de3565b60006104328233610706565b6006546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916104429173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611aca565b600061099e338561131a565b7f0000000000000000000000000000000000000000000000000000000000000000600754856109cd9190611a52565b6109d79190611a8f565b90506001821115610a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4c6f737320746f6f20626967000000000000000000000000000000000000000060448201526064016104d2565b6006546105c19073ffffffffffffffffffffffffffffffffffffffff163383611504565b60055473ffffffffffffffffffffffffffffffffffffffff163314610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d2565b73ffffffffffffffffffffffffffffffffffffffff8116610b8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104d2565b610b9581611294565b50565b601290565b606060038054610bac90611ae3565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd890611ae3565b8015610c255780601f10610bfa57610100808354040283529160200191610c25565b820191906000526020600020905b815481529060010190602001808311610c0857829003601f168201915b5050505050905090565b73ffffffffffffffffffffffffffffffffffffffff8316610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff8216610d74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff8216610f29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610fdf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290611023908490611a3a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161108991815260200190565b60405180910390a35b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526110929085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261155a565b73ffffffffffffffffffffffffffffffffffffffff82166111f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d2565b80600260008282546112039190611a3a565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260408120805483929061123d908490611a3a565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060048054610bac90611ae3565b73ffffffffffffffffffffffffffffffffffffffff82166113bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015611473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104d2565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208383039055600280548492906114af908490611b37565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610dd6565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526114ff9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016110f2565b60006115bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116669092919063ffffffff16565b8051909150156114ff57808060200190518101906115da9190611b4e565b6114ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104d2565b6060611675848460008561167d565b949350505050565b60608247101561170f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104d2565b843b611777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d2565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516117a09190611b70565b60006040518083038185875af1925050503d80600081146117dd576040519150601f19603f3d011682016040523d82523d6000602084013e6117e2565b606091505b50915091506117f28282866117fd565b979650505050505050565b6060831561180c5750816105c1565b82511561181c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d291906118d1565b803573ffffffffffffffffffffffffffffffffffffffff8116811461187457600080fd5b919050565b6000806040838503121561188c57600080fd5b8235915061189c60208401611850565b90509250929050565b60005b838110156118c05781810151838201526020016118a8565b838111156110925750506000910152565b60208152600082518060208401526118f08160408501602087016118a5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000806040838503121561193557600080fd5b61193e83611850565b946020939093013593505050565b60006020828403121561195e57600080fd5b5035919050565b60008060006060848603121561197a57600080fd5b61198384611850565b925061199160208501611850565b9150604084013590509250925092565b6000602082840312156119b357600080fd5b61042f82611850565b600080604083850312156119cf57600080fd5b6119d883611850565b915061189c60208401611850565b6000806000606084860312156119fb57600080fd5b8335925061199160208501611850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611a4d57611a4d611a0b565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a8a57611a8a611a0b565b500290565b600082611ac5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611adc57600080fd5b5051919050565b600181811c90821680611af757607f821691505b60208210811415611b31577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082821015611b4957611b49611a0b565b500390565b600060208284031215611b6057600080fd5b815180151581146105c157600080fd5b60008251611b828184602087016118a5565b919091019291505056fea2646970667358221220dd6ab68a357bcb22f83ca9169f71d50eab420f577d6615614a08c2ea63f4ce2f64736f6c634300080a0033";

type YearnV2MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YearnV2MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YearnV2Mock__factory extends ContractFactory {
  constructor(...args: YearnV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YearnV2Mock> {
    return super.deploy(_token, overrides || {}) as Promise<YearnV2Mock>;
  }
  override getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): YearnV2Mock {
    return super.attach(address) as YearnV2Mock;
  }
  override connect(signer: Signer): YearnV2Mock__factory {
    return super.connect(signer) as YearnV2Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YearnV2MockInterface {
    return new utils.Interface(_abi) as YearnV2MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YearnV2Mock {
    return new Contract(address, _abi, signerOrProvider) as YearnV2Mock;
  }
}
