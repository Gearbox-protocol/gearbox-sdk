/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WadRayMathTest,
  WadRayMathTestInterface,
} from "../../../../../contracts/test/mocks/libraries/WadRayMathTest";

const _abi = [
  {
    inputs: [],
    name: "halfRay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "halfWad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ray",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "rayDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "rayMul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "rayToWad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "wadDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "wadMul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "wadToRay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637df38c5b11610076578063d2e305851161005b578063d2e3058514610149578063e304e1d31461015c578063e57b6d3b1461016457600080fd5b80637df38c5b146101285780639c34d8801461013657600080fd5b806329cb5aa4116100a757806329cb5aa4146100f0578063416a8b2014610103578063761fdad61461011557600080fd5b806310de27b9146100c35780631fa89fc6146100e8575b600080fd5b6100d66100d13660046107f3565b610177565b60405190815260200160405180910390f35b6100d6610188565b6100d66100fe3660046107f3565b610197565b6b033b2e3c9fd0803ce80000006100d6565b6100d661012336600461080c565b6101a2565b670de0b6b3a76400006100d6565b6100d661014436600461080c565b6101b5565b6100d661015736600461080c565b6101c1565b6100d66101cd565b6100d661017236600461080c565b6101d7565b6000610182826101e3565b92915050565b6000610192610284565b905090565b60006101828261029d565b60006101ae8383610348565b9392505050565b60006101ae838361044e565b60006101ae83836105ac565b600061019261069c565b60006101ae83836106b1565b6000806101f4633b9aca008461085d565b905082610205633b9aca008361089a565b146040518060400160405280600281526020017f4d310000000000000000000000000000000000000000000000000000000000008152509061027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b60405180910390fd5b5092915050565b600061019260026b033b2e3c9fd0803ce800000061089a565b6000806102af6002633b9aca0061089a565b905060006102bd8483610948565b9050818110156040518060400160405280600281526020017f4d3200000000000000000000000000000000000000000000000000000000000081525090610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b50610340633b9aca008261089a565b949350505050565b6000821580610355575081155b1561036257506000610182565b816103766002670de0b6b3a764000061089a565b6103a0907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610960565b6103aa919061089a565b8311156040518060400160405280600281526020017f4d310000000000000000000000000000000000000000000000000000000000008152509061041b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b50670de0b6b3a764000061043060028261089a565b61043a848661085d565b6104449190610948565b6101ae919061089a565b60408051808201909152600281527f4d330000000000000000000000000000000000000000000000000000000000006020820152600090826104bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b5060006104cb60028461089a565b90506b033b2e3c9fd0803ce8000000610504827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610960565b61050e919061089a565b8411156040518060400160405280600281526020017f4d310000000000000000000000000000000000000000000000000000000000008152509061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b5082816105986b033b2e3c9fd0803ce80000008761085d565b6105a29190610948565b610340919061089a565b60008215806105b9575081155b156105c657506000610182565b816105de60026b033b2e3c9fd0803ce800000061089a565b610608907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610960565b610612919061089a565b8311156040518060400160405280600281526020017f4d3100000000000000000000000000000000000000000000000000000000000081525090610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b506b033b2e3c9fd0803ce800000061043060028261089a565b60006101926002670de0b6b3a764000061089a565b60408051808201909152600281527f4d33000000000000000000000000000000000000000000000000000000000000602082015260009082610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b50600061072e60028461089a565b9050670de0b6b3a7640000610763827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610960565b61076d919061089a565b8411156040518060400160405280600281526020017f4d31000000000000000000000000000000000000000000000000000000000000815250906107de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027491906108d5565b508281610598670de0b6b3a76400008761085d565b60006020828403121561080557600080fd5b5035919050565b6000806040838503121561081f57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108955761089561082e565b500290565b6000826108d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208083528351808285015260005b81811015610902578581018301518582016040015282016108e6565b81811115610914576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561095b5761095b61082e565b500190565b6000828210156109725761097261082e565b50039056fea26469706673582212204d1cf0ee3bbd037f0aeb7e35f62a821e47bba7e6fdd8b5f034b25bfd2470a45864736f6c634300080a0033";

type WadRayMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WadRayMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WadRayMathTest__factory extends ContractFactory {
  constructor(...args: WadRayMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WadRayMathTest> {
    return super.deploy(overrides || {}) as Promise<WadRayMathTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WadRayMathTest {
    return super.attach(address) as WadRayMathTest;
  }
  override connect(signer: Signer): WadRayMathTest__factory {
    return super.connect(signer) as WadRayMathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WadRayMathTestInterface {
    return new utils.Interface(_abi) as WadRayMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WadRayMathTest {
    return new Contract(address, _abi, signerOrProvider) as WadRayMathTest;
  }
}
