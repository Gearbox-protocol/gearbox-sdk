/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IZapperRegister,
  IZapperRegisterInterface,
} from "../IZapperRegister";

const _abi = [
  {
    type: "function",
    name: "zappers",
    inputs: [
      {
        name: "pool",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AddZapper",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemoveZapper",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

export class IZapperRegister__factory {
  static readonly abi = _abi;
  static createInterface(): IZapperRegisterInterface {
    return new utils.Interface(_abi) as IZapperRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IZapperRegister {
    return new Contract(address, _abi, signerOrProvider) as IZapperRegister;
  }
}
