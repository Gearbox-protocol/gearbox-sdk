/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV2AdapterEvents,
  IUniswapV2AdapterEventsInterface,
} from "../../IUniswapV2Adapter.sol/IUniswapV2AdapterEvents";

const _abi = [
  {
    type: "event",
    name: "SetPairStatus",
    inputs: [
      {
        name: "token0",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token1",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "allowed",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
] as const;

export class IUniswapV2AdapterEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV2AdapterEventsInterface {
    return new Interface(_abi) as IUniswapV2AdapterEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV2AdapterEvents {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IUniswapV2AdapterEvents;
  }
}
