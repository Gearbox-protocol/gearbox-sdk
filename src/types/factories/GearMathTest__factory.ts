/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GearMathTest } from "../GearMathTest";

export class GearMathTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<GearMathTest> {
    return super.deploy(overrides || {}) as Promise<GearMathTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GearMathTest {
    return super.attach(address) as GearMathTest;
  }
  connect(signer: Signer): GearMathTest__factory {
    return super.connect(signer) as GearMathTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GearMathTest {
    return new Contract(address, _abi, signerOrProvider) as GearMathTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmountWithInterest",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLiquidated",
        type: "bool",
      },
    ],
    name: "calcBorrowAmountPlusFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeIndexAtCreditAccountOpen_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentCumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLiquidation",
        type: "bool",
      },
    ],
    name: "calcCloseDistributionTest",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountToPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentCumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeIndexAtCreditAccountOpen_RAY",
        type: "uint256",
      },
    ],
    name: "calcCreditAccountAccruedInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalBorrow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBorrowRate_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDifference",
        type: "uint256",
      },
    ],
    name: "calcInterestAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBorrowRate_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDifference",
        type: "uint256",
      },
    ],
    name: "calcLinearIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806331d8bc271461005c5780635e69b4a6146100b2578063a5b2b4371461013a578063ab9f2eed1461019c578063d441e070146101f2575b600080fd5b61009c6004803603606081101561007257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610248565b6040518082815260200191505060405180910390f35b610108600480360360a08110156100c857600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803515159060200190929190505050610268565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6101866004803603608081101561015057600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506102a0565b6040518082815260200191505060405180910390f35b6101dc600480360360608110156101b257600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506102c3565b6040518082815260200191505060405180910390f35b6102326004803603606081101561020857600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506102e3565b6040518082815260200191505060405180910390f35b600061025f8383866103039092919063ffffffff16565b90509392505050565b6000806000806000610289898989898e61036c90949392919063ffffffff16565b945094509450945094509550955095509550959050565b60006102b984848488610472909392919063ffffffff16565b9050949350505050565b60006102da83838661052f9092919063ffffffff16565b90509392505050565b60006102fa83838661055f9092919063ffffffff16565b90509392505050565b60008061034d6103326301e1338061032486886105aa90919063ffffffff16565b61063090919063ffffffff16565b6b033b2e3c9fd0803ce80000006106b990919063ffffffff16565b9050610362818661074190919063ffffffff16565b9150509392505050565b60008060008060008086610380578a6103aa565b6103a961271061039b61251c8e6105aa90919063ffffffff16565b61063090919063ffffffff16565b5b905089955060006103bc878b8b61052f565b90506103ca8288838b610472565b955080821015610404576103e86001836108ba90919063ffffffff16565b95506103fd86826108ba90919063ffffffff16565b9250610463565b858210156104125781610414565b855b955061042981876108ba90919063ffffffff16565b9350858211610439576000610460565b61045f600161045188856108ba90919063ffffffff16565b6108ba90919063ffffffff16565b5b94505b50509550955095509550959050565b600082851161048357829050610527565b816104fd576104f86104b26103e86104a487876108ba90919063ffffffff16565b61093d90919063ffffffff16565b6104ea856104dc60646104ce898c6108ba90919063ffffffff16565b61093d90919063ffffffff16565b6106b990919063ffffffff16565b6106b990919063ffffffff16565b610524565b6105238361051560c88861093d90919063ffffffff16565b6106b990919063ffffffff16565b5b90505b949350505050565b600061055683610548848761074190919063ffffffff16565b610a9890919063ffffffff16565b90509392505050565b60008061058b6301e1338061057d85876105aa90919063ffffffff16565b61063090919063ffffffff16565b90506105a0818661074190919063ffffffff16565b9150509392505050565b6000808314156105bd576000905061062a565b60008284029050828482816105ce57fe5b0414610625576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610cc66021913960400191505060405180910390fd5b809150505b92915050565b60008082116106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816106b057fe5b04905092915050565b600080828401905083811015610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314806107515750600082145b1561075f57600090506108b4565b8160026b033b2e3c9fd0803ce80000008161077657fe5b047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03816107a057fe5b048311156040518060400160405280600281526020017f4d3100000000000000000000000000000000000000000000000000000000000081525090610880576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561084557808201518184015260208101905061082a565b50505050905090810190601f1680156108725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506b033b2e3c9fd0803ce800000060026b033b2e3c9fd0803ce8000000816108a457fe5b0483850201816108b057fe5b0490505b92915050565b600082821115610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008083148061094d5750600082145b1561095b5760009050610a92565b8160026127108161096857fe5b047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038161099257fe5b048311156040518060400160405280600281526020017f4d3100000000000000000000000000000000000000000000000000000000000081525090610a72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a37578082015181840152602081019050610a1c565b50505050905090810190601f168015610a645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612710600261271081610a8257fe5b048385020181610a8e57fe5b0490505b92915050565b6000808214156040518060400160405280600281526020017f4d3300000000000000000000000000000000000000000000000000000000000081525090610b7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b3f578082015181840152602081019050610b24565b50505050905090810190601f168015610b6c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600060028381610b8757fe5b0490506b033b2e3c9fd0803ce8000000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0381610bc157fe5b048411156040518060400160405280600281526020017f4d3100000000000000000000000000000000000000000000000000000000000081525090610ca1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c66578082015181840152602081019050610c4b565b50505050905090810190601f168015610c935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082816b033b2e3c9fd0803ce800000086020181610cbb57fe5b049150509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200805fc5c54a2ad79ec4751bb569c7edf04cb24b1658ac63ef10dc176721ee8ff64736f6c63430007060033";
