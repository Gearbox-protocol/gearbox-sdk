/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GearMathTest } from "../GearMathTest";

export class GearMathTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<GearMathTest> {
    return super.deploy(overrides || {}) as Promise<GearMathTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GearMathTest {
    return super.attach(address) as GearMathTest;
  }
  connect(signer: Signer): GearMathTest__factory {
    return super.connect(signer) as GearMathTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GearMathTest {
    return new Contract(address, _abi, signerOrProvider) as GearMathTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmountWithInterest",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLiquidated",
        type: "bool",
      },
    ],
    name: "calcBorrowAmountPlusFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentCumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeIndexAtCreditAccountOpen_RAY",
        type: "uint256",
      },
    ],
    name: "calcCreditAccountAccruedInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalBorrow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBorrowRate_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDifference",
        type: "uint256",
      },
    ],
    name: "calcInterestAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cumulativeIndex_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBorrowRate_RAY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDifference",
        type: "uint256",
      },
    ],
    name: "calcLinearIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b4b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806331d8bc2714610051578063a5b2b437146100a7578063ab9f2eed14610109578063d441e0701461015f575b600080fd5b6100916004803603606081101561006757600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506101b5565b6040518082815260200191505060405180910390f35b6100f3600480360360808110156100bd57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506101d5565b6040518082815260200191505060405180910390f35b6101496004803603606081101561011f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506101f8565b6040518082815260200191505060405180910390f35b61019f6004803603606081101561017557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610218565b6040518082815260200191505060405180910390f35b60006101cc8383866102389092919063ffffffff16565b90509392505050565b60006101ee848484886102a1909392919063ffffffff16565b9050949350505050565b600061020f83838661035e9092919063ffffffff16565b90509392505050565b600061022f83838661038e9092919063ffffffff16565b90509392505050565b6000806102826102676301e1338061025986886103d990919063ffffffff16565b61045f90919063ffffffff16565b6b033b2e3c9fd0803ce80000006104e890919063ffffffff16565b9050610297818661057090919063ffffffff16565b9150509392505050565b60008285116102b257829050610356565b8161032c576103276102e16103e86102d387876106e990919063ffffffff16565b61076c90919063ffffffff16565b6103198561030b60646102fd898c6106e990919063ffffffff16565b61076c90919063ffffffff16565b6104e890919063ffffffff16565b6104e890919063ffffffff16565b610353565b6103528361034460c88861076c90919063ffffffff16565b6104e890919063ffffffff16565b5b90505b949350505050565b600061038583610377848761057090919063ffffffff16565b6108c790919063ffffffff16565b90509392505050565b6000806103ba6301e133806103ac85876103d990919063ffffffff16565b61045f90919063ffffffff16565b90506103cf818661057090919063ffffffff16565b9150509392505050565b6000808314156103ec5760009050610459565b60008284029050828482816103fd57fe5b0414610454576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610af56021913960400191505060405180910390fd5b809150505b92915050565b60008082116104d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816104df57fe5b04905092915050565b600080828401905083811015610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314806105805750600082145b1561058e57600090506106e3565b8160026b033b2e3c9fd0803ce8000000816105a557fe5b047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03816105cf57fe5b048311156040518060400160405280600281526020017f4d31000000000000000000000000000000000000000000000000000000000000815250906106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506b033b2e3c9fd0803ce800000060026b033b2e3c9fd0803ce8000000816106d357fe5b0483850201816106df57fe5b0490505b92915050565b600082821115610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008083148061077c5750600082145b1561078a57600090506108c1565b8160026127108161079757fe5b047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03816107c157fe5b048311156040518060400160405280600281526020017f4d31000000000000000000000000000000000000000000000000000000000000815250906108a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561086657808201518184015260208101905061084b565b50505050905090810190601f1680156108935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506127106002612710816108b157fe5b0483850201816108bd57fe5b0490505b92915050565b6000808214156040518060400160405280600281526020017f4d33000000000000000000000000000000000000000000000000000000000000815250906109a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561096e578082015181840152602081019050610953565b50505050905090810190601f16801561099b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000600283816109b657fe5b0490506b033b2e3c9fd0803ce8000000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03816109f057fe5b048411156040518060400160405280600281526020017f4d3100000000000000000000000000000000000000000000000000000000000081525090610ad0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a95578082015181840152602081019050610a7a565b50505050905090810190601f168015610ac25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082816b033b2e3c9fd0803ce800000086020181610aea57fe5b049150509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212204365b361853e5c85b95e08fa587ce76450f4d2225d104877dda91e25f602826c64736f6c63430007060033";
