/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompositePriceFeed,
  CompositePriceFeedInterface,
  PriceFeedParamsStruct,
} from "../CompositePriceFeed";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "priceFeeds",
        type: "tuple[2]",
        internalType: "struct PriceFeedParams[2]",
        components: [
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "stalenessPeriod",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "description",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestRoundData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "answer",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeed0",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeed1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeedType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum PriceFeedType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "skipCheck1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "skipPriceCheck",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stalenessPeriod0",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stalenessPeriod1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetFeedScale",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "AddressIsNotContractException",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "IncorrectParameterException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectPriceException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectPriceFeedException",
    inputs: [],
  },
  {
    type: "error",
    name: "StalePriceException",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroAddressException",
    inputs: [],
  },
] as const;

const _bytecode =
  "";

type CompositePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompositePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompositePriceFeed__factory extends ContractFactory {
  constructor(...args: CompositePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeeds: [PriceFeedParamsStruct, PriceFeedParamsStruct],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompositePriceFeed> {
    return super.deploy(
      priceFeeds,
      overrides || {}
    ) as Promise<CompositePriceFeed>;
  }
  override getDeployTransaction(
    priceFeeds: [PriceFeedParamsStruct, PriceFeedParamsStruct],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeeds, overrides || {});
  }
  override attach(address: string): CompositePriceFeed {
    return super.attach(address) as CompositePriceFeed;
  }
  override connect(signer: Signer): CompositePriceFeed__factory {
    return super.connect(signer) as CompositePriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompositePriceFeedInterface {
    return new utils.Interface(_abi) as CompositePriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompositePriceFeed {
    return new Contract(address, _abi, signerOrProvider) as CompositePriceFeed;
  }
}
