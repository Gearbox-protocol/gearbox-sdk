/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILidoV1AdapterEvents,
  ILidoV1AdapterEventsInterface,
} from "../../../../../../../@gearbox-protocol/integrations-v2/contracts/interfaces/lido/ILidoV1Adapter.sol/ILidoV1AdapterEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "NewLimit",
    type: "event",
  },
];

export class ILidoV1AdapterEvents__factory {
  static readonly abi = _abi;
  static createInterface(): ILidoV1AdapterEventsInterface {
    return new utils.Interface(_abi) as ILidoV1AdapterEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILidoV1AdapterEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILidoV1AdapterEvents;
  }
}
