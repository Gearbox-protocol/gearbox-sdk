/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISwapAggregator,
  ISwapAggregatorInterface,
} from "../../../../../@gearbox-protocol/router/contracts/interfaces/ISwapAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAll",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
    ],
    name: "findAllSwaps",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
    ],
    name: "findBestAllInputSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
    ],
    name: "findBestAllInputSwapOrRevert",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
    ],
    name: "findBestSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
    ],
    name: "findBestSwapOrRevert",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum SwapOperation",
            name: "swapOperation",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "externalSlippage",
            type: "bool",
          },
        ],
        internalType: "struct SwapTask",
        name: "swapTask",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "adapters",
        type: "address[]",
      },
    ],
    name: "findBestSwapQuote",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall",
            name: "multiCall",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "found",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
        ],
        internalType: "struct SwapQuote",
        name: "bestQuote",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum SwapOperation",
            name: "swapOperation",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "externalSlippage",
            type: "bool",
          },
        ],
        internalType: "struct SwapTask",
        name: "swapTask",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "adapters",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "gasPriceInTokenOut",
        type: "uint256",
      },
    ],
    name: "getBestDirectPairSwap",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall",
            name: "multiCall",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "found",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
        ],
        internalType: "struct SwapQuote",
        name: "quote",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getComponentId",
    outputs: [
      {
        internalType: "enum RouterComponent",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "task",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "swapAllNormalTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct Balance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "connectors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adapters",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "slippagePerStep",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "force",
            type: "bool",
          },
          {
            internalType: "enum TokenType",
            name: "targetType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "depositAdapter",
                type: "address",
              },
              {
                internalType: "address",
                name: "withdrawAdapter",
                type: "address",
              },
            ],
            internalType: "struct TokenAdapters[]",
            name: "foundAdapters",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceTargetRAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initTargetBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
            ],
            internalType: "struct MultiCall[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct StrategyPathTask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ISwapAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapAggregatorInterface {
    return new utils.Interface(_abi) as ISwapAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISwapAggregator {
    return new Contract(address, _abi, signerOrProvider) as ISwapAggregator;
  }
}
