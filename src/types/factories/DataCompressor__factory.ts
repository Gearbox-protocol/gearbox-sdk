/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DataCompressor } from "../DataCompressor";

export class DataCompressor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _addressProvider: string,
    overrides?: Overrides
  ): Promise<DataCompressor> {
    return super.deploy(
      _addressProvider,
      overrides || {}
    ) as Promise<DataCompressor>;
  }
  getDeployTransaction(
    _addressProvider: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  attach(address: string): DataCompressor {
    return super.attach(address) as DataCompressor;
  }
  connect(signer: Signer): DataCompressor__factory {
    return super.connect(signer) as DataCompressor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataCompressor {
    return new Contract(address, _abi, signerOrProvider) as DataCompressor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETHToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract AddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractsRegister",
    outputs: [
      {
        internalType: "contract ContractsRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_allowedContract",
        type: "address",
      },
    ],
    name: "getAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "getCreditAccountData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "bool",
            name: "inUse",
            type: "bool",
          },
          {
            internalType: "address",
            name: "creditManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "borrowedAmountPlusInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.TokenBalance[]",
            name: "balances",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataTypes.CreditAccountData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "getCreditAccountDataExtended",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "bool",
            name: "inUse",
            type: "bool",
          },
          {
            internalType: "address",
            name: "creditManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "borrowedAmountPlusInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.TokenBalance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeIndexAtOpen",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "since",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.CreditAccountDataExtended",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "getCreditAccountList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "bool",
            name: "inUse",
            type: "bool",
          },
          {
            internalType: "address",
            name: "creditManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "borrowedAmountPlusInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.TokenBalance[]",
            name: "balances",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataTypes.CreditAccountData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "getCreditAccountParameters",
    outputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeIndexAtOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_since",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "getCreditManagerData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasAccount",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isWETH",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canBorrow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxLeverageFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "allowedTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "allowedContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "adapter",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.ContractAdapter[]",
            name: "adapters",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataTypes.CreditManagerData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "getCreditManagersList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasAccount",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isWETH",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "canBorrow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxLeverageFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "allowedTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "allowedContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "adapter",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.ContractAdapter[]",
            name: "adapters",
            type: "tuple[]",
          },
        ],
        internalType: "struct DataTypes.CreditManagerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getPoolData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isWETH",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "dieselToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "linearCumulativeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositAPY_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAPY_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dieselRate_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawFee",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.PoolData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolsList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isWETH",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "dieselToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "linearCumulativeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedLiquidityLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositAPY_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAPY_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dieselRate_RAY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawFee",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.PoolData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getTokenData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620053dd380380620053dd833981810160405281019062000037919062000245565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c513c9bb6040518163ffffffff1660e01b815260040160206040518083038186803b158015620000de57600080fd5b505afa158015620000f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000119919062000245565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c252f916040518163ffffffff1660e01b815260040160206040518083038186803b158015620001b657600080fd5b505afa158015620001cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f1919062000245565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050620002bf565b6000815190506200023f81620002a5565b92915050565b6000602082840312156200025857600080fd5b600062000268848285016200022e565b91505092915050565b60006200027e8262000285565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002b08162000271565b8114620002bc57600080fd5b50565b60805160601c60a05160601c6150a962000334600039806113fa5280611f49528061298052508061030a5280610c66528061176e5280611d405280611e435280611f7052806121a052806121ca5280612271528061241f52806124c6528061264b5280613427528061352a52506150a96000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634b2f336d1161008c578063a80deda311610066578063a80deda31461023c578063b10b074e1461026c578063b5b12cd71461029c578063b8169039146102cf576100cf565b80634b2f336d146101d05780634c472fc9146101ee5780637a0c7b211461021e576100cf565b80630dbd616d146100d457806313d21cdf1461010457806313ff7e9f14610134578063191482d4146101645780631bcd8fc0146101945780632954018c146101b2575b600080fd5b6100ee60048036038101906100e99190613d9e565b6102ff565b6040516100fb9190614c69565b60405180910390f35b61011e60048036038101906101199190613d4c565b610c5b565b60405161012b9190614cad565b60405180910390f35b61014e60048036038101906101499190613d4c565b6115f2565b60405161015b9190614cc9565b60405180910390f35b61017e60048036038101906101799190613d9e565b611763565b60405161018b9190614c47565b60405180910390f35b61019c611d3a565b6040516101a99190614bcd565b60405180910390f35b6101ba611f23565b6040516101c79190614bef565b60405180910390f35b6101d8611f47565b6040516101e59190614ad7565b60405180910390f35b61020860048036038101906102039190613d9e565b611f6b565b6040516102159190614ad7565b60405180910390f35b61022661219e565b6040516102339190614c0a565b60405180910390f35b61025660048036038101906102519190613d4c565b6121c2565b6040516102639190614b89565b60405180910390f35b61028660048036038101906102819190613d9e565b612640565b6040516102939190614c8b565b60405180910390f35b6102b660048036038101906102b19190613d4c565b61320e565b6040516102c69493929190614b44565b60405180910390f35b6102e960048036038101906102e49190613d4c565b613421565b6040516102f69190614bab565b60405180910390f35b6103076138fa565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fbc6f6b826040518263ffffffff1660e01b81526004016103619190614ad7565b60206040518083038186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190613e3d565b6040518060400160405280600281526020017f573300000000000000000000000000000000000000000000000000000000000081525090610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f9190614c25565b60405180910390fd5b5060008490508073ffffffffffffffffffffffffffffffffffffffff1663256ac915856040518263ffffffff1660e01b81526004016104679190614ad7565b60206040518083038186803b15801561047f57600080fd5b505afa158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190613e3d565b6040518060400160405280600281526020017f56310000000000000000000000000000000000000000000000000000000000008152509061052e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105259190614c25565b60405180910390fd5b506105376138fa565b84816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008273ffffffffffffffffffffffffffffffffffffffff1663055ee9b5876040518263ffffffff1660e01b81526004016105e29190614ad7565b60206040518083038186803b1580156105fa57600080fd5b505afa15801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190613d75565b905080826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008373ffffffffffffffffffffffffffffffffffffffff1663f93f515b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b457600080fd5b505afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190613e66565b90508073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561073457600080fd5b505afa158015610748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076c9190613d75565b836080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663c7de38a6836040518263ffffffff1660e01b81526004016107dc9190614ad7565b60206040518083038186803b1580156107f457600080fd5b505afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190613ed0565b8360c00181815250508073ffffffffffffffffffffffffffffffffffffffff1663dfd59465836040518263ffffffff1660e01b815260040161086e9190614ad7565b60206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190613ed0565b8360e001818152505060008473ffffffffffffffffffffffffffffffffffffffff1663570a7af26040518163ffffffff1660e01b815260040160206040518083038186803b15801561090f57600080fd5b505afa158015610923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109479190613d75565b90508073ffffffffffffffffffffffffffffffffffffffff166345d31f9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190613ed0565b8461010001818152505060008273ffffffffffffffffffffffffffffffffffffffff166320a05ff76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1957600080fd5b505afa158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a519190613ed0565b90508067ffffffffffffffff81118015610a6a57600080fd5b50604051908082528060200260200182016040528015610aa457816020015b610a916139a7565b815260200190600190039081610a895790505b5085610120018190525060005b81811015610bb857610ac16139a7565b8473ffffffffffffffffffffffffffffffffffffffff1663af0a650287846040518363ffffffff1660e01b8152600401610afc929190614b1b565b60806040518083038186803b158015610b1457600080fd5b505afa158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c9190613dda565b9050508260000183602001828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505050808761012001518381518110610b9f57fe5b6020026020010181905250508080600101915050610ab1565b508273ffffffffffffffffffffffffffffffffffffffff16633192195c856040518263ffffffff1660e01b8152600401610bf29190614ad7565b60206040518083038186803b158015610c0a57600080fd5b505afa158015610c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c429190613ed0565b8560a00181815250508497505050505050505092915050565b610c636139d7565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635b16ebb7826040518263ffffffff1660e01b8152600401610cbd9190614ad7565b60206040518083038186803b158015610cd557600080fd5b505afa158015610ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0d9190613e3d565b6040518060400160405280600281526020017f573200000000000000000000000000000000000000000000000000000000000081525090610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b9190614c25565b60405180910390fd5b50610d8d6139d7565b600084905084826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663fe14112d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1057600080fd5b505afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e489190613ed0565b8260c00181815250508073ffffffffffffffffffffffffffffffffffffffff1663ef8d96036040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9757600080fd5b505afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190613ed0565b8260e00181815250508073ffffffffffffffffffffffffffffffffffffffff1663743753596040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1e57600080fd5b505afa158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190613ed0565b8260a00181815250508073ffffffffffffffffffffffffffffffffffffffff16634c19386c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190613ed0565b826101000181815250508073ffffffffffffffffffffffffffffffffffffffff1663788c6bfe6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102d57600080fd5b505afa158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190613ed0565b826101600181815250508073ffffffffffffffffffffffffffffffffffffffff16630fce70fb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110b557600080fd5b505afa1580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190613ed0565b8260800181815250508073ffffffffffffffffffffffffffffffffffffffff166345d31f9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190613ed0565b826101400181815250508073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c457600080fd5b505afa1580156111d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fc9190613d75565b826040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166336dda7d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561127957600080fd5b505afa15801561128d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b19190613d75565b826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663788c6bfe6040518163ffffffff1660e01b815260040160206040518083038186803b15801561132e57600080fd5b505afa158015611342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113669190613ed0565b826101600181815250508073ffffffffffffffffffffffffffffffffffffffff1663e941fa786040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b657600080fd5b505afa1580156113ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ee9190613ed0565b826101800181815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff16148260200190151590811515815250506000826060015173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114a657600080fd5b505afa1580156114ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114de9190613ed0565b905060008273ffffffffffffffffffffffffffffffffffffffff16635427c938836040518263ffffffff1660e01b815260040161151b9190614ceb565b60206040518083038186803b15801561153357600080fd5b505afa158015611547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156b9190613ed0565b9050600081146115d4576115cf816115c161159687610180015161271061360d90919063ffffffff16565b6115b388610100015189610140015161369090919063ffffffff16565b61371690919063ffffffff16565b61387190919063ffffffff16565b6115db565b8361014001515b846101200181815250508395505050505050919050565b6115fa613a83565b611602613a83565b600083905083826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561168557600080fd5b505afa158015611699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bd9190613ef9565b826040019060ff16908160ff16815250508073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561171457600080fd5b505afa158015611728573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117519190613e8f565b82602001819052508192505050919050565b61176b613abd565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fbc6f6b826040518263ffffffff1660e01b81526004016117c59190614ad7565b60206040518083038186803b1580156117dd57600080fd5b505afa1580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118159190613e3d565b6040518060400160405280600281526020017f57330000000000000000000000000000000000000000000000000000000000008152509061188c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118839190614c25565b60405180910390fd5b50611895613abd565b60006118a186866102ff565b90508060000151826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151826020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060600151826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060800151826080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060a001518260a00181815250508060c001518260c00181815250508060e001518260e00181815250508061010001518261010001818152505080610120015182610120018190525060008673ffffffffffffffffffffffffffffffffffffffff1663e958b704876040518263ffffffff1660e01b8152600401611a179190614ad7565b60206040518083038186803b158015611a2f57600080fd5b505afa158015611a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a679190613d75565b90508073ffffffffffffffffffffffffffffffffffffffff16631afbb7a46040518163ffffffff1660e01b815260040160206040518083038186803b158015611aaf57600080fd5b505afa158015611ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae79190613ed0565b836101800181815250508073ffffffffffffffffffffffffffffffffffffffff166317d11a156040518163ffffffff1660e01b815260040160206040518083038186803b158015611b3757600080fd5b505afa158015611b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6f9190613ed0565b836101a00181815250508073ffffffffffffffffffffffffffffffffffffffff16633dc54b406040518163ffffffff1660e01b815260040160206040518083038186803b158015611bbf57600080fd5b505afa158015611bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf79190613ed0565b836101c00181815250508673ffffffffffffffffffffffffffffffffffffffff16633ce073558760006040518363ffffffff1660e01b8152600401611c3d929190614af2565b60206040518083038186803b158015611c5557600080fd5b505afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d9190613ed0565b836101400181815250508673ffffffffffffffffffffffffffffffffffffffff16633ce073558760016040518363ffffffff1660e01b8152600401611cd3929190614af2565b60206040518083038186803b158015611ceb57600080fd5b505afa158015611cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d239190613ed0565b836101600181815250508294505050505092915050565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b4ac68606040518163ffffffff1660e01b815260040160206040518083038186803b158015611da457600080fd5b505afa158015611db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddc9190613ed0565b905060008167ffffffffffffffff81118015611df757600080fd5b50604051908082528060200260200182016040528015611e3157816020015b611e1e6139d7565b815260200190600190039081611e165790505b50905060005b82811015611f1a5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ac4afa38836040518263ffffffff1660e01b8152600401611e9a9190614ceb565b60206040518083038186803b158015611eb257600080fd5b505afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190613d75565b9050611ef581610c5b565b838381518110611f0157fe5b6020026020010181905250508080600101915050611e37565b50809250505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fbc6f6b826040518263ffffffff1660e01b8152600401611fc79190614ad7565b60206040518083038186803b158015611fdf57600080fd5b505afa158015611ff3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120179190613e3d565b6040518060400160405280600281526020017f57330000000000000000000000000000000000000000000000000000000000008152509061208e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120859190614c25565b60405180910390fd5b508373ffffffffffffffffffffffffffffffffffffffff1663f93f515b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120d557600080fd5b505afa1580156120e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210d9190613e66565b73ffffffffffffffffffffffffffffffffffffffff1663fdd57645846040518263ffffffff1660e01b81526004016121459190614ad7565b60206040518083038186803b15801561215d57600080fd5b505afa158015612171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121959190613d75565b91505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606000805b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c29277cd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561222e57600080fd5b505afa158015612242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122669190613ed0565b8110156123bf5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e16e4fc836040518263ffffffff1660e01b81526004016122c89190614ceb565b60206040518083038186803b1580156122e057600080fd5b505afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123189190613d75565b90508073ffffffffffffffffffffffffffffffffffffffff1663256ac915866040518263ffffffff1660e01b81526004016123539190614ad7565b60206040518083038186803b15801561236b57600080fd5b505afa15801561237f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a39190613e3d565b156123b15782806001019350505b5080806001019150506121c8565b5060008167ffffffffffffffff811180156123d957600080fd5b5060405190808252806020026020018201604052801561241357816020015b6124006138fa565b8152602001906001900390816123f85790505b5090506000915060005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c29277cd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561248357600080fd5b505afa158015612497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bb9190613ed0565b8110156126355760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e16e4fc836040518263ffffffff1660e01b815260040161251d9190614ceb565b60206040518083038186803b15801561253557600080fd5b505afa158015612549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256d9190613d75565b90508073ffffffffffffffffffffffffffffffffffffffff1663256ac915876040518263ffffffff1660e01b81526004016125a89190614ad7565b60206040518083038186803b1580156125c057600080fd5b505afa1580156125d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f89190613e3d565b156126275761260781876102ff565b83858151811061261357fe5b602002602001018190525083806001019450505b50808060010191505061241d565b508092505050919050565b612648613b8d565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fbc6f6b826040518263ffffffff1660e01b81526004016126a29190614ad7565b60206040518083038186803b1580156126ba57600080fd5b505afa1580156126ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f29190613e3d565b6040518060400160405280600281526020017f573300000000000000000000000000000000000000000000000000000000000081525090612769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127609190614c25565b60405180910390fd5b506000849050612777613b8d565b85816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663256ac915866040518263ffffffff1660e01b81526004016127e89190614ad7565b60206040518083038186803b15801561280057600080fd5b505afa158015612814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128389190613e3d565b81602001901515908115158152505060008273ffffffffffffffffffffffffffffffffffffffff1663f93f515b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561288f57600080fd5b505afa1580156128a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c79190613e66565b90508073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561290f57600080fd5b505afa158015612923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129479190613d75565b826040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff161482606001901515908115158152505060008373ffffffffffffffffffffffffffffffffffffffff1663570a7af26040518163ffffffff1660e01b815260040160206040518083038186803b158015612a2857600080fd5b505afa158015612a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a609190613d75565b90508073ffffffffffffffffffffffffffffffffffffffff16632e97ca21896040518263ffffffff1660e01b8152600401612a9b9190614ad7565b60206040518083038186803b158015612ab357600080fd5b505afa158015612ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aeb9190613e3d565b8360800190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff166345d31f9d6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b4057600080fd5b505afa158015612b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b789190613ed0565b8360a00181815250508073ffffffffffffffffffffffffffffffffffffffff1663743753596040518163ffffffff1660e01b815260040160206040518083038186803b158015612bc757600080fd5b505afa158015612bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bff9190613ed0565b836101200181815250508373ffffffffffffffffffffffffffffffffffffffff16639b2cb5d86040518163ffffffff1660e01b815260040160206040518083038186803b158015612c4f57600080fd5b505afa158015612c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c879190613ed0565b8360c00181815250508373ffffffffffffffffffffffffffffffffffffffff16635f48f3936040518163ffffffff1660e01b815260040160206040518083038186803b158015612cd657600080fd5b505afa158015612cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d0e9190613ed0565b8360e00181815250508373ffffffffffffffffffffffffffffffffffffffff1663b2c53a6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015612d5d57600080fd5b505afa158015612d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d959190613ed0565b8361010001818152505060008273ffffffffffffffffffffffffffffffffffffffff166320a05ff76040518163ffffffff1660e01b815260040160206040518083038186803b158015612de757600080fd5b505afa158015612dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1f9190613ed0565b90508067ffffffffffffffff81118015612e3857600080fd5b50604051908082528060200260200182016040528015612e675781602001602082028036833780820191505090505b5084610140018190525060005b81811015612f5d578373ffffffffffffffffffffffffffffffffffffffff16635e5f2e26826040518263ffffffff1660e01b8152600401612eb59190614ceb565b60206040518083038186803b158015612ecd57600080fd5b505afa158015612ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f059190613d75565b8561014001518281518110612f1657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050612e74565b5060008373ffffffffffffffffffffffffffffffffffffffff166350e036ff6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fa657600080fd5b505afa158015612fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fde9190613ed0565b90508067ffffffffffffffff81118015612ff757600080fd5b5060405190808252806020026020018201604052801561303157816020015b61301e613c20565b8152602001906001900390816130165790505b5085610160018190525060005b818110156131fd5761304e613c20565b8573ffffffffffffffffffffffffffffffffffffffff16635094cb4f836040518263ffffffff1660e01b81526004016130879190614ceb565b60206040518083038186803b15801561309f57600080fd5b505afa1580156130b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130d79190613d75565b816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508573ffffffffffffffffffffffffffffffffffffffff1663fdd5764582600001516040518263ffffffff1660e01b815260040161314b9190614ad7565b60206040518083038186803b15801561316357600080fd5b505afa158015613177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319b9190613d75565b816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508087610160015183815181106131e457fe5b602002602001018190525050808060010191505061303e565b508497505050505050505092915050565b60008060008060008590508073ffffffffffffffffffffffffffffffffffffffff1663c12c21c06040518163ffffffff1660e01b815260040160206040518083038186803b15801561325f57600080fd5b505afa158015613273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132979190613d75565b94508073ffffffffffffffffffffffffffffffffffffffff16631afbb7a46040518163ffffffff1660e01b815260040160206040518083038186803b1580156132df57600080fd5b505afa1580156132f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133179190613ed0565b93508073ffffffffffffffffffffffffffffffffffffffff166317d11a156040518163ffffffff1660e01b815260040160206040518083038186803b15801561335f57600080fd5b505afa158015613373573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133979190613ed0565b92508073ffffffffffffffffffffffffffffffffffffffff16633dc54b406040518163ffffffff1660e01b815260040160206040518083038186803b1580156133df57600080fd5b505afa1580156133f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134179190613ed0565b9150509193509193565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c29277cd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561348b57600080fd5b505afa15801561349f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c39190613ed0565b905060008167ffffffffffffffff811180156134de57600080fd5b5060405190808252806020026020018201604052801561351857816020015b613505613b8d565b8152602001906001900390816134fd5790505b50905060005b828110156136025760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e16e4fc836040518263ffffffff1660e01b81526004016135819190614ceb565b60206040518083038186803b15801561359957600080fd5b505afa1580156135ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135d19190613d75565b90506135dd8187612640565b8383815181106135e957fe5b602002602001018190525050808060010191505061351e565b508092505050919050565b600082821115613685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000808314156136a35760009050613710565b60008284029050828482816136b457fe5b041461370b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806150536021913960400191505060405180910390fd5b809150505b92915050565b6000808314806137265750600082145b15613734576000905061386b565b8160026127108161374157fe5b047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038161376b57fe5b048311156040518060400160405280600281526020017f4d310000000000000000000000000000000000000000000000000000000000008152509061384b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156138105780820151818401526020810190506137f5565b50505050905090810190601f16801561383d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061271060026127108161385b57fe5b04838502018161386757fe5b0490505b92915050565b60008082116138e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816138f157fe5b04905092915050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806101a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600060ff1681525090565b604051806101e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000613c79613c7484614d37565b614d06565b905082815260208101848484011115613c9157600080fd5b613c9c848285614f99565b509392505050565b600081359050613cb381614fdf565b92915050565b600081519050613cc881614fdf565b92915050565b600081519050613cdd81614ff6565b92915050565b600081519050613cf28161500d565b92915050565b600082601f830112613d0957600080fd5b8151613d19848260208601613c66565b91505092915050565b600081519050613d3181615024565b92915050565b600081519050613d468161503b565b92915050565b600060208284031215613d5e57600080fd5b6000613d6c84828501613ca4565b91505092915050565b600060208284031215613d8757600080fd5b6000613d9584828501613cb9565b91505092915050565b60008060408385031215613db157600080fd5b6000613dbf85828601613ca4565b9250506020613dd085828601613ca4565b9150509250929050565b60008060008060808587031215613df057600080fd5b6000613dfe87828801613cb9565b9450506020613e0f87828801613d22565b9350506040613e2087828801613d22565b9250506060613e3187828801613d22565b91505092959194509250565b600060208284031215613e4f57600080fd5b6000613e5d84828501613cce565b91505092915050565b600060208284031215613e7857600080fd5b6000613e8684828501613ce3565b91505092915050565b600060208284031215613ea157600080fd5b600082015167ffffffffffffffff811115613ebb57600080fd5b613ec784828501613cf8565b91505092915050565b600060208284031215613ee257600080fd5b6000613ef084828501613d22565b91505092915050565b600060208284031215613f0b57600080fd5b6000613f1984828501613d37565b91505092915050565b6000613f2e8383613fab565b60208301905092915050565b6000613f4683836142d9565b60408301905092915050565b6000613f5e838361444b565b905092915050565b6000613f7283836145ff565b905092915050565b6000613f868383614815565b6101a08301905092915050565b6000613f9f8383614a2b565b60408301905092915050565b613fb481614eea565b82525050565b613fc381614eea565b82525050565b6000613fd482614dc7565b613fde8185614e62565b9350613fe983614d67565b8060005b8381101561401a5781516140018882613f22565b975061400c83614e14565b925050600181019050613fed565b5085935050505092915050565b600061403282614dd2565b61403c8185614e73565b935061404783614d77565b8060005b8381101561407857815161405f8882613f3a565b975061406a83614e21565b92505060018101905061404b565b5085935050505092915050565b600061409082614ddd565b61409a8185614e84565b9350836020820285016140ac85614d87565b8060005b858110156140e857848403895281516140c98582613f52565b94506140d483614e2e565b925060208a019950506001810190506140b0565b50829750879550505050505092915050565b600061410582614de8565b61410f8185614e95565b93508360208202850161412185614d97565b8060005b8581101561415d578484038952815161413e8582613f66565b945061414983614e3b565b925060208a01995050600181019050614125565b50829750879550505050505092915050565b600061417a82614df3565b6141848185614ea6565b935061418f83614da7565b8060005b838110156141c05781516141a78882613f7a565b97506141b283614e48565b925050600181019050614193565b5085935050505092915050565b60006141d882614dfe565b6141e28185614eb7565b93506141ed83614db7565b8060005b8381101561421e5781516142058882613f93565b975061421083614e55565b9250506001810190506141f1565b5085935050505092915050565b61423481614efc565b82525050565b61424381614efc565b82525050565b61425281614f51565b82525050565b61426181614f75565b82525050565b600061427282614e09565b61427c8185614ec8565b935061428c818560208601614f99565b61429581614fce565b840191505092915050565b60006142ab82614e09565b6142b58185614ed9565b93506142c5818560208601614f99565b6142ce81614fce565b840191505092915050565b6040820160008201516142ef6000850182613fab565b5060208201516143026020850182613fab565b50505050565b60006101e0830160008301516143216000860182613fab565b5060208301516143346020860182613fab565b506040830151614347604086018261422b565b50606083015161435a6060860182613fab565b50608083015161436d6080860182613fab565b5060a083015161438060a0860182614aaa565b5060c083015161439360c0860182614aaa565b5060e08301516143a660e0860182614aaa565b506101008301516143bb610100860182614aaa565b506101208301518482036101208601526143d582826141cd565b9150506101408301516143ec610140860182614aaa565b50610160830151614401610160860182614aaa565b50610180830151614416610180860182614aaa565b506101a083015161442b6101a0860182614aaa565b506101c08301516144406101c0860182614aaa565b508091505092915050565b6000610140830160008301516144646000860182613fab565b5060208301516144776020860182613fab565b50604083015161448a604086018261422b565b50606083015161449d6060860182613fab565b5060808301516144b06080860182613fab565b5060a08301516144c360a0860182614aaa565b5060c08301516144d660c0860182614aaa565b5060e08301516144e960e0860182614aaa565b506101008301516144fe610100860182614aaa565b5061012083015184820361012086015261451882826141cd565b9150508091505092915050565b60006101408301600083015161453e6000860182613fab565b5060208301516145516020860182613fab565b506040830151614564604086018261422b565b5060608301516145776060860182613fab565b50608083015161458a6080860182613fab565b5060a083015161459d60a0860182614aaa565b5060c08301516145b060c0860182614aaa565b5060e08301516145c360e0860182614aaa565b506101008301516145d8610100860182614aaa565b506101208301518482036101208601526145f282826141cd565b9150508091505092915050565b6000610180830160008301516146186000860182613fab565b50602083015161462b602086018261422b565b50604083015161463e6040860182613fab565b506060830151614651606086018261422b565b506080830151614664608086018261422b565b5060a083015161467760a0860182614aaa565b5060c083015161468a60c0860182614aaa565b5060e083015161469d60e0860182614aaa565b506101008301516146b2610100860182614aaa565b506101208301516146c7610120860182614aaa565b506101408301518482036101408601526146e18282613fc9565b9150506101608301518482036101608601526146fd8282614027565b9150508091505092915050565b6000610180830160008301516147236000860182613fab565b506020830151614736602086018261422b565b5060408301516147496040860182613fab565b50606083015161475c606086018261422b565b50608083015161476f608086018261422b565b5060a083015161478260a0860182614aaa565b5060c083015161479560c0860182614aaa565b5060e08301516147a860e0860182614aaa565b506101008301516147bd610100860182614aaa565b506101208301516147d2610120860182614aaa565b506101408301518482036101408601526147ec8282613fc9565b9150506101608301518482036101608601526148088282614027565b9150508091505092915050565b6101a08201600082015161482c6000850182613fab565b50602082015161483f602085018261422b565b5060408201516148526040850182613fab565b5060608201516148656060850182613fab565b5060808201516148786080850182614aaa565b5060a082015161488b60a0850182614aaa565b5060c082015161489e60c0850182614aaa565b5060e08201516148b160e0850182614aaa565b506101008201516148c6610100850182614aaa565b506101208201516148db610120850182614aaa565b506101408201516148f0610140850182614aaa565b50610160820151614905610160850182614aaa565b5061018082015161491a610180850182614aaa565b50505050565b6101a0820160008201516149376000850182613fab565b50602082015161494a602085018261422b565b50604082015161495d6040850182613fab565b5060608201516149706060850182613fab565b5060808201516149836080850182614aaa565b5060a082015161499660a0850182614aaa565b5060c08201516149a960c0850182614aaa565b5060e08201516149bc60e0850182614aaa565b506101008201516149d1610100850182614aaa565b506101208201516149e6610120850182614aaa565b506101408201516149fb610140850182614aaa565b50610160820151614a10610160850182614aaa565b50610180820151614a25610180850182614aaa565b50505050565b604082016000820151614a416000850182613fab565b506020820151614a546020850182614aaa565b50505050565b6000606083016000830151614a726000860182613fab565b5060208301518482036020860152614a8a8282614267565b9150506040830151614a9f6040860182614ac8565b508091505092915050565b614ab381614f3a565b82525050565b614ac281614f3a565b82525050565b614ad181614f44565b82525050565b6000602082019050614aec6000830184613fba565b92915050565b6000604082019050614b076000830185613fba565b614b14602083018461423a565b9392505050565b6000604082019050614b306000830185613fba565b614b3d6020830184614ab9565b9392505050565b6000608082019050614b596000830187613fba565b614b666020830186614ab9565b614b736040830185614ab9565b614b806060830184614ab9565b95945050505050565b60006020820190508181036000830152614ba38184614085565b905092915050565b60006020820190508181036000830152614bc581846140fa565b905092915050565b60006020820190508181036000830152614be7818461416f565b905092915050565b6000602082019050614c046000830184614249565b92915050565b6000602082019050614c1f6000830184614258565b92915050565b60006020820190508181036000830152614c3f81846142a0565b905092915050565b60006020820190508181036000830152614c618184614308565b905092915050565b60006020820190508181036000830152614c838184614525565b905092915050565b60006020820190508181036000830152614ca5818461470a565b905092915050565b60006101a082019050614cc36000830184614920565b92915050565b60006020820190508181036000830152614ce38184614a5a565b905092915050565b6000602082019050614d006000830184614ab9565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614d2d57614d2c614fcc565b5b8060405250919050565b600067ffffffffffffffff821115614d5257614d51614fcc565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000614ef582614f1a565b9050919050565b60008115159050919050565b6000614f1382614eea565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000614f5c82614f63565b9050919050565b6000614f6e82614f1a565b9050919050565b6000614f8082614f87565b9050919050565b6000614f9282614f1a565b9050919050565b60005b83811015614fb7578082015181840152602081019050614f9c565b83811115614fc6576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b614fe881614eea565b8114614ff357600080fd5b50565b614fff81614efc565b811461500a57600080fd5b50565b61501681614f08565b811461502157600080fd5b50565b61502d81614f3a565b811461503857600080fd5b50565b61504481614f44565b811461504f57600080fd5b5056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200e810a2564810435a357e0b6eb84535b43f3acbbd5f6524704307cfa379127fb64736f6c63430007060033";
