/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV3AdapterExceptions,
  IUniswapV3AdapterExceptionsInterface,
} from "../../IUniswapV3Adapter.sol/IUniswapV3AdapterExceptions";

const _abi = [
  {
    type: "error",
    name: "InvalidPathException",
    inputs: [],
  },
] as const;

export class IUniswapV3AdapterExceptions__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3AdapterExceptionsInterface {
    return new Interface(_abi) as IUniswapV3AdapterExceptionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV3AdapterExceptions {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IUniswapV3AdapterExceptions;
  }
}
