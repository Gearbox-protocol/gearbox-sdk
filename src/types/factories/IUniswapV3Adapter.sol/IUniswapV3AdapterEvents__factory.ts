/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUniswapV3AdapterEvents,
  IUniswapV3AdapterEventsInterface,
} from "../../IUniswapV3Adapter.sol/IUniswapV3AdapterEvents";

const _abi = [
  {
    type: "event",
    name: "SetPoolStatus",
    inputs: [
      {
        name: "token0",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token1",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: true,
        internalType: "uint24",
      },
      {
        name: "allowed",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
] as const;

export class IUniswapV3AdapterEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3AdapterEventsInterface {
    return new utils.Interface(_abi) as IUniswapV3AdapterEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniswapV3AdapterEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IUniswapV3AdapterEvents;
  }
}
