/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RedstonePriceFeed,
  RedstonePriceFeedInterface,
} from "../../RedstonePriceFeed.sol/RedstonePriceFeed";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_dataFeedId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_signers",
        type: "address[10]",
        internalType: "address[10]",
      },
      {
        name: "signersThreshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "aggregateValues",
    inputs: [
      {
        name: "values",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dataFeedId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "description",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "extractTimestampsAndAssertAllAreEqual",
    inputs: [],
    outputs: [
      {
        name: "extractedTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getAuthorisedSignerIndex",
    inputs: [
      {
        name: "signerAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDataServiceId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUniqueSignersThreshold",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastPayloadTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint40",
        internalType: "uint40",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestRoundData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeedType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum PriceFeedType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress0",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress3",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress4",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress5",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress6",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress7",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress8",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress9",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "skipPriceCheck",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updatable",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updatePrice",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "validateTimestamp",
    inputs: [
      {
        name: "receivedTimestampMilliseconds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "UpdatePrice",
    inputs: [
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CalldataMustHaveValidPayload",
    inputs: [],
  },
  {
    type: "error",
    name: "CalldataOverOrUnderFlow",
    inputs: [],
  },
  {
    type: "error",
    name: "CanNotPickMedianOfEmptyArray",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampIncorrect",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampMustNotBeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampsMustBeEqual",
    inputs: [],
  },
  {
    type: "error",
    name: "DuplicateSignersException",
    inputs: [],
  },
  {
    type: "error",
    name: "EachSignerMustProvideTheSameValue",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyCalldataPointersArr",
    inputs: [],
  },
  {
    type: "error",
    name: "GetDataServiceIdNotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectPriceException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectSignersThresholdException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectUnsignedMetadataSize",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientNumberOfUniqueSigners",
    inputs: [
      {
        name: "receivedSignersCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "requiredSignersCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidCalldataPointer",
    inputs: [],
  },
  {
    type: "error",
    name: "NotEnoughSignersException",
    inputs: [],
  },
  {
    type: "error",
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    inputs: [],
  },
  {
    type: "error",
    name: "RedstonePayloadTimestampIncorrect",
    inputs: [],
  },
  {
    type: "error",
    name: "SignerNotAuthorised",
    inputs: [
      {
        name: "receivedSigner",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6102206040523480156200001257600080fd5b50604051620023d9380380620023d9833981016040819052620000359162000227565b60ff81161580620000495750600a8160ff16115b156200006857604051630d211b8f60e31b815260040160405180910390fd5b6000805b600a8110156200012f5760008482600a81106200008d576200008d620002e6565b60200201516001600160a01b0316146200012657600181015b600a8110156200011e578482600a8110620000c557620000c5620002e6565b60200201516001600160a01b03168582600a8110620000e857620000e8620002e6565b60200201516001600160a01b031603620001155760405163495df29160e11b815260040160405180910390fd5b600101620000a6565b508160010191505b6001016200006c565b508160ff168110156200015557604051630416f49d60e21b815260040160405180910390fd5b506001600160a01b03938416608090815260a09384528251851660c09081526020840151861660e0908152604085015187166101009081526060860151881661012090815293860151881661014052958501518716610160529084015186166101805283015185166101a0529282015184166101c0529101519091166101e05260ff1661020052620002fc565b80516001600160a01b0381168114620001fa57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805160ff81168114620001fa57600080fd5b6000806000806101a085870312156200023f57600080fd5b6200024a85620001e2565b9350602080860151935086605f8701126200026457600080fd5b60405161014081016001600160401b03811182821017156200028a576200028a620001ff565b60405280610180880189811115620002a157600080fd5b604089015b81811015620002c857620002ba81620001e2565b8352918401918401620002a6565b50829550620002d78162000215565b94505050505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051611fd762000402600039600081816104f3015281816113c7015281816116be015261185901526000818161043201526109390152600081816102fa01526108de01526000818161025c01526108830152600081816103f801526108280152600081816104b401526107cd01526000818161036e015261077201526000818161021001526107170152600081816103d101526106bc0152600081816103320152610661015260008181610395015261060601526000818161029d0152610ca301526000818161051c0152610b430152611fd76000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638736ec47116100f9578063d62ada1111610097578063f50b2efe11610071578063f50b2efe146104de578063f90c4924146104f1578063fc0c546a14610517578063feaf968c1461053e57600080fd5b8063d62ada1114610497578063dcdacf89146104af578063e75aeec8146104d657600080fd5b8063b24ebfcc116100d3578063b24ebfcc1461041a578063bc48da9e1461042d578063bdbe420414610454578063c274583a1461048f57600080fd5b80638736ec47146103b75780638dba0538146103cc5780639e0153d4146103f357600080fd5b80634ee1a1e6116101665780635decfe37116101405780635decfe371461032d5780637284e416146103545780637ed0185f14610369578063816f444a1461039057600080fd5b80634ee1a1e6146102f557806354fd4d501461031c57806355a547d51461032557600080fd5b8063313ce567116101a2578063313ce5671461027e578063370c826b146102985780633ce142f5146102cd5780633fd0875f146102e057600080fd5b8063053f14da146101c957806309c032ba1461020b5780631ac23b3d14610257575b600080fd5b6000546101e5906fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6102327f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610202565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b610286600881565b60405160ff9091168152602001610202565b6102bf7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610202565b6102866102db366004611a60565b610598565b6102e8600f81565b6040516102029190611a96565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102bf61012c81565b6102bf6109dc565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b61035c610b3f565b6040516102029190611afb565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6103ca6103c5366004611b4c565b610c16565b005b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102bf610428366004611c3c565b610da2565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b60005461047990700100000000000000000000000000000000900464ffffffffff1681565b60405164ffffffffff9091168152602001610202565b61035c610db3565b61049f600081565b6040519015158152602001610202565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b61049f600181565b6103ca6104ec366004611cd6565b610de7565b7f0000000000000000000000000000000000000000000000000000000000000000610286565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b60008054604080518381526fffffffffffffffffffffffffffffffff8316602082015290810183905270010000000000000000000000000000000090910464ffffffffff166060820152608081019190915260a001610202565b600073ffffffffffffffffffffffffffffffffffffffff8216610604576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361065f57506000919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ba57506001919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071557506002919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077057506003919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107cb57506004919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082657506005919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088157506006919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108dc57506007919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093757506008919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099257506009919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105fb565b6000806109e7610e52565b905060006109f482610f87565b61ffff16905080600003610a34576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a3f600283611d1e565b915060005b81811015610b39576000610a5784610fda565b9050600080610a67606887611d1e565b90506000610a758236611d31565b9050803592508265ffffffffffff16600003610abd576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610ad5578265ffffffffffff169750610b16565b878365ffffffffffff1614610b16576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b208488611d1e565b9650505050508080610b3190611d44565b915050610a44565b50505090565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bf29190810190611dc2565b604051602001610c029190611e3e565b604051602081830303815290604052905090565b6000610c2482840184611e7f565b50600054909150700100000000000000000000000000000000900464ffffffffff168111610c5157505050565b610c5a81611016565b600080547fffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000064ffffffffff841602178155610cc77f0000000000000000000000000000000000000000000000000000000000000000611072565b905080600003610d03576040517f53b798e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546fffffffffffffffffffffffffffffffff168114610d9c57610d27816110e2565b600080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff929092169190911790556040518181527f1a15ab7124a4e1ce00837351261771caf1691cd7d85ed3a0ac3157a1ee1a38059060200160405180910390a15b50505050565b6000610dad82611188565b92915050565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610df56103e883611f33565b600054909150700100000000000000000000000000000000900464ffffffffff168114610e4e576040517f13f5f29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610eba576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610ef7576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610f30600362ffffff8516611d1e565b610f3a9190611d1e565b905036610f48600283611d1e565b1115610f80576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610f95602084611d1e565b905036811115610fd1576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b6000806000610fe884611193565b9092509050604e610ffa826020611d1e565b6110049084611f47565b61100e9190611d1e565b949350505050565b8042101561106557603c61102a4283611d31565b1115611062576040517f36764ab900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b61025861102a8242611d31565b6040805160018082528183019092526000918291906020808301908036833701905050905082816000815181106110ab576110ab611f5e565b6020026020010181815250506110c0816111ea565b6000815181106110d2576110d2611f5e565b6020026020010151915050919050565b60006fffffffffffffffffffffffffffffffff821115611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f323820626974730000000000000000000000000000000000000000000000000060648201526084016105fb565b5090565b6000610dad826111f5565b6000808080806111a4604187611d1e565b905060006111bd6111b6602084611d1e565b36906112c9565b8035945090506111ce8160036112c9565b62ffffff9490941697933563ffffffff16965092945050505050565b6060610dad826112d5565b60008151600003611232576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61123b826114e1565b60006002835161124b9190611f33565b90506002835161125b9190611f8d565b6000036112b75760006112aa84611273600185611d31565b8151811061128357611283611f5e565b602002602001015185848151811061129d5761129d611f5e565b6020026020010151611529565b905061100e600282611f33565b8281815181106110d2576110d2611f5e565b6000610f808284611d31565b60606000825167ffffffffffffffff8111156112f3576112f3611bbe565b60405190808252806020026020018201604052801561131c578160200160208202803683370190505b5090506000835167ffffffffffffffff81111561133b5761133b611bbe565b604051908082528060200260200182016040528015611364578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561138357611383611bbe565b6040519080825280602002602001820160405280156113b657816020015b60608152602001906001900390816113a15790505b50905060005b855181101561145b577f000000000000000000000000000000000000000000000000000000000000000060ff1667ffffffffffffffff81111561140157611401611bbe565b60405190808252806020026020018201604052801561142a578160200160208202803683370190505b5082828151811061143d5761143d611f5e565b6020026020010181905250808061145390611d44565b9150506113bc565b506000611466610e52565b9050600061147382610f87565b61ffff169050611484600283611d1e565b60405190925060005b828110156114ca5760006114a48a89898989611535565b90506114b08186611d1e565b9450826040525080806114c290611d44565b91505061148d565b506114d5848761180b565b98975050505050505050565b8051602082016020820281019150805b82811015610d9c57815b81811015611520578151815180821015611516578084528183525b50506020016114fb565b506020016114f1565b6000610f808284611d1e565b60008060008061154485611193565b909250905060008080606081600d611567611560602089611d1e565b899061195f565b6115719190611d1e565b905060006115836111b660688d611d1e565b905060006115a08361159660418f611d1e565b6111b69190611d1e565b90506115ac83826115bf565b9350826020850120945081359650611601565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b6116128765ffffffffffff16610de7565b6116268561162160418f611d1e565b61196b565b955061163186610598565b60ff1699505050505050505060008060005b848110156117d857611656888583611a01565b909350915060005b8c518110156117c5578c818151811061167957611679611f5e565b602002602001015184036117b35760008b828151811061169b5761169b611f5e565b602002602001015190506116b481896001901b16151590565b1580156116fc57507f000000000000000000000000000000000000000000000000000000000000000060ff168d83815181106116f2576116f2611f5e565b6020026020010151105b156117ad578c828151811061171357611713611f5e565b60200260200101805180919061172890611d44565b81525050838b838151811061173f5761173f611f5e565b602002602001015160018f858151811061175b5761175b611f5e565b602002602001015161176d9190611d31565b8151811061177d5761177d611f5e565b60209081029190910101526001881b81178c83815181106117a0576117a0611f5e565b6020026020010181815250505b506117c5565b806117bd81611d44565b91505061165e565b50806117d081611d44565b915050611643565b505050816020826117e99190611d1e565b6117f39190611f47565b6117fe90604e611d1e565b9998505050505050505050565b60606000835167ffffffffffffffff81111561182957611829611bbe565b604051908082528060200260200182016040528015611852578160200160208202803683370190505b50905060ff7f00000000000000000000000000000000000000000000000000000000000000001660005b8551811015611955578185828151811061189857611898611f5e565b602002602001015110156118fe578481815181106118b8576118b8611f5e565b6020026020010151826040517f2b13aef50000000000000000000000000000000000000000000000000000000081526004016105fb929190918252602082015260400190565b600061192287838151811061191557611915611f5e565b6020026020010151610da2565b90508084838151811061193757611937611f5e565b6020908102919091010152508061194d81611d44565b91505061187c565b5090949350505050565b6000610f808284611f47565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa1580156119ce573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151979650505050505050565b60008080611a10604e87611d1e565b90506000611a3d611a36611a25602089611d1e565b611a30886001611d1e565b9061195f565b8390611529565b90506000611a4b36836112c9565b80359960209091013598509650505050505050565b600060208284031215611a7257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f8057600080fd5b6020810160138310611ad1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60005b83811015611af2578181015183820152602001611ada565b50506000910152565b6020815260008251806020840152611b1a816040850160208701611ad7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060208385031215611b5f57600080fd5b823567ffffffffffffffff80821115611b7757600080fd5b818501915085601f830112611b8b57600080fd5b813581811115611b9a57600080fd5b866020828501011115611bac57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c3457611c34611bbe565b604052919050565b60006020808385031215611c4f57600080fd5b823567ffffffffffffffff80821115611c6757600080fd5b818501915085601f830112611c7b57600080fd5b813581811115611c8d57611c8d611bbe565b8060051b9150611c9e848301611bed565b8181529183018401918481019088841115611cb857600080fd5b938501935b838510156114d557843582529385019390850190611cbd565b600060208284031215611ce857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610dad57610dad611cef565b81810381811115610dad57610dad611cef565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d7557611d75611cef565b5060010190565b600067ffffffffffffffff821115611d9657611d96611bbe565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215611dd457600080fd5b815167ffffffffffffffff811115611deb57600080fd5b8201601f81018413611dfc57600080fd5b8051611e0f611e0a82611d7c565b611bed565b818152856020838501011115611e2457600080fd5b611e35826020830160208601611ad7565b95945050505050565b60008251611e50818460208701611ad7565b7f202f205553442052656473746f6e652070726963652066656564000000000000920191825250601a01919050565b60008060408385031215611e9257600080fd5b82359150602083013567ffffffffffffffff811115611eb057600080fd5b8301601f81018513611ec157600080fd5b8035611ecf611e0a82611d7c565b818152866020838501011115611ee457600080fd5b816020840160208301376000602083830101528093505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611f4257611f42611f04565b500490565b8082028115828204841417610dad57610dad611cef565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082611f9c57611f9c611f04565b50069056fea2646970667358221220e6b78ee27b57b79d2c8834dd9f8705b8d4f358d342b2ccc97cc20f2f298fdb5e64736f6c63430008110033";

type RedstonePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedstonePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedstonePriceFeed__factory extends ContractFactory {
  constructor(...args: RedstonePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _dataFeedId: BytesLike,
    _signers: AddressLike[],
    signersThreshold: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _dataFeedId,
      _signers,
      signersThreshold,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _dataFeedId: BytesLike,
    _signers: AddressLike[],
    signersThreshold: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _dataFeedId,
      _signers,
      signersThreshold,
      overrides || {}
    ) as Promise<
      RedstonePriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RedstonePriceFeed__factory {
    return super.connect(runner) as RedstonePriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedstonePriceFeedInterface {
    return new Interface(_abi) as RedstonePriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RedstonePriceFeed {
    return new Contract(address, _abi, runner) as unknown as RedstonePriceFeed;
  }
}
