/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RedstonePriceFeed,
  RedstonePriceFeedInterface,
} from "../../RedstonePriceFeed.sol/RedstonePriceFeed";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_dataFeedId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_signers",
        type: "address[10]",
        internalType: "address[10]",
      },
      {
        name: "signersThreshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "aggregateValues",
    inputs: [
      {
        name: "values",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dataFeedId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "description",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "extractTimestampsAndAssertAllAreEqual",
    inputs: [],
    outputs: [
      {
        name: "extractedTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getAuthorisedSignerIndex",
    inputs: [
      {
        name: "signerAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDataServiceId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUniqueSignersThreshold",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastPayloadTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint40",
        internalType: "uint40",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestRoundData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint80",
        internalType: "uint80",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceFeedType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum PriceFeedType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress0",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress3",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress4",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress5",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress6",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress7",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress8",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "signerAddress9",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "skipPriceCheck",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updatable",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updatePrice",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "validateTimestamp",
    inputs: [
      {
        name: "receivedTimestampMilliseconds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "UpdatePrice",
    inputs: [
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CalldataMustHaveValidPayload",
    inputs: [],
  },
  {
    type: "error",
    name: "CalldataOverOrUnderFlow",
    inputs: [],
  },
  {
    type: "error",
    name: "CanNotPickMedianOfEmptyArray",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampIncorrect",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampMustNotBeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DataPackageTimestampsMustBeEqual",
    inputs: [],
  },
  {
    type: "error",
    name: "DuplicateSignersException",
    inputs: [],
  },
  {
    type: "error",
    name: "EachSignerMustProvideTheSameValue",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyCalldataPointersArr",
    inputs: [],
  },
  {
    type: "error",
    name: "GetDataServiceIdNotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectPriceException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectSignersThresholdException",
    inputs: [],
  },
  {
    type: "error",
    name: "IncorrectUnsignedMetadataSize",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientNumberOfUniqueSigners",
    inputs: [
      {
        name: "receivedSignersCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "requiredSignersCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidCalldataPointer",
    inputs: [],
  },
  {
    type: "error",
    name: "NotEnoughSignersException",
    inputs: [],
  },
  {
    type: "error",
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    inputs: [],
  },
  {
    type: "error",
    name: "RedstonePayloadTimestampIncorrect",
    inputs: [],
  },
  {
    type: "error",
    name: "SignerNotAuthorised",
    inputs: [
      {
        name: "receivedSigner",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x61022034620002f8576001600160401b03601f620024b038819003918201601f1916840191908383118584101762000318578190604093845285398301926101a0918282860312620002f85762000056826200032e565b93602090818401519487605f86011215620002f85783519761014092838a019081118a821017620003185785528861018096878101928311620002f85786869101915b838310620002fd57505050519060ff821695868303620002f85786158015620002ed575b620002dc57600097885b600a808b10156200016257908a918d620000ea60018060a01b0394859262000343565b5116156200015657600192838d018f8e5b848310620001175750505050509060019101995b0198620000c7565b620001338491826200012a868662000343565b51169362000343565b511614620001455784018f8e620000fb565b8b5163495df29160e11b8152600490fd5b5099600191506200010f565b50918793918b8a8e9510620002cb5760805260a05260018060a01b0380978185511660c0528401511660e0528684840151169661010097885280606085015116966101209788528160808601511681528160a086015116916101609283528060c08701511684528060e087015116855288818b88015116966101c0978852015116956101e09687526102009788525197612144998a6200036c8b396080518a81816107ff0152610fd5015260a0518a81816103e401526111b4015260c0518a8181610a0801526112dc015260e0518a81816106fb0152611305015251898181610aec015261132e0152518881816102de01526113570152518781816109980152611380015251868181610e9201526113a9015251858181610b5c01526113d201525184818161034e01526113fb0152518381816104f40152611424015251828181610d46015261144c015251818181610f6501528181611ad301528181611e350152611f460152f35b8551630416f49d60e21b8152600490fd5b8551630d211b8f60e31b8152600490fd5b50600a8711620000bd565b600080fd5b81906200030a846200032e565b815201910190859062000099565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002f857565b90600a811015620003555760051b0190565b634e487b7160e01b600052603260045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063053f14da1461024357806309c032ba1461023a5780631ac23b3d14610231578063313ce56714610228578063370c826b1461021f5780633ce142f5146102165780633fd0875f1461020d5780634ee1a1e61461020457806354fd4d50146101fb57806355a547d5146101f25780635decfe37146101e95780637284e416146101e05780637ed0185f146101d7578063816f444a146101ce5780638736ec47146101c55780638dba0538146101bc5780639e0153d4146101b3578063b24ebfcc146101aa578063bc48da9e146101a1578063bdbe420414610198578063c274583a1461018f578063d62ada1114610186578063dcdacf891461017d578063e75aeec814610174578063f50b2efe1461016b578063f90c492414610162578063fc0c546a146101595763feaf968c1461015157600080fd5b61000e610ff9565b5061000e610f89565b5061000e610f2c565b5061000e610ef1565b5061000e610eb6565b5061000e610e46565b5061000e610e0b565b5061000e610db1565b5061000e610d6a565b5061000e610cfa565b5061000e610c41565b5061000e610b10565b5061000e610aa0565b5061000e610a2c565b5061000e6109bc565b5061000e61094c565b5061000e61078c565b5061000e6106af565b5061000e610554565b5061000e610518565b5061000e6104a8565b5061000e61046d565b5061000e610407565b5061000e6103ad565b5061000e610372565b5061000e610302565b5061000e610292565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206fffffffffffffffffffffffffffffffff60005416604051908152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405160088152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043573ffffffffffffffffffffffffffffffffffffffff8116810361000e576104626020916112ba565b60ff60405191168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020604051600f8152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405161012c8152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600061058e61180c565b6105a161059a82611920565b61ffff1690565b908115610685576105b28391611711565b91815b8181106105cb57604051838152602090f35b0390f35b90916105d6846117c9565b9065ffffffffffff6105f06105ea8761171f565b366115f9565b351690811561065b578061061c57506106139161060d9195611773565b91611780565b929190926105b5565b80959103610631576106139161060d91611773565b60046040517fd9d1f465000000000000000000000000000000000000000000000000000000008152fd5b60046040517f336dc9d0000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8552ff3c000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60005b8381106107325750506000910152565b8181015183820152602001610722565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60409360208452610785815180928160208801526020888801910161071f565b0116010190565b503461000e576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610934576040517f95d89b41000000000000000000000000000000000000000000000000000000008152818160048173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561093f575b80926108ac575b6040516105c7906108a08161087461084b60208301896110c1565b7f202f205553442052656473746f6e6520707269636520666565640000000000008152601a0190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610bd9565b60405191829182610742565b9091503d8082843e6108be8184610bd9565b8201916020818403126109375780519067ffffffffffffffff821161093b570182601f82011215610937578051916108f58361106b565b936109036040519586610bd9565b8385526020848401011161093457508261092d61084b936108a0936020806105c79801910161071f565b9250610830565b80fd5b5080fd5b8280fd5b6109476110b4565b610829565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e57366024828401011161000e576024610a9e92016110d8565b005b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610bcc57604052565b610bd4610b80565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610bcc57604052565b60209067ffffffffffffffff8111610c34575b60051b0190565b610c3c610b80565b610c2d565b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e573660238201121561000e57806004013590610c9e82610c1a565b91610cac6040519384610bd9565b80835260248484019160051b8301019136831161000e57602401905b828210610ceb576105c7610cdb85611ffa565b6040519081529081906020820190565b81358152908401908401610cc8565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602064ffffffffff60005460801c16604051908152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760046040517f608b5307000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405160008152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405160018152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610a9e60043561157f565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610934578060a091549064ffffffffff604051928284526fffffffffffffffffffffffffffffffff8116602085015282604085015260801c1660608301526080820152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116110a7575b01160190565b6110af610b80565b6110a1565b506040513d6000823e3d90fd5b906110d46020928281519485920161071f565b0190565b90810160408282031261000e5781359160208101359067ffffffffffffffff821161000e570181601f8201121561000e5780356111148161106b565b926111226040519485610bd9565b8184526020828401011161000e576000928160208094018483013701015260005460801c64ffffffffff168111156112b75764ffffffffff816111676111af93611606565b167fffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffff74ffffffffff000000000000000000000000000000006000549260801b16911617600055565b6111d87f0000000000000000000000000000000000000000000000000000000000000000611a84565b801561128d576112116111fc6000546fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b810361121a5750565b61128881610cdb61124b7f1a15ab7124a4e1ce00837351261771caf1691cd7d85ed3a0ac3157a1ee1a380594611670565b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff000000000000000000000000000000006000541617600055565b0390a1565b60046040517f53b798e2000000000000000000000000000000000000000000000000000000008152fd5b50565b73ffffffffffffffffffffffffffffffffffffffff80821690811561150857807f000000000000000000000000000000000000000000000000000000000000000016821461150057807f00000000000000000000000000000000000000000000000000000000000000001682146114f857807f00000000000000000000000000000000000000000000000000000000000000001682146114f057807f00000000000000000000000000000000000000000000000000000000000000001682146114e857807f00000000000000000000000000000000000000000000000000000000000000001682146114e057807f00000000000000000000000000000000000000000000000000000000000000001682146114d857807f00000000000000000000000000000000000000000000000000000000000000001682146114d057807f00000000000000000000000000000000000000000000000000000000000000001682146114c857807f00000000000000000000000000000000000000000000000000000000000000001682146114c0577f000000000000000000000000000000000000000000000000000000000000000016146114ba576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b50600990565b505050600890565b505050600790565b505050600690565b505050600590565b505050600490565b505050600390565b505050600290565b505050600190565b505050600090565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602490fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6103e864ffffffffff60005460801c1691040361159857565b60046040517f13f5f290000000000000000000000000000000000000000000000000000000008152fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019182116115ef57565b6115f761154f565b565b919082039182116115ef57565b80421060001461165c57603c9042810390811161164f575b1161162557565b60046040517f36764ab9000000000000000000000000000000000000000000000000000000008152fd5b61165761154f565b61161e565b61025890420342811161164f571161162557565b6fffffffffffffffffffffffffffffffff9081811161168d571690565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f32382062697473000000000000000000000000000000000000000000000000006064820152fd5b90600282018092116115ef57565b90606882018092116115ef57565b90600982018092116115ef57565b90602082018092116115ef57565b90600d82018092116115ef57565b90604182018092116115ef57565b604e019081604e116115ef57565b919082018092116115ef57565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146117ae570190565b6110d461154f565b818102929181159184041417156115ef57565b6117d56117e691611967565b60200190816020116117ff576117b6565b604e81018091116117f45790565b6117fc61154f565b90565b61180761154f565b6117b6565b6602ed57011e0000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013516036118f657366029116118cc5761188362ffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013516600381018091116118bf5761172d565b3661188d82611711565b116118955790565b60046040517fc30a7bd7000000000000000000000000000000000000000000000000000000008152fd5b6118c761154f565b61172d565b60046040517f5796f78a000000000000000000000000000000000000000000000000000000008152fd5b60046040517fe7764c9e000000000000000000000000000000000000000000000000000000008152fd5b6020810180821161195a575b36106118cc5736037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0013590565b61196261154f565b61192c565b60418101808211611a0f575b6061820110611a02575b36039063ffffffff62ffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9f8501943686116119f5575b01938085116119e8575b351692351690565b6119f061154f565b6119e0565b6119fd61154f565b6119d6565b611a0a61154f565b61197d565b611a1761154f565b611973565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090805115611a5a570190565b6110d4611a1c565b6020918151811015611a77575b60051b010190565b611a7f611a1c565b611a6f565b604090815191611a9383610bb0565b600191828452602084016020368237845115611bac575b52611ab58351611bb9565b92611ac08151611bb9565b91611acb8251611c08565b9380600060ff7f000000000000000000000000000000000000000000000000000000000000000016925b611b70575b505050611b0561180c565b92611b1b611b1561059a86611920565b94611711565b908251936000925b868410611b475750505050505050611b4391611b3e91611f35565b611a4c565b5190565b611b6181611b5b611b6a938b878e88611c88565b90611773565b93868652611780565b92611b23565b8451811015611ba757611ba190611b8684611bb9565b611b90828a611a62565b52611b9b8189611a62565b50611780565b81611af5565b611afa565b611bb4611a1c565b611aaa565b90611bc382610c1a565b611bd06040519182610bd9565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611bfe8294610c1a565b0190602036910137565b90611c1282610c1a565b611c1f6040519182610bd9565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611c4d8294610c1a565b019060005b828110611c5e57505050565b806060602080938501015201611c52565b9060405191818352602082840101604052602083013790565b91611cbd9491611cc394611d18611d12611d0d86611cfe65ffffffffffff611cc8611cb284611967565b9d909e8f908f61173b565b906117b6565b611749565b6020611cf482611cef6105ea82611cea611ce46105ea8c61171f565b9a611757565b611773565b611c6f565b012092351661157f565b611d0788611757565b906120c4565b6112ba565b60ff1690565b600094855b898710611d415750505050505050506117fc91611807611d3c9261173b565b611765565b91949793969990929598611d568a8686611e71565b959094845b8d51811015611e5b57611d6e818f611a62565b518714611d8357611d7e90611780565b611d5b565b90989550898b9895949d9a97611d9f83611dc0969f959e611a62565b516001881b91898383161580611e25575b611dc7575b505050505050611780565b9590611d1d565b84611e0a611e0488611dfd81611e1096611ded611de783611e199e611a62565b51611780565b611df78389611a62565b52611a62565b5193611a62565b516115c2565b90611a62565b52179189611a62565b52388681808089611db5565b50611e308686611a62565b5160ff7f00000000000000000000000000000000000000000000000000000000000000001611611db0565b50979450989592919a97945098611dc090611780565b90611e9f90604e830193848411611f28575b60010180600111611f1b575b602082018092116117ff576117b6565b0190604e820110611f0e575b3603907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb28301368111611f01575b3592013590565b611f0961154f565b611efa565b611f1661154f565b611eab565b611f2361154f565b611e8f565b611f3061154f565b611e83565b9190611f418351611bb9565b9060ff7f0000000000000000000000000000000000000000000000000000000000000000169060005b8551811015611ff25782611f7e8284611a62565b5110611fb05780611f9b611f95611fab9389611a62565b51611ffa565b611fa58287611a62565b52611780565b611f6a565b60449350611fbd91611a62565b5190604051917f2b13aef500000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b509193505050565b80511561209a57805160209060051b82018101818301805b82811061206857505050508051600181811c91161560001461205f576117fc916120528261204b612045612059956115c2565b84611a62565b5192611a62565b5190611773565b60011c90565b611b4391611a62565b83825b828110612079575001612012565b8251815180821061208f575b505001849061206b565b845281523880612085565b60046040517f9e198af9000000000000000000000000000000000000000000000000000000008152fd5b60806000916020809436036040519283526040810135851a82840152803560408401520135606082015282805260015afa15612101575b60005190565b6121096110b4565b6120fb56fea2646970667358221220d76bbb0b414302e7ad0466909aedac406da579d52135fca495cd8a86ad8be9ef64736f6c63430008110033";

type RedstonePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedstonePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedstonePriceFeed__factory extends ContractFactory {
  constructor(...args: RedstonePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _dataFeedId: PromiseOrValue<BytesLike>,
    _signers: PromiseOrValue<string>[],
    signersThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RedstonePriceFeed> {
    return super.deploy(
      _token,
      _dataFeedId,
      _signers,
      signersThreshold,
      overrides || {}
    ) as Promise<RedstonePriceFeed>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _dataFeedId: PromiseOrValue<BytesLike>,
    _signers: PromiseOrValue<string>[],
    signersThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _dataFeedId,
      _signers,
      signersThreshold,
      overrides || {}
    );
  }
  override attach(address: string): RedstonePriceFeed {
    return super.attach(address) as RedstonePriceFeed;
  }
  override connect(signer: Signer): RedstonePriceFeed__factory {
    return super.connect(signer) as RedstonePriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedstonePriceFeedInterface {
    return new utils.Interface(_abi) as RedstonePriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RedstonePriceFeed {
    return new Contract(address, _abi, signerOrProvider) as RedstonePriceFeed;
  }
}
