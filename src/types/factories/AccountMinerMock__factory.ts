/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AccountMinerMock } from "../AccountMinerMock";

export class AccountMinerMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    addressRepository: string,
    overrides?: Overrides
  ): Promise<AccountMinerMock> {
    return super.deploy(
      addressRepository,
      overrides || {}
    ) as Promise<AccountMinerMock>;
  }
  getDeployTransaction(
    addressRepository: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(addressRepository, overrides || {});
  }
  attach(address: string): AccountMinerMock {
    return super.attach(address) as AccountMinerMock;
  }
  connect(signer: Signer): AccountMinerMock__factory {
    return super.connect(signer) as AccountMinerMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountMinerMock {
    return new Contract(address, _abi, signerOrProvider) as AccountMinerMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressRepository",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "factoryAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deploymentCost",
        type: "uint256",
      },
    ],
    name: "NewAccountFactory",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accountFactories",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountFactoriesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deploymentCost",
        type: "uint256",
      },
    ],
    name: "addAccountFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deploymentCosts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kind",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "trader",
        type: "address",
      },
    ],
    name: "mineAccount",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d03380380610d038339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461011c60201b60201c565b905080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506000600360146101000a81548160ff021916908315150217905550600160048190555050610124565b600033905090565b610bd0806101336000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610157578063920ce93d1461018b5780639849e42f146101e3578063e7d37c6414610227578063f2fde38b1461027f5761009e565b806304baa00b146100a35780632381e525146100c15780635c270ae8146100df5780635c975abb1461012d578063715018a61461014d575b600080fd5b6100ab6102c3565b6040518082815260200191505060405180910390f35b6100c96102e7565b6040518082815260200191505060405180910390f35b61012b600480360360408110156100f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102f4565b005b6101356103b1565b60405180821515815260200191505060405180910390f35b6101556103c8565b005b61015f610538565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101cd600480360360208110156101a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610562565b6040518082815260200191505060405180910390f35b610225600480360360208110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057a565b005b6102536004803603602081101561023d57600080fd5b8101908080359060200190929190505050610689565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c16004803603602081101561029557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c8565b005b7f6d6f636b0000000000000000000000000000000000000000000000000000000081565b6000600280549050905090565b6102fc6108bd565b73ffffffffffffffffffffffffffffffffffffffff1661031a610538565b73ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6103ad82826108c5565b5050565b6000600360149054906101000a900460ff16905090565b6103d06108bd565b73ffffffffffffffffffffffffffffffffffffffff166103ee610538565b73ffffffffffffffffffffffffffffffffffffffff1614610477576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051806060016040528060268152602001610b756026913990610685576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561064a57808201518184015260208101905061062f565b50505050905090810190601f1680156106775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b6002818154811061069957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d06108bd565b73ffffffffffffffffffffffffffffffffffffffff166106ee610538565b73ffffffffffffffffffffffffffffffffffffffff1614610777576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b236026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156040518060600160405280602c8152602001610b49602c9139906109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561099657808201518184015260208101905061097b565b50505050905090810190601f1680156109c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fedec58de06b831cff3df860fc7e8b4ae3194329626a5b27aaf91ec9b04511172826040518082815260200191505060405180910390a2505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734163636f756e744d696e65723a206163636f756e7420666163746f727920616c7265616479206578697374734163636f756e744d696e65723a20666f72206163636f756e7420666163746f7279206f6e6c79a264697066735822122011fe25f885ad6a8f72a087c5bcd0c4fab9a97ad904dcf09cf32f836629df2ea564736f6c63430007060033";
