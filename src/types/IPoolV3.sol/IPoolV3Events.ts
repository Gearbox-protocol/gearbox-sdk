/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../common";

export interface IPoolV3EventsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "AddCreditManager"
      | "Borrow"
      | "IncurUncoveredLoss"
      | "Refer"
      | "Repay"
      | "SetCreditManagerDebtLimit"
      | "SetInterestRateModel"
      | "SetPoolQuotaKeeper"
      | "SetTotalDebtLimit"
      | "SetWithdrawFee"
  ): EventFragment;
}

export namespace AddCreditManagerEvent {
  export type InputTuple = [creditManager: AddressLike];
  export type OutputTuple = [creditManager: string];
  export interface OutputObject {
    creditManager: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BorrowEvent {
  export type InputTuple = [
    creditManager: AddressLike,
    creditAccount: AddressLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [
    creditManager: string,
    creditAccount: string,
    amount: bigint
  ];
  export interface OutputObject {
    creditManager: string;
    creditAccount: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace IncurUncoveredLossEvent {
  export type InputTuple = [creditManager: AddressLike, loss: BigNumberish];
  export type OutputTuple = [creditManager: string, loss: bigint];
  export interface OutputObject {
    creditManager: string;
    loss: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReferEvent {
  export type InputTuple = [
    onBehalfOf: AddressLike,
    referralCode: BigNumberish,
    amount: BigNumberish
  ];
  export type OutputTuple = [
    onBehalfOf: string,
    referralCode: bigint,
    amount: bigint
  ];
  export interface OutputObject {
    onBehalfOf: string;
    referralCode: bigint;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RepayEvent {
  export type InputTuple = [
    creditManager: AddressLike,
    borrowedAmount: BigNumberish,
    profit: BigNumberish,
    loss: BigNumberish
  ];
  export type OutputTuple = [
    creditManager: string,
    borrowedAmount: bigint,
    profit: bigint,
    loss: bigint
  ];
  export interface OutputObject {
    creditManager: string;
    borrowedAmount: bigint;
    profit: bigint;
    loss: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetCreditManagerDebtLimitEvent {
  export type InputTuple = [creditManager: AddressLike, newLimit: BigNumberish];
  export type OutputTuple = [creditManager: string, newLimit: bigint];
  export interface OutputObject {
    creditManager: string;
    newLimit: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetInterestRateModelEvent {
  export type InputTuple = [newInterestRateModel: AddressLike];
  export type OutputTuple = [newInterestRateModel: string];
  export interface OutputObject {
    newInterestRateModel: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetPoolQuotaKeeperEvent {
  export type InputTuple = [newPoolQuotaKeeper: AddressLike];
  export type OutputTuple = [newPoolQuotaKeeper: string];
  export interface OutputObject {
    newPoolQuotaKeeper: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetTotalDebtLimitEvent {
  export type InputTuple = [limit: BigNumberish];
  export type OutputTuple = [limit: bigint];
  export interface OutputObject {
    limit: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetWithdrawFeeEvent {
  export type InputTuple = [fee: BigNumberish];
  export type OutputTuple = [fee: bigint];
  export interface OutputObject {
    fee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IPoolV3Events extends BaseContract {
  connect(runner?: ContractRunner | null): IPoolV3Events;
  waitForDeployment(): Promise<this>;

  interface: IPoolV3EventsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "AddCreditManager"
  ): TypedContractEvent<
    AddCreditManagerEvent.InputTuple,
    AddCreditManagerEvent.OutputTuple,
    AddCreditManagerEvent.OutputObject
  >;
  getEvent(
    key: "Borrow"
  ): TypedContractEvent<
    BorrowEvent.InputTuple,
    BorrowEvent.OutputTuple,
    BorrowEvent.OutputObject
  >;
  getEvent(
    key: "IncurUncoveredLoss"
  ): TypedContractEvent<
    IncurUncoveredLossEvent.InputTuple,
    IncurUncoveredLossEvent.OutputTuple,
    IncurUncoveredLossEvent.OutputObject
  >;
  getEvent(
    key: "Refer"
  ): TypedContractEvent<
    ReferEvent.InputTuple,
    ReferEvent.OutputTuple,
    ReferEvent.OutputObject
  >;
  getEvent(
    key: "Repay"
  ): TypedContractEvent<
    RepayEvent.InputTuple,
    RepayEvent.OutputTuple,
    RepayEvent.OutputObject
  >;
  getEvent(
    key: "SetCreditManagerDebtLimit"
  ): TypedContractEvent<
    SetCreditManagerDebtLimitEvent.InputTuple,
    SetCreditManagerDebtLimitEvent.OutputTuple,
    SetCreditManagerDebtLimitEvent.OutputObject
  >;
  getEvent(
    key: "SetInterestRateModel"
  ): TypedContractEvent<
    SetInterestRateModelEvent.InputTuple,
    SetInterestRateModelEvent.OutputTuple,
    SetInterestRateModelEvent.OutputObject
  >;
  getEvent(
    key: "SetPoolQuotaKeeper"
  ): TypedContractEvent<
    SetPoolQuotaKeeperEvent.InputTuple,
    SetPoolQuotaKeeperEvent.OutputTuple,
    SetPoolQuotaKeeperEvent.OutputObject
  >;
  getEvent(
    key: "SetTotalDebtLimit"
  ): TypedContractEvent<
    SetTotalDebtLimitEvent.InputTuple,
    SetTotalDebtLimitEvent.OutputTuple,
    SetTotalDebtLimitEvent.OutputObject
  >;
  getEvent(
    key: "SetWithdrawFee"
  ): TypedContractEvent<
    SetWithdrawFeeEvent.InputTuple,
    SetWithdrawFeeEvent.OutputTuple,
    SetWithdrawFeeEvent.OutputObject
  >;

  filters: {
    "AddCreditManager(address)": TypedContractEvent<
      AddCreditManagerEvent.InputTuple,
      AddCreditManagerEvent.OutputTuple,
      AddCreditManagerEvent.OutputObject
    >;
    AddCreditManager: TypedContractEvent<
      AddCreditManagerEvent.InputTuple,
      AddCreditManagerEvent.OutputTuple,
      AddCreditManagerEvent.OutputObject
    >;

    "Borrow(address,address,uint256)": TypedContractEvent<
      BorrowEvent.InputTuple,
      BorrowEvent.OutputTuple,
      BorrowEvent.OutputObject
    >;
    Borrow: TypedContractEvent<
      BorrowEvent.InputTuple,
      BorrowEvent.OutputTuple,
      BorrowEvent.OutputObject
    >;

    "IncurUncoveredLoss(address,uint256)": TypedContractEvent<
      IncurUncoveredLossEvent.InputTuple,
      IncurUncoveredLossEvent.OutputTuple,
      IncurUncoveredLossEvent.OutputObject
    >;
    IncurUncoveredLoss: TypedContractEvent<
      IncurUncoveredLossEvent.InputTuple,
      IncurUncoveredLossEvent.OutputTuple,
      IncurUncoveredLossEvent.OutputObject
    >;

    "Refer(address,uint256,uint256)": TypedContractEvent<
      ReferEvent.InputTuple,
      ReferEvent.OutputTuple,
      ReferEvent.OutputObject
    >;
    Refer: TypedContractEvent<
      ReferEvent.InputTuple,
      ReferEvent.OutputTuple,
      ReferEvent.OutputObject
    >;

    "Repay(address,uint256,uint256,uint256)": TypedContractEvent<
      RepayEvent.InputTuple,
      RepayEvent.OutputTuple,
      RepayEvent.OutputObject
    >;
    Repay: TypedContractEvent<
      RepayEvent.InputTuple,
      RepayEvent.OutputTuple,
      RepayEvent.OutputObject
    >;

    "SetCreditManagerDebtLimit(address,uint256)": TypedContractEvent<
      SetCreditManagerDebtLimitEvent.InputTuple,
      SetCreditManagerDebtLimitEvent.OutputTuple,
      SetCreditManagerDebtLimitEvent.OutputObject
    >;
    SetCreditManagerDebtLimit: TypedContractEvent<
      SetCreditManagerDebtLimitEvent.InputTuple,
      SetCreditManagerDebtLimitEvent.OutputTuple,
      SetCreditManagerDebtLimitEvent.OutputObject
    >;

    "SetInterestRateModel(address)": TypedContractEvent<
      SetInterestRateModelEvent.InputTuple,
      SetInterestRateModelEvent.OutputTuple,
      SetInterestRateModelEvent.OutputObject
    >;
    SetInterestRateModel: TypedContractEvent<
      SetInterestRateModelEvent.InputTuple,
      SetInterestRateModelEvent.OutputTuple,
      SetInterestRateModelEvent.OutputObject
    >;

    "SetPoolQuotaKeeper(address)": TypedContractEvent<
      SetPoolQuotaKeeperEvent.InputTuple,
      SetPoolQuotaKeeperEvent.OutputTuple,
      SetPoolQuotaKeeperEvent.OutputObject
    >;
    SetPoolQuotaKeeper: TypedContractEvent<
      SetPoolQuotaKeeperEvent.InputTuple,
      SetPoolQuotaKeeperEvent.OutputTuple,
      SetPoolQuotaKeeperEvent.OutputObject
    >;

    "SetTotalDebtLimit(uint256)": TypedContractEvent<
      SetTotalDebtLimitEvent.InputTuple,
      SetTotalDebtLimitEvent.OutputTuple,
      SetTotalDebtLimitEvent.OutputObject
    >;
    SetTotalDebtLimit: TypedContractEvent<
      SetTotalDebtLimitEvent.InputTuple,
      SetTotalDebtLimitEvent.OutputTuple,
      SetTotalDebtLimitEvent.OutputObject
    >;

    "SetWithdrawFee(uint256)": TypedContractEvent<
      SetWithdrawFeeEvent.InputTuple,
      SetWithdrawFeeEvent.OutputTuple,
      SetWithdrawFeeEvent.OutputObject
    >;
    SetWithdrawFee: TypedContractEvent<
      SetWithdrawFeeEvent.InputTuple,
      SetWithdrawFeeEvent.OutputTuple,
      SetWithdrawFeeEvent.OutputObject
    >;
  };
}
