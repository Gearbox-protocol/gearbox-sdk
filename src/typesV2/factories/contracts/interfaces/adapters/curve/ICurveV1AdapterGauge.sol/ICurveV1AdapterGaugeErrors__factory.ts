/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICurveV1AdapterGaugeErrors,
  ICurveV1AdapterGaugeErrorsInterface,
} from "../../../../../../contracts/interfaces/adapters/curve/ICurveV1AdapterGauge.sol/ICurveV1AdapterGaugeErrors";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenIsNotAddedToCreditManagerException",
    type: "error",
  },
];

export class ICurveV1AdapterGaugeErrors__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveV1AdapterGaugeErrorsInterface {
    return new utils.Interface(_abi) as ICurveV1AdapterGaugeErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICurveV1AdapterGaugeErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICurveV1AdapterGaugeErrors;
  }
}
