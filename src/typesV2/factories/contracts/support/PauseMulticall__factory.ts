/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PauseMulticall,
  PauseMulticallInterface,
} from "../../../contracts/support/PauseMulticall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PausableAdminsOnlyException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "contract ACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cr",
    outputs: [
      {
        internalType: "contract ContractsRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllCreditManagers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162000f4238038062000f42833981016040819052620000349162000209565b6000805460ff1916905560408051808201909152600281526105a360f41b602082015281906001600160a01b0382166200008c5760405162461bcd60e51b81526004016200008391906200023b565b60405180910390fd5b50806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f2919062000209565b6001600160a01b03166080816001600160a01b031681525050506000819050806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000176919062000209565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b031663c513c9bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f4919062000209565b6001600160a01b031660c05250620002939050565b6000602082840312156200021c57600080fd5b81516001600160a01b03811681146200023457600080fd5b9392505050565b600060208083528351808285015260005b818110156200026a578581018301518582016040015282016200024c565b818111156200027d576000604083870101525b50601f01601f1916929092016040019392505050565b60805160a05160c051610c4f620002f36000396000818160bf0152818161035e015281816104fb015261064d015260008181610123015281816102a301528181610440015261059201526000818161017301526106e40152610c4f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636f0744361161005b5780636f074436146101065780637c205cc41461010e5780638456cb5914610116578063de2873591461011e57600080fd5b80633f4ba83a1461008d578063488bf5b4146100975780635c975abb1461009f57806362eb33e3146100ba575b600080fd5b610095610145565b005b610095610275565b60005460ff1660405190151581526020015b60405180910390f35b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b1565b610095610412565b610095610564565b6100956106b6565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610a13565b6040518060400160405280600481526020017f41434c31000000000000000000000000000000000000000000000000000000008152509061026a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102619190610a3c565b60405180910390fd5b506102736107db565b565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190610a13565b610359576040517fc8213b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102737f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663673a2a1f6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261040d9190810190610b07565b6108bc565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c09190610a13565b6104f6576040517fc8213b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102737f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663941448566040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610a13565b610648576040517fc8213b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f67f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663673a2a1f6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190610a13565b6040518060400160405280600481526020017f41434c3100000000000000000000000000000000000000000000000000000000815250906107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102619190610a3c565b50610273610953565b60005460ff16610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610261565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b805160005b8181101561094e578281815181106108db576108db610bea565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561092a57600080fd5b505af115801561093e573d6000803e3d6000fd5b5050600190920191506108c19050565b505050565b60005460ff16156109c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610261565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108923390565b600060208284031215610a2557600080fd5b81518015158114610a3557600080fd5b9392505050565b600060208083528351808285015260005b81811015610a6957858101830151858201604001528201610a4d565b81811115610a7b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610b0257600080fd5b919050565b60006020808385031215610b1a57600080fd5b825167ffffffffffffffff80821115610b3257600080fd5b818501915085601f830112610b4657600080fd5b815181811115610b5857610b58610aaf565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610b9b57610b9b610aaf565b604052918252848201925083810185019188831115610bb957600080fd5b938501935b82851015610bde57610bcf85610ade565b84529385019392850192610bbe565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122025a2fea83b7de3dabfa3bf8d98d885e551b72fd3d926d2a1fdd4a0702c57dd5864736f6c634300080a0033";

type PauseMulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PauseMulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PauseMulticall__factory extends ContractFactory {
  constructor(...args: PauseMulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PauseMulticall> {
    return super.deploy(
      _addressProvider,
      overrides || {}
    ) as Promise<PauseMulticall>;
  }
  override getDeployTransaction(
    _addressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): PauseMulticall {
    return super.attach(address) as PauseMulticall;
  }
  override connect(signer: Signer): PauseMulticall__factory {
    return super.connect(signer) as PauseMulticall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PauseMulticallInterface {
    return new utils.Interface(_abi) as PauseMulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PauseMulticall {
    return new Contract(address, _abi, signerOrProvider) as PauseMulticall;
  }
}
