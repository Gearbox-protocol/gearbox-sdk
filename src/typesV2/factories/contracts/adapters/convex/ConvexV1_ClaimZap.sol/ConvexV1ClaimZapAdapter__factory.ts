/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConvexV1ClaimZapAdapter,
  ConvexV1ClaimZapAdapterInterface,
} from "../../../../../contracts/adapters/convex/ConvexV1_ClaimZap.sol/ConvexV1ClaimZapAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimZap",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TokenIsNotInAllowedList",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "rewardContracts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "extraRewardContracts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokenRewardContracts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokenRewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creditFacade",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cvx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405162001780380380620017808339818101604052604081101561003557600080fd5b50805160209091015181816001600160a01b038216158061005d57506001600160a01b038116155b1561007b57604051635919af9760e11b815260040160405180910390fd5b6001600160a01b038216608081905260408051632f7a188160e01b81529051632f7a1881916004808201926020929091908290030181865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610108565b6001600160a01b0390811660a0521660c0525050600160005550610138565b60006020828403121561011a57600080fd5b81516001600160a01b038116811461013157600080fd5b9392505050565b60805160a05160c0516115c5620001bb60003960008181610292015281816103c70152818161067901526107030152600060920152600081816102b90152818161038a01528181610770015281816108ae01528181610a0601528181610be801528181610e4e015281816110b6015281816112a4015261141e01526115c56000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063923c1d611161005b578063923c1d6114610285578063bd90df701461028d578063c12c21c0146102b4578063ce30bbdb146102db57600080fd5b80632f7a18811461008d5780635a7b87f2146100dd5780636a4874a11461025e57806378aa73a414610266575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61025c60048036036101208110156100f457600080fd5b81019060208101813564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b91939092909160208101903564010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184602083028401116401000000008311171561019557600080fd5b9193909290916020810190356401000000008111156101b357600080fd5b8201836020820111156101c557600080fd5b803590602001918460208302840111640100000000831117156101e757600080fd5b91939092909160208101903564010000000081111561020557600080fd5b82018360208201111561021757600080fd5b8035906020019184602083028401116401000000008311171561023957600080fd5b91935091508035906020810135906040810135906060810135906080013561030a565b005b6100b4610675565b61026e600181565b6040805161ffff9092168252519081900360200190f35b6100b46106ff565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6102e3600d81565b6040518082600e8111156102f9576102f9611507565b815260200191505060405180910390f35b60006103196084823681611536565b60008080808061032d366101248184611536565b604051602001808a8a808284378083019250505088815260200187815260200186815260200185815260200184815260200183838082843780830192505050995050505050505050505060405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a337f0000000000000000000000000000000000000000000000000000000000000000846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561046b578181015183820152602001610453565b50505050905090810190601f1680156104985780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000875af11580156104be573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561050557600080fd5b810190808051604051939291908464010000000082111561052557600080fd5b90830190602082018581111561053a57600080fd5b825164010000000081118282018810171561055457600080fd5b82525081516020918201929091019080838360005b83811015610581578181015183820152602001610569565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b50604052505050506106658e8e80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508d8d8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d91829185019084908082843760009201919091525061076c92505050565b5050505050505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636a4874a16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e2573d6000803e3d6000fd5b505050506040513d60208110156106f857600080fd5b5051919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663923c1d616040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e2573d6000803e3d6000fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b704336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d602081101561081057600080fd5b50519050600061081e610675565b905060018173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa15801561088e573d6000803e3d6000fd5b505050506040513d60208110156108a457600080fd5b5051111561096c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16083836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561095357600080fd5b505af1158015610967573d6000803e3d6000fd5b505050505b60006109766106ff565b905060018173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d60208110156109fc57600080fd5b50511115610ac4577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16084836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610aab57600080fd5b505af1158015610abf573d6000803e3d6000fd5b505050505b6000805b875181101561118057878181518110610ae357610ae3611560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b35573d6000803e3d6000fd5b505050506040513d6020811015610b4b57600080fd5b5051604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529151929450600192918516916370a08231916024808201926020929091908290030181865afa158015610bc8573d6000803e3d6000fd5b505050506040513d6020811015610bde57600080fd5b50511115610ca6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16086846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050505b6000888281518110610cba57610cba611560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166340c3544660006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381865afa158015610d18573d6000803e3d6000fd5b505050506040513d6020811015610d2e57600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff811615610f0e5760008173ffffffffffffffffffffffffffffffffffffffff1663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d6020811015610db157600080fd5b5051604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301529151929350600192918416916370a08231916024808201926020929091908290030181865afa158015610e2e573d6000803e3d6000fd5b505050506040513d6020811015610e4457600080fd5b50511115610f0c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16088836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610ef357600080fd5b505af1158015610f07573d6000803e3d6000fd5b505050505b505b6000898381518110610f2257610f22611560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166340c3544660016040518263ffffffff1660e01b815260040180828152602001915050602060405180830381865afa158015610f80573d6000803e3d6000fd5b505050506040513d6020811015610f9657600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff8116156111765760008173ffffffffffffffffffffffffffffffffffffffff1663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611003573d6000803e3d6000fd5b505050506040513d602081101561101957600080fd5b5051604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301529151929350600192918416916370a08231916024808201926020929091908290030181865afa158015611096573d6000803e3d6000fd5b505050506040513d60208110156110ac57600080fd5b50511115611174577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16089836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050505b505b5050600101610ac8565b5060005b865181101561136a5786818151811061119f5761119f611560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f1573d6000803e3d6000fd5b505050506040513d602081101561120757600080fd5b5051604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529151929450600192918516916370a08231916024808201926020929091908290030181865afa158015611284573d6000803e3d6000fd5b505050506040513d602081101561129a57600080fd5b50511115611362577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16086846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561134957600080fd5b505af115801561135d573d6000803e3d6000fd5b505050505b600101611184565b5060005b85518110156114fd57600186828151811061138b5761138b611560565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa1580156113fe573d6000803e3d6000fd5b505050506040513d602081101561141457600080fd5b505111156114f5577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f1608688848151811061146b5761146b611560565b60200260200101516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156114dc57600080fd5b505af11580156114f0573d6000803e3d6000fd5b505050505b60010161136e565b5050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000808585111561154657600080fd5b8386111561155357600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212200f28aa37d68b39c556e182aff134f71ea89a5e537a775640f78919714bd5038264736f6c634300080a0033";

type ConvexV1ClaimZapAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvexV1ClaimZapAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvexV1ClaimZapAdapter__factory extends ContractFactory {
  constructor(...args: ConvexV1ClaimZapAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _creditManager: string,
    _claimZap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConvexV1ClaimZapAdapter> {
    return super.deploy(
      _creditManager,
      _claimZap,
      overrides || {}
    ) as Promise<ConvexV1ClaimZapAdapter>;
  }
  override getDeployTransaction(
    _creditManager: string,
    _claimZap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creditManager,
      _claimZap,
      overrides || {}
    );
  }
  override attach(address: string): ConvexV1ClaimZapAdapter {
    return super.attach(address) as ConvexV1ClaimZapAdapter;
  }
  override connect(signer: Signer): ConvexV1ClaimZapAdapter__factory {
    return super.connect(signer) as ConvexV1ClaimZapAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexV1ClaimZapAdapterInterface {
    return new utils.Interface(_abi) as ConvexV1ClaimZapAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexV1ClaimZapAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConvexV1ClaimZapAdapter;
  }
}
