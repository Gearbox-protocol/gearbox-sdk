/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveV1AdapterMinter,
  CurveV1AdapterMinterInterface,
} from "../../../../../contracts/adapters/curve/CurveV1_Minter.sol/CurveV1AdapterMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "TokenIsNotInAllowedList",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditFacade",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gauge_addr",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610981380380610981833981016040819052610030916101a9565b81816001600160a01b038216158061004f57506001600160a01b038116155b1561006d57604051635919af9760e11b815260040160405180910390fd5b6001600160a01b038216608081905260408051632f7a188160e01b81529051632f7a1881916004808201926020929091908290030181865afa1580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db91906101dc565b6001600160a01b0390811660a05290811660c052600160005582161515905061011757604051635919af9760e11b815260040160405180910390fd5b806001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017991906101dc565b6001600160a01b031660e052506101fe9050565b80516001600160a01b03811681146101a457600080fd5b919050565b600080604083850312156101bc57600080fd5b6101c58361018d565b91506101d36020840161018d565b90509250929050565b6000602082840312156101ee57600080fd5b6101f78261018d565b9392505050565b60805160a05160c05160e05161072261025f6000396000818160e3015261039201526000818161013a015281816102ba015261041e015260006092015260008181610161015281816101cb0152818161028b01526103ba01526107226000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd90df701161005b578063bd90df7014610135578063c12c21c01461015c578063ce30bbdb14610183578063fc0c546a1461019257600080fd5b80632f7a18811461008d5780636a4874a1146100de5780636a6278421461010557806378aa73a41461011a575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101186101133660046104d5565b61019a565b005b610122600181565b60405161ffff90911681526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60096040516100d591906104f9565b6100b461041a565b6040517fe958b7040000000000000000000000000000000000000000000000000000000081523360048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e958b70490602401602060405180830381865afa158015610227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024b919061053a565b6040517f6ce4074a00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690636ce4074a906102e79033907f0000000000000000000000000000000000000000000000000000000000000000906000903690600401610557565b6000604051808303816000875af1158015610306573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261034c91908101906105fe565b506040517f51e3f16000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f000000000000000000000000000000000000000000000000000000000000000016906351e3f16090604401600060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab919061053a565b905090565b73ffffffffffffffffffffffffffffffffffffffff811681146104d257600080fd5b50565b6000602082840312156104e757600080fd5b81356104f2816104b0565b9392505050565b60208101600f8310610534577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561054c57600080fd5b81516104f2816104b0565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250606060408301528260608301528284608084013760006080848401015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116830101905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561061157600080fd5b825167ffffffffffffffff8082111561062957600080fd5b818501915085601f83011261063d57600080fd5b81518181111561064f5761064f6105cf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610695576106956105cf565b8160405282815288868487010111156106ad57600080fd5b600093505b828410156106cf57848401860151818501870152928501926106b2565b828411156106e05760008684830101525b9897505050505050505056fea2646970667358221220e449f4a7363f8b40af2a8efafac38c499f1daaa493463a114442cff2fbf2267564736f6c634300080a0033";

type CurveV1AdapterMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveV1AdapterMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveV1AdapterMinter__factory extends ContractFactory {
  constructor(...args: CurveV1AdapterMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _creditManager: string,
    _minter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveV1AdapterMinter> {
    return super.deploy(
      _creditManager,
      _minter,
      overrides || {}
    ) as Promise<CurveV1AdapterMinter>;
  }
  override getDeployTransaction(
    _creditManager: string,
    _minter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, _minter, overrides || {});
  }
  override attach(address: string): CurveV1AdapterMinter {
    return super.attach(address) as CurveV1AdapterMinter;
  }
  override connect(signer: Signer): CurveV1AdapterMinter__factory {
    return super.connect(signer) as CurveV1AdapterMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveV1AdapterMinterInterface {
    return new utils.Interface(_abi) as CurveV1AdapterMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveV1AdapterMinter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveV1AdapterMinter;
  }
}
